{"version":3,"sources":["../../src/components/layout/index.tsx","../../src/components/layout/sider/index.tsx","../../src/components/layout/header/index.tsx","../../src/components/layout/title/index.tsx","../../src/components/themedLayout/index.tsx","../../src/components/themedLayout/sider/index.tsx","../../src/components/themedLayout/header/index.tsx","../../src/components/themedLayout/title/index.tsx","../../src/components/themedLayoutV2/index.tsx","../../src/components/themedLayoutV2/sider/index.tsx","../../src/components/themedLayoutV2/title/index.tsx","../../src/hooks/usePagination/index.ts","../../src/hooks/useSiderVisible/index.ts","../../src/contexts/themedLayoutContext/index.tsx","../../src/hooks/useThemedLayoutContext/index.ts","../../src/components/themedLayoutV2/header/index.tsx","../../src/components/themedLayoutV2/hamburgerMenu/index.tsx","../../src/components/crud/list/index.tsx","../../src/components/crud/show/index.tsx","../../src/components/crud/edit/index.tsx","../../src/components/crud/create/index.tsx","../../src/components/buttons/create/index.tsx","../../src/components/buttons/edit/index.tsx","../../src/components/buttons/delete/index.tsx","../../src/components/buttons/refresh/index.tsx","../../src/components/buttons/show/index.tsx","../../src/components/buttons/list/index.tsx","../../src/components/buttons/export/index.tsx","../../src/components/buttons/save/index.tsx","../../src/components/buttons/clone/index.tsx","../../src/components/buttons/import/index.tsx","../../src/components/fields/text/index.tsx","../../src/components/fields/tag/index.tsx","../../src/components/fields/email/index.tsx","../../src/components/fields/boolean/index.tsx","../../src/components/fields/date/index.tsx","../../src/components/fields/file/index.tsx","../../src/components/fields/url/index.tsx","../../src/components/fields/number/index.tsx","../../src/components/fields/markdown/index.tsx","../../src/components/pages/ready/index.tsx","../../src/components/pages/welcome/index.tsx","../../src/components/pages/error/index.tsx","../../src/components/pages/auth/index.tsx","../../src/components/pages/auth/components/login/index.tsx","../../src/components/pages/auth/components/styles.ts","../../src/components/pages/auth/components/register/index.tsx","../../src/components/pages/auth/components/forgotPassword/index.tsx","../../src/components/pages/auth/components/updatePassword/index.tsx","../../src/components/breadcrumb/index.tsx","../../src/components/undoableNotification/index.tsx","../../src/components/autoSaveIndicator/index.tsx","../../src/theme/index.ts","../../src/providers/notificationProvider.tsx"],"sourcesContent":["import React from \"react\";\nimport { Box, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { Sider as DefaultSider } from \"./sider\";\nimport { Header as DefaultHeader } from \"./header\";\nimport { RefineLayoutLayoutProps } from \"./types\";\n\n/**\n * @deprecated use `<ThemedLayout>` instead with 100% backward compatibility.\n * @see https://refine.dev/docs/api-reference/chakra-ui/components/chakra-ui-themed-layout\n **/\nexport const Layout: React.FC<RefineLayoutLayoutProps> = ({\n    Sider,\n    Header,\n    Title,\n    Footer,\n    OffLayoutArea,\n    children,\n}) => {\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n\n    const bg = useColorModeValue(\"gray.100\", \"gray.900\");\n\n    return (\n        <Box display=\"flex\" bg={bg}>\n            <SiderToRender Title={Title} />\n            <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                flex={1}\n                overflow=\"hidden\"\n                minH=\"100vh\"\n            >\n                <HeaderToRender />\n                <Box p={[2, 4]}>{children}</Box>\n                {Footer && <Footer />}\n            </Box>\n            {OffLayoutArea && <OffLayoutArea />}\n        </Box>\n    );\n};\n","import React, { useState } from \"react\";\nimport {\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useLink,\n    useLogout,\n    useMenu,\n    useActiveAuthProvider,\n    useRefineContext,\n    useRouterContext,\n    useRouterType,\n    useTitle,\n    useTranslate,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\nimport {\n    Accordion,\n    AccordionButton,\n    AccordionIcon,\n    AccordionItem,\n    AccordionPanel,\n    Box,\n    Button,\n    Drawer,\n    DrawerContent,\n    DrawerOverlay,\n    IconButton,\n    Tooltip,\n    TooltipProps,\n    VStack,\n} from \"@chakra-ui/react\";\nimport {\n    IconList,\n    IconChevronRight,\n    IconChevronLeft,\n    IconDashboard,\n    IconLogout,\n    IconMenu2,\n} from \"@tabler/icons\";\n\nimport { Title as DefaultTitle } from \"@components\";\nimport { RefineLayoutSiderProps } from \"../types\";\n\nexport const Sider: React.FC<RefineLayoutSiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n}) => {\n    const [collapsed, setCollapsed] = useState(false);\n    const [opened, setOpened] = useState(false);\n\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const TitleFromContext = useTitle();\n    const isExistAuthentication = useIsExistAuthentication();\n    const t = useTranslate();\n    const { hasDashboard } = useRefineContext();\n    const authProvider = useActiveAuthProvider();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n    const siderWidth = () => {\n        if (collapsed) return \"80px\";\n        return \"200px\";\n    };\n\n    const commonTooltipProps: Omit<TooltipProps, \"children\"> = {\n        placement: \"right\",\n        hasArrow: true,\n        isDisabled: !collapsed || opened,\n    };\n\n    const renderTreeView = (tree: ITreeMenu[]) => {\n        return tree.map((item) => {\n            const { label, route, name, icon, children } = item;\n\n            const isSelected = item.key === selectedKey;\n            const isParent = children.length > 0;\n\n            const linkProps = !isParent\n                ? {\n                      as: Link,\n                      to: route,\n                  }\n                : undefined;\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{\n                        resource: item,\n                    }}\n                >\n                    <Accordion\n                        defaultIndex={\n                            defaultOpenKeys.includes(item.key || \"\") ? 0 : -1\n                        }\n                        width=\"full\"\n                        allowToggle\n                    >\n                        <AccordionItem border=\"none\">\n                            <Tooltip label={label} {...commonTooltipProps}>\n                                <AccordionButton\n                                    pl={6}\n                                    pr={4}\n                                    pt={3}\n                                    pb={3}\n                                    as=\"div\"\n                                    width=\"full\"\n                                >\n                                    <Button\n                                        width=\"full\"\n                                        variant=\"link\"\n                                        color=\"white\"\n                                        fontWeight=\"normal\"\n                                        leftIcon={\n                                            icon ??\n                                            ((\n                                                <>\n                                                    <IconList size={20} />\n                                                </>\n                                            ) as any)\n                                        }\n                                        rightIcon={\n                                            isParent ? (\n                                                <AccordionIcon />\n                                            ) : undefined\n                                        }\n                                        _active={{\n                                            color: \"none\",\n                                            fontWeight: isParent\n                                                ? \"normal\"\n                                                : \"bold\",\n                                        }}\n                                        _hover={{ textDecoration: \"none\" }}\n                                        isActive={isSelected}\n                                        {...linkProps}\n                                    >\n                                        {(!collapsed || opened) && (\n                                            <Box flexGrow={1} textAlign=\"left\">\n                                                {label}\n                                            </Box>\n                                        )}\n                                    </Button>\n                                </AccordionButton>\n                            </Tooltip>\n\n                            {isParent && (\n                                <AccordionPanel\n                                    p={0}\n                                    pl={collapsed && !opened ? 0 : 4}\n                                >\n                                    <Accordion width=\"full\" allowToggle>\n                                        {renderTreeView(children)}\n                                    </Accordion>\n                                </AccordionPanel>\n                            )}\n                        </AccordionItem>\n                    </Accordion>\n                </CanAccess>\n            );\n        });\n    };\n\n    const items = renderTreeView(menuItems);\n\n    const dashboard = hasDashboard ? (\n        <CanAccess resource=\"dashboard\" action=\"list\">\n            <Tooltip\n                label={t(\"dashboard.title\", \"Dashboard\")}\n                {...commonTooltipProps}\n            >\n                <Button\n                    width=\"full\"\n                    justifyContent={\n                        collapsed && !opened ? \"center\" : \"flex-start\"\n                    }\n                    pl={6}\n                    pr={4}\n                    pt={3}\n                    pb={3}\n                    fontWeight=\"normal\"\n                    leftIcon={<IconDashboard size={20} />}\n                    variant=\"link\"\n                    color=\"white\"\n                    isActive={selectedKey === \"/\"}\n                    _active={{ color: \"none\", fontWeight: \"bold\" }}\n                    _hover={{ textDecoration: \"none\" }}\n                    as={Link}\n                    to=\"/\"\n                >\n                    {(!collapsed || opened) &&\n                        t(\"dashboard.title\", \"Dashboard\")}\n                </Button>\n            </Tooltip>\n        </CanAccess>\n    ) : null;\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                t(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Tooltip label={t(\"buttons.logout\", \"Logout\")} {...commonTooltipProps}>\n            <Button\n                width=\"full\"\n                justifyContent={collapsed && !opened ? \"center\" : \"flex-start\"}\n                pl={6}\n                pr={4}\n                pt={3}\n                pb={3}\n                fontWeight=\"normal\"\n                leftIcon={<IconLogout size={20} />}\n                variant=\"link\"\n                _active={{ color: \"none\" }}\n                _hover={{ textDecoration: \"none\" }}\n                color=\"white\"\n                onClick={handleLogout}\n            >\n                {(!collapsed || opened) && t(\"buttons.logout\", \"Logout\")}\n            </Button>\n        </Tooltip>\n    );\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                logout,\n                items,\n                collapsed: false,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    return (\n        <>\n            <Box\n                position=\"fixed\"\n                top={16}\n                left={0}\n                zIndex={1200}\n                display={[\"block\", \"block\", \"none\", \"none\", \"none\"]}\n            >\n                <IconButton\n                    borderLeftRadius={0}\n                    bg=\"sider.background\"\n                    color=\"white\"\n                    _hover={{ bg: \"sider.background\" }}\n                    _active={{\n                        bg: \"sider.background\",\n                        transform: \"translateY(1px)\",\n                    }}\n                    aria-label=\"Open Menu\"\n                    onClick={() => setOpened((prev) => !prev)}\n                >\n                    <IconMenu2 />\n                </IconButton>\n            </Box>\n            <Drawer\n                placement=\"left\"\n                isOpen={opened}\n                onClose={() => setOpened(false)}\n            >\n                <DrawerOverlay />\n                <DrawerContent w=\"200px\" maxW=\"200px\" bg=\"sider.background\">\n                    <Box display=\"flex\" justifyContent=\"center\" py={4}>\n                        <RenderToTitle collapsed={false} />\n                    </Box>\n                    <VStack\n                        mt={2}\n                        color=\"white\"\n                        alignItems=\"start\"\n                        flexGrow={1}\n                    >\n                        <Box width=\"full\">{renderSider()}</Box>\n                    </VStack>\n                </DrawerContent>\n            </Drawer>\n\n            <Box\n                display={[\"none\", \"none\", \"flex\"]}\n                width={siderWidth()}\n                transition=\"width 200ms ease, min-width 200ms ease\"\n                flexShrink={0}\n            />\n            <Box\n                bg=\"sider.background\"\n                position=\"fixed\"\n                width={siderWidth()}\n                top={0}\n                h=\"100vh\"\n                display={[\"none\", \"none\", \"flex\"]}\n                flexDirection=\"column\"\n                transition=\"width 200ms ease, min-width 200ms ease\"\n            >\n                <Box display=\"flex\" justifyContent=\"center\" py={4}>\n                    <RenderToTitle collapsed={collapsed} />\n                </Box>\n                <VStack mt={2} color=\"white\" alignItems=\"start\" flexGrow={1}>\n                    <Box width=\"full\">{renderSider()}</Box>\n                </VStack>\n                <Button\n                    onClick={() => setCollapsed((prev) => !prev)}\n                    color=\"white\"\n                    bg=\"sider.collapseButton\"\n                    borderRadius={0}\n                    _hover={{ bg: \"sider.collapseButton\" }}\n                    _active={{\n                        bg: \"sider.collapseButton\",\n                        transform: \"translateY(1px)\",\n                    }}\n                >\n                    {collapsed ? <IconChevronRight /> : <IconChevronLeft />}\n                </Button>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport { useGetIdentity, useActiveAuthProvider } from \"@refinedev/core\";\nimport { Box, Avatar, Text, HStack } from \"@chakra-ui/react\";\n\nimport { RefineLayoutHeaderProps } from \"../types\";\n\nexport const Header: React.FC<RefineLayoutHeaderProps> = () => {\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const shouldRenderHeader = user && (user.name || user.avatar);\n\n    return shouldRenderHeader ? (\n        <Box\n            py=\"2\"\n            px=\"4\"\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            w=\"full\"\n            bg=\"chakra-body-bg\"\n        >\n            <HStack>\n                <Text size=\"sm\" fontWeight=\"bold\">\n                    {user?.name}\n                </Text>\n                <Avatar size=\"sm\" name={user?.name} src={user?.avatar} />\n            </HStack>\n        </Box>\n    ) : null;\n};\n","import React from \"react\";\nimport {\n    useRouterContext,\n    useRouterType,\n    useLink,\n    TitleProps,\n} from \"@refinedev/core\";\nimport { Link as ChakraLink } from \"@chakra-ui/react\";\n\nexport const Title: React.FC<TitleProps> = ({ collapsed }) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <ChakraLink as={ActiveLink} to=\"/\">\n            {collapsed ? (\n                <img\n                    src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine-mini.svg\"\n                    alt=\"Refine\"\n                    style={{ maxHeight: \"38px\" }}\n                />\n            ) : (\n                <img\n                    src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                    alt=\"Refine\"\n                    width=\"140px\"\n                    style={{ minHeight: \"38px\" }}\n                />\n            )}\n        </ChakraLink>\n    );\n};\n","import React, { useState } from \"react\";\nimport { Box } from \"@chakra-ui/react\";\n\nimport { ThemedSider as DefaultSider } from \"./sider\";\nimport { ThemedHeader as DefaultHeader } from \"./header\";\nimport { RefineThemedLayoutProps } from \"./types\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/chakra-ui/components/chakra-ui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedLayout: React.FC<RefineThemedLayoutProps> = ({\n    Sider,\n    Header,\n    Title,\n    Footer,\n    OffLayoutArea,\n    children,\n}) => {\n    const [isSiderOpen, setIsSiderOpen] = useState(true);\n\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n\n    return (\n        <Box display=\"flex\">\n            <SiderToRender Title={Title} isSiderOpen={isSiderOpen} />\n            <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                flex={1}\n                overflow=\"hidden\"\n                minH=\"100vh\"\n            >\n                <HeaderToRender\n                    isSiderOpen={isSiderOpen}\n                    onToggleSiderClick={() => {\n                        return setIsSiderOpen((prevValue) => !prevValue);\n                    }}\n                />\n                <Box p={[2, 4]}>{children}</Box>\n                {Footer && <Footer />}\n            </Box>\n            {OffLayoutArea && <OffLayoutArea />}\n        </Box>\n    );\n};\n","import React, { useState } from \"react\";\nimport {\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useLink,\n    useLogout,\n    useMenu,\n    useActiveAuthProvider,\n    useRefineContext,\n    useRouterContext,\n    useRouterType,\n    useTitle,\n    useTranslate,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\nimport {\n    Accordion,\n    AccordionButton,\n    AccordionIcon,\n    AccordionItem,\n    AccordionPanel,\n    Box,\n    Button,\n    Drawer,\n    DrawerContent,\n    DrawerOverlay,\n    IconButton,\n    Tooltip,\n    TooltipProps,\n    useColorModeValue,\n    VStack,\n} from \"@chakra-ui/react\";\nimport { IconList, IconDashboard, IconPower, IconMenu2 } from \"@tabler/icons\";\n\nimport { ThemedTitle as DefaultTitle } from \"@components\";\nimport { RefineThemedLayoutSiderProps } from \"../types\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/chakra-ui/components/chakra-ui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedSider: React.FC<RefineThemedLayoutSiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n    isSiderOpen,\n}) => {\n    const [opened, setOpened] = useState(false);\n\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const TitleFromContext = useTitle();\n    const isExistAuthentication = useIsExistAuthentication();\n    const t = useTranslate();\n    const { hasDashboard } = useRefineContext();\n    const authProvider = useActiveAuthProvider();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n    const siderWidth = () => {\n        if (!isSiderOpen) return \"56px\";\n        return \"200px\";\n    };\n\n    const commonTooltipProps: Omit<TooltipProps, \"children\"> = {\n        placement: \"right\",\n        hasArrow: true,\n        isDisabled: isSiderOpen || opened,\n    };\n\n    const renderTreeView = (tree: ITreeMenu[]) => {\n        return tree.map((item) => {\n            const { label, route, name, icon, children } = item;\n\n            const isSelected = item.key === selectedKey;\n            const isParent = children.length > 0;\n\n            const linkProps = !isParent\n                ? {\n                      as: Link,\n                      to: route,\n                  }\n                : undefined;\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{\n                        resource: item,\n                    }}\n                >\n                    <Accordion\n                        defaultIndex={\n                            defaultOpenKeys.includes(item.key || \"\") ? 0 : -1\n                        }\n                        width=\"full\"\n                        mb={2}\n                        allowToggle\n                    >\n                        <AccordionItem border=\"none\">\n                            <Tooltip label={label} {...commonTooltipProps}>\n                                <AccordionButton\n                                    px={0}\n                                    py={0}\n                                    as=\"div\"\n                                    width=\"full\"\n                                    _hover={{\n                                        backgroundColor: \"transparent\",\n                                    }}\n                                >\n                                    <Button\n                                        colorScheme={\n                                            isSelected ? \"brand\" : \"gray\"\n                                        }\n                                        borderRadius={0}\n                                        pl={!isSiderOpen && !opened ? 6 : 5}\n                                        width=\"full\"\n                                        variant=\"ghost\"\n                                        fontWeight=\"normal\"\n                                        leftIcon={\n                                            icon ??\n                                            ((\n                                                <>\n                                                    <IconList size={16} />\n                                                </>\n                                            ) as any)\n                                        }\n                                        rightIcon={\n                                            isParent ? (\n                                                <AccordionIcon color=\"brand.100\" />\n                                            ) : undefined\n                                        }\n                                        _active={{\n                                            _before: {\n                                                content: \"''\",\n                                                bgColor: useColorModeValue(\n                                                    \"brand.200\",\n                                                    \"brand.200\",\n                                                ),\n                                                opacity: 0.05,\n                                                position: \"absolute\",\n                                                top: 0,\n                                                bottom: 0,\n                                                left: 0,\n                                                right: 0,\n                                                width: \"100%\",\n                                                height: \"100%\",\n                                            },\n                                            borderRight: \"4px\",\n                                            borderRightColor: \"brand.200\",\n                                        }}\n                                        isActive={isSelected}\n                                        {...linkProps}\n                                    >\n                                        {(isSiderOpen || opened) && (\n                                            <Box flexGrow={1} textAlign=\"left\">\n                                                {label}\n                                            </Box>\n                                        )}\n                                    </Button>\n                                </AccordionButton>\n                            </Tooltip>\n\n                            {isParent && (\n                                <AccordionPanel\n                                    p={0}\n                                    pl={!isSiderOpen && !opened ? 0 : 4}\n                                >\n                                    <Accordion width=\"full\" allowToggle>\n                                        {renderTreeView(children)}\n                                    </Accordion>\n                                </AccordionPanel>\n                            )}\n                        </AccordionItem>\n                    </Accordion>\n                </CanAccess>\n            );\n        });\n    };\n\n    const items = renderTreeView(menuItems);\n\n    const dashboard = hasDashboard ? (\n        <CanAccess resource=\"dashboard\" action=\"list\">\n            <Tooltip\n                label={t(\"dashboard.title\", \"Dashboard\")}\n                {...commonTooltipProps}\n            >\n                <Button\n                    width=\"full\"\n                    justifyContent={\n                        !isSiderOpen && !opened ? \"center\" : \"flex-start\"\n                    }\n                    fontWeight=\"normal\"\n                    leftIcon={<IconDashboard size={16} />}\n                    variant=\"ghost\"\n                    isActive={selectedKey === \"/\"}\n                    _active={{\n                        color: \"brand.200\",\n                        backgroundColor: \"brand.900\",\n                    }}\n                    as={Link}\n                    to=\"/\"\n                >\n                    {(isSiderOpen || opened) &&\n                        t(\"dashboard.title\", \"Dashboard\")}\n                </Button>\n            </Tooltip>\n        </CanAccess>\n    ) : null;\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                t(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Tooltip label={t(\"buttons.logout\", \"Logout\")} {...commonTooltipProps}>\n            <Box p={0}>\n                <Button\n                    borderRadius={0}\n                    width=\"full\"\n                    justifyContent={\n                        !isSiderOpen && !opened ? \"center\" : \"flex-start\"\n                    }\n                    pl={!isSiderOpen && !opened ? 6 : 5}\n                    fontWeight=\"normal\"\n                    leftIcon={<IconPower size={16} />}\n                    variant=\"ghost\"\n                    _active={{\n                        color: \"brand.200\",\n                        backgroundColor: \"brand.900\",\n                    }}\n                    onClick={handleLogout}\n                >\n                    {(isSiderOpen || opened) && t(\"buttons.logout\", \"Logout\")}\n                </Button>\n            </Box>\n        </Tooltip>\n    );\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                logout,\n                items,\n                collapsed: false,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    return (\n        <>\n            <Box\n                position=\"fixed\"\n                top={3}\n                left={0}\n                zIndex={1200}\n                display={[\"block\", \"block\", \"none\", \"none\", \"none\"]}\n            >\n                <IconButton\n                    borderLeftRadius={0}\n                    aria-label=\"Open Menu\"\n                    onClick={() => setOpened((prev) => !prev)}\n                >\n                    <IconMenu2 />\n                </IconButton>\n            </Box>\n            <Drawer\n                placement=\"left\"\n                isOpen={opened}\n                onClose={() => setOpened(false)}\n            >\n                <DrawerOverlay />\n                <DrawerContent w=\"200px\" maxW=\"200px\">\n                    <Box\n                        display=\"flex\"\n                        pl={4}\n                        alignItems=\"center\"\n                        height=\"64px\"\n                        fontSize=\"14px\"\n                        bg={useColorModeValue(\n                            \"refine.sider.header.light\",\n                            \"refine.sider.header.dark\",\n                        )}\n                    >\n                        <RenderToTitle collapsed={false} />\n                    </Box>\n                    <VStack\n                        alignItems=\"start\"\n                        flexGrow={1}\n                        bg={useColorModeValue(\n                            \"refine.sider.bg.light\",\n                            \"refine.sider.bg.dark\",\n                        )}\n                    >\n                        <Box width=\"full\">{renderSider()}</Box>\n                    </VStack>\n                </DrawerContent>\n            </Drawer>\n\n            <Box\n                display={[\"none\", \"none\", \"flex\"]}\n                width={siderWidth()}\n                transition=\"width 200ms ease, min-width 200ms ease\"\n                flexShrink={0}\n            />\n            <Box\n                position=\"fixed\"\n                width={siderWidth()}\n                top={0}\n                h=\"100vh\"\n                display={[\"none\", \"none\", \"flex\"]}\n                flexDirection=\"column\"\n                transition=\"width 200ms ease, min-width 200ms ease\"\n            >\n                <Box\n                    display=\"flex\"\n                    pl={!isSiderOpen ? 0 : 4}\n                    justifyContent={!isSiderOpen ? \"center\" : \"flex-start\"}\n                    alignItems=\"center\"\n                    fontSize=\"14px\"\n                    height=\"64px\"\n                    borderRight=\"1px\"\n                    borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n                    bg={useColorModeValue(\n                        \"refine.sider.header.light\",\n                        \"refine.sider.header.dark\",\n                    )}\n                >\n                    <RenderToTitle collapsed={!isSiderOpen} />\n                </Box>\n                <VStack\n                    alignItems=\"start\"\n                    paddingTop={2}\n                    flexGrow={1}\n                    borderRight=\"1px\"\n                    borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n                    bg={useColorModeValue(\n                        \"refine.sider.bg.light\",\n                        \"refine.sider.bg.dark\",\n                    )}\n                >\n                    <Box width=\"full\">{renderSider()}</Box>\n                </VStack>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport { useGetIdentity, useActiveAuthProvider } from \"@refinedev/core\";\nimport {\n    Box,\n    Avatar,\n    Text,\n    HStack,\n    useColorModeValue,\n    IconButton,\n    Icon,\n} from \"@chakra-ui/react\";\nimport { RefineThemedLayoutHeaderProps } from \"../types\";\nimport {\n    IconLayoutSidebarLeftCollapse,\n    IconLayoutSidebarLeftExpand,\n} from \"@tabler/icons\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/chakra-ui/components/chakra-ui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedHeader: React.FC<RefineThemedLayoutHeaderProps> = ({\n    isSiderOpen,\n    onToggleSiderClick,\n    toggleSiderIcon: toggleSiderIconFromProps,\n}) => {\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const bgColor = useColorModeValue(\n        \"refine.header.bg.light\",\n        \"refine.header.bg.dark\",\n    );\n\n    const hasSidebarToggle = Boolean(onToggleSiderClick);\n\n    return (\n        <Box\n            py=\"2\"\n            pr=\"4\"\n            pl=\"2\"\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent={\n                hasSidebarToggle\n                    ? { base: \"flex-end\", md: \"space-between\" }\n                    : \"flex-end\"\n            }\n            w=\"full\"\n            height=\"64px\"\n            bg={bgColor}\n            borderBottom=\"1px\"\n            borderBottomColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n        >\n            {hasSidebarToggle && (\n                <IconButton\n                    display={{ base: \"none\", md: \"flex\" }}\n                    backgroundColor=\"transparent\"\n                    aria-label=\"sidebar-toggle\"\n                    onClick={() => onToggleSiderClick?.()}\n                >\n                    {toggleSiderIconFromProps?.(Boolean(isSiderOpen)) ??\n                        (isSiderOpen ? (\n                            <Icon\n                                as={IconLayoutSidebarLeftCollapse}\n                                boxSize={\"24px\"}\n                            />\n                        ) : (\n                            <Icon\n                                as={IconLayoutSidebarLeftExpand}\n                                boxSize={\"24px\"}\n                            />\n                        ))}\n                </IconButton>\n            )}\n\n            <HStack>\n                {user?.name && (\n                    <Text size=\"sm\" fontWeight=\"bold\">\n                        {user.name}\n                    </Text>\n                )}\n                {user?.avatar && (\n                    <Avatar\n                        size=\"sm\"\n                        name={user?.name || \"Profile Photo\"}\n                        src={user.avatar}\n                    />\n                )}\n            </HStack>\n        </Box>\n    );\n};\n","import React from \"react\";\nimport { useRouterContext, useRouterType, useLink } from \"@refinedev/core\";\nimport { Link as ChakraLink, Icon, HStack, Heading } from \"@chakra-ui/react\";\nimport { RefineLayoutThemedTitleProps } from \"../types\";\n\nconst defaultText = \"refine Project\";\n\nconst defaultIcon = (\n    <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-testid=\"refine-logo\"\n    >\n        <path\n            d=\"M12 9C13.6569 9 15 7.65685 15 6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6C9 7.65685 10.3431 9 12 9Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM8 6C8 3.79086 9.79086 2 12 2C14.2091 2 16 3.79086 16 6V18C16 20.2091 14.2091 22 12 22C9.79086 22 8 20.2091 8 18V6Z\"\n            fill=\"currentColor\"\n        />\n    </svg>\n);\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/chakra-ui/components/chakra-ui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedTitle: React.FC<RefineLayoutThemedTitleProps> = ({\n    collapsed,\n    icon = defaultIcon,\n    text = defaultText,\n    wrapperStyles,\n}) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <ChakraLink\n            as={ActiveLink}\n            to=\"/\"\n            fontSize=\"inherit\"\n            textDecoration=\"none\"\n            _hover={{\n                textDecoration: \"none\",\n            }}\n        >\n            <HStack\n                spacing=\"8px\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                fontSize=\"inherit\"\n                style={{\n                    ...wrapperStyles,\n                }}\n            >\n                <Icon height=\"24px\" width=\"24px\" color=\"brand.500\">\n                    {icon}\n                </Icon>\n\n                {!collapsed && (\n                    <Heading as=\"h6\" fontWeight={700} fontSize=\"inherit\">\n                        {text}\n                    </Heading>\n                )}\n            </HStack>\n        </ChakraLink>\n    );\n};\n","import React from \"react\";\nimport { Box } from \"@chakra-ui/react\";\n\nimport { ThemedSiderV2 as DefaultSider } from \"./sider\";\nimport { ThemedHeaderV2 as DefaultHeader } from \"./header\";\nimport { RefineThemedLayoutV2Props } from \"./types\";\nimport { ThemedLayoutContextProvider } from \"../../contexts\";\n\nexport const ThemedLayoutV2: React.FC<RefineThemedLayoutV2Props> = ({\n    Sider,\n    Header,\n    Title,\n    Footer,\n    OffLayoutArea,\n    children,\n    initialSiderCollapsed,\n}) => {\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n\n    return (\n        <ThemedLayoutContextProvider\n            initialSiderCollapsed={initialSiderCollapsed}\n        >\n            <Box display=\"flex\">\n                <SiderToRender Title={Title} />\n                <Box\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    flex={1}\n                    minH=\"100vh\"\n                    overflow=\"clip\"\n                >\n                    <HeaderToRender />\n                    <Box p={[2, 4]}>{children}</Box>\n                    {Footer && <Footer />}\n                </Box>\n                {OffLayoutArea && <OffLayoutArea />}\n            </Box>\n        </ThemedLayoutContextProvider>\n    );\n};\n","import React, { CSSProperties } from \"react\";\nimport {\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useLink,\n    useLogout,\n    useMenu,\n    useActiveAuthProvider,\n    useRefineContext,\n    useRouterContext,\n    useRouterType,\n    useTitle,\n    useTranslate,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\nimport {\n    Accordion,\n    AccordionButton,\n    AccordionIcon,\n    AccordionItem,\n    AccordionPanel,\n    Box,\n    Button,\n    Drawer,\n    DrawerContent,\n    DrawerOverlay,\n    Tooltip,\n    TooltipProps,\n    useColorModeValue,\n    VStack,\n} from \"@chakra-ui/react\";\nimport { IconList, IconDashboard, IconPower } from \"@tabler/icons\";\n\nimport { ThemedTitleV2 as DefaultTitle } from \"../title\";\nimport { RefineThemedLayoutV2SiderProps } from \"../types\";\nimport { useThemedLayoutContext } from \"@hooks\";\n\nexport const ThemedSiderV2: React.FC<RefineThemedLayoutV2SiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n    activeItemDisabled = false,\n}) => {\n    const { siderCollapsed, mobileSiderOpen, setMobileSiderOpen } =\n        useThemedLayoutContext();\n\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const TitleFromContext = useTitle();\n    const isExistAuthentication = useIsExistAuthentication();\n    const t = useTranslate();\n    const { hasDashboard } = useRefineContext();\n    const authProvider = useActiveAuthProvider();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n    const siderWidth = () => {\n        if (siderCollapsed) return \"56px\";\n        return \"200px\";\n    };\n\n    const commonTooltipProps: Omit<TooltipProps, \"children\"> = {\n        placement: \"right\",\n        hasArrow: true,\n        isDisabled: !siderCollapsed || mobileSiderOpen,\n    };\n\n    const renderTreeView = (tree: ITreeMenu[]) => {\n        return tree.map((item) => {\n            const { label, route, name, icon, children } = item;\n\n            const isSelected = item.key === selectedKey;\n            const isParent = children.length > 0;\n\n            const linkProps = !isParent\n                ? {\n                      as: Link,\n                      to: route,\n                  }\n                : undefined;\n\n            const linkStyle: CSSProperties =\n                activeItemDisabled && isSelected\n                    ? { pointerEvents: \"none\" }\n                    : {};\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{\n                        resource: item,\n                    }}\n                >\n                    <Accordion\n                        defaultIndex={\n                            defaultOpenKeys.includes(item.key || \"\") ? 0 : -1\n                        }\n                        width=\"full\"\n                        mb={2}\n                        allowToggle\n                    >\n                        <AccordionItem border=\"none\">\n                            <Tooltip label={label} {...commonTooltipProps}>\n                                <AccordionButton\n                                    px={0}\n                                    py={0}\n                                    as=\"div\"\n                                    width=\"full\"\n                                    _hover={{\n                                        backgroundColor: \"transparent\",\n                                    }}\n                                >\n                                    <Button\n                                        colorScheme={\n                                            isSelected ? \"brand\" : \"gray\"\n                                        }\n                                        borderRadius={0}\n                                        pl={\n                                            siderCollapsed && !mobileSiderOpen\n                                                ? 6\n                                                : 5\n                                        }\n                                        width=\"full\"\n                                        variant=\"ghost\"\n                                        fontWeight=\"normal\"\n                                        leftIcon={\n                                            icon ??\n                                            ((\n                                                <>\n                                                    <IconList size={16} />\n                                                </>\n                                            ) as any)\n                                        }\n                                        rightIcon={\n                                            isParent ? (\n                                                <AccordionIcon color=\"brand.100\" />\n                                            ) : undefined\n                                        }\n                                        _active={{\n                                            _before: {\n                                                content: \"''\",\n                                                bgColor: useColorModeValue(\n                                                    \"brand.200\",\n                                                    \"brand.200\",\n                                                ),\n                                                opacity: 0.05,\n                                                position: \"absolute\",\n                                                top: 0,\n                                                bottom: 0,\n                                                left: 0,\n                                                right: 0,\n                                                width: \"100%\",\n                                                height: \"100%\",\n                                            },\n                                            borderRight: \"4px\",\n                                            borderRightColor: \"brand.200\",\n                                        }}\n                                        isActive={isSelected}\n                                        style={linkStyle}\n                                        {...linkProps}\n                                    >\n                                        {(mobileSiderOpen ||\n                                            !siderCollapsed) && (\n                                            <Box flexGrow={1} textAlign=\"left\">\n                                                {label}\n                                            </Box>\n                                        )}\n                                    </Button>\n                                </AccordionButton>\n                            </Tooltip>\n\n                            {isParent && (\n                                <AccordionPanel\n                                    p={0}\n                                    pl={\n                                        siderCollapsed && !mobileSiderOpen\n                                            ? 0\n                                            : 4\n                                    }\n                                >\n                                    <Accordion width=\"full\" allowToggle>\n                                        {renderTreeView(children)}\n                                    </Accordion>\n                                </AccordionPanel>\n                            )}\n                        </AccordionItem>\n                    </Accordion>\n                </CanAccess>\n            );\n        });\n    };\n\n    const items = renderTreeView(menuItems);\n\n    const dashboard = hasDashboard ? (\n        <CanAccess resource=\"dashboard\" action=\"list\">\n            <Tooltip\n                label={t(\"dashboard.title\", \"Dashboard\")}\n                {...commonTooltipProps}\n            >\n                <Button\n                    width=\"full\"\n                    justifyContent={\n                        !mobileSiderOpen && siderCollapsed\n                            ? \"center\"\n                            : \"flex-start\"\n                    }\n                    fontWeight=\"normal\"\n                    leftIcon={<IconDashboard size={16} />}\n                    variant=\"ghost\"\n                    isActive={selectedKey === \"/\"}\n                    _active={{\n                        color: \"brand.200\",\n                        backgroundColor: \"brand.900\",\n                    }}\n                    as={Link}\n                    to=\"/\"\n                >\n                    {(mobileSiderOpen || !siderCollapsed) &&\n                        t(\"dashboard.title\", \"Dashboard\")}\n                </Button>\n            </Tooltip>\n        </CanAccess>\n    ) : null;\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                t(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Tooltip label={t(\"buttons.logout\", \"Logout\")} {...commonTooltipProps}>\n            <Box p={0}>\n                <Button\n                    borderRadius={0}\n                    width=\"full\"\n                    justifyContent={\n                        !mobileSiderOpen && siderCollapsed\n                            ? \"center\"\n                            : \"flex-start\"\n                    }\n                    pl={!mobileSiderOpen && siderCollapsed ? 6 : 5}\n                    fontWeight=\"normal\"\n                    leftIcon={<IconPower size={16} />}\n                    variant=\"ghost\"\n                    _active={{\n                        color: \"brand.200\",\n                        backgroundColor: \"brand.900\",\n                    }}\n                    onClick={handleLogout}\n                >\n                    {(mobileSiderOpen || !siderCollapsed) &&\n                        t(\"buttons.logout\", \"Logout\")}\n                </Button>\n            </Box>\n        </Tooltip>\n    );\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                logout,\n                items,\n                collapsed: false,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    return (\n        <>\n            <Drawer\n                placement=\"left\"\n                isOpen={mobileSiderOpen}\n                onClose={() => setMobileSiderOpen(!mobileSiderOpen)}\n            >\n                <DrawerOverlay />\n                <DrawerContent w=\"200px\" maxW=\"200px\">\n                    <Box\n                        display=\"flex\"\n                        flexShrink={0}\n                        pl={4}\n                        alignItems=\"center\"\n                        height=\"64px\"\n                        fontSize=\"14px\"\n                        bg={useColorModeValue(\n                            \"refine.sider.header.light\",\n                            \"refine.sider.header.dark\",\n                        )}\n                        borderBottom=\"1px\"\n                        borderBottomColor={useColorModeValue(\n                            \"gray.200\",\n                            \"gray.700\",\n                        )}\n                    >\n                        <RenderToTitle collapsed={false} />\n                    </Box>\n                    <VStack\n                        alignItems=\"start\"\n                        flexGrow={1}\n                        bg={useColorModeValue(\n                            \"refine.sider.bg.light\",\n                            \"refine.sider.bg.dark\",\n                        )}\n                        overflow=\"auto\"\n                    >\n                        <Box width=\"full\">{renderSider()}</Box>\n                    </VStack>\n                </DrawerContent>\n            </Drawer>\n\n            <Box\n                display={[\"none\", \"none\", \"flex\"]}\n                width={siderWidth()}\n                transition=\"width 200ms ease, min-width 200ms ease\"\n                flexShrink={0}\n            />\n            <Box\n                position=\"fixed\"\n                width={siderWidth()}\n                top={0}\n                h=\"100vh\"\n                display={[\"none\", \"none\", \"flex\"]}\n                flexDirection=\"column\"\n                transition=\"width 200ms ease, min-width 200ms ease\"\n            >\n                <Box\n                    display=\"flex\"\n                    flexShrink={0}\n                    pl={siderCollapsed ? 0 : 4}\n                    justifyContent={siderCollapsed ? \"center\" : \"flex-start\"}\n                    alignItems=\"center\"\n                    fontSize=\"14px\"\n                    height=\"64px\"\n                    borderRight=\"1px\"\n                    borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n                    borderBottom=\"1px\"\n                    borderBottomColor={useColorModeValue(\n                        \"gray.200\",\n                        \"gray.700\",\n                    )}\n                    bg={useColorModeValue(\n                        \"refine.sider.header.light\",\n                        \"refine.sider.header.dark\",\n                    )}\n                >\n                    <RenderToTitle collapsed={siderCollapsed} />\n                </Box>\n                <VStack\n                    alignItems=\"start\"\n                    paddingY={2}\n                    height=\"100%\"\n                    flexGrow={1}\n                    borderRight=\"1px\"\n                    borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n                    bg={useColorModeValue(\n                        \"refine.sider.bg.light\",\n                        \"refine.sider.bg.dark\",\n                    )}\n                >\n                    <Box width=\"full\" overflow=\"auto\">\n                        {renderSider()}\n                    </Box>\n                </VStack>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport { useRouterContext, useRouterType, useLink } from \"@refinedev/core\";\nimport { Link as ChakraLink, Icon, HStack, Heading } from \"@chakra-ui/react\";\nimport { RefineLayoutThemedTitleProps } from \"../types\";\n\nconst defaultText = \"refine Project\";\n\nconst defaultIcon = (\n    <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-testid=\"refine-logo\"\n    >\n        <path\n            d=\"M12 9C13.6569 9 15 7.65685 15 6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6C9 7.65685 10.3431 9 12 9Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM8 6C8 3.79086 9.79086 2 12 2C14.2091 2 16 3.79086 16 6V18C16 20.2091 14.2091 22 12 22C9.79086 22 8 20.2091 8 18V6Z\"\n            fill=\"currentColor\"\n        />\n    </svg>\n);\n\nexport const ThemedTitleV2: React.FC<RefineLayoutThemedTitleProps> = ({\n    collapsed,\n    icon = defaultIcon,\n    text = defaultText,\n    wrapperStyles,\n}) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <ChakraLink\n            as={ActiveLink}\n            to=\"/\"\n            fontSize=\"inherit\"\n            textDecoration=\"none\"\n            _hover={{\n                textDecoration: \"none\",\n            }}\n        >\n            <HStack\n                spacing=\"8px\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                fontSize=\"inherit\"\n                style={{\n                    ...wrapperStyles,\n                }}\n            >\n                <Icon height=\"24px\" width=\"24px\" color=\"brand.500\">\n                    {icon}\n                </Icon>\n\n                {!collapsed && (\n                    <Heading as=\"h6\" fontWeight={700} fontSize=\"inherit\">\n                        {text}\n                    </Heading>\n                )}\n            </HStack>\n        </ChakraLink>\n    );\n};\n","type UsePaginationProps = {\n    current: number;\n    pageCount: number;\n};\nexport const usePagination = (\n    props: UsePaginationProps,\n): {\n    current: number;\n    prev?: number;\n    next?: number;\n    items: [number | string];\n} => {\n    const { current, pageCount } = props;\n\n    const prev = current === 1 ? undefined : current - 1,\n        next = current === pageCount ? undefined : current + 1,\n        items: [number | string] = [1];\n\n    if (current === 1 && pageCount === 1) return { current, prev, next, items };\n    if (current > 4) items.push(\"…\");\n\n    const r = 2,\n        r1 = current - r,\n        r2 = current + r;\n\n    for (let i = r1 > 2 ? r1 : 2; i <= Math.min(pageCount, r2); i++)\n        items.push(i);\n\n    if (r2 + 1 < pageCount) items.push(\"…\");\n    if (r2 < pageCount) items.push(pageCount);\n\n    return { current, prev, next, items };\n};\n","import { useContext } from \"react\";\n\nimport { ThemedLayoutContext } from \"../../contexts/themedLayoutContext\";\n\nexport type UseSiderVisibleType = {\n    siderVisible: boolean;\n    drawerSiderVisible: boolean;\n    setSiderVisible: (visible: boolean) => void;\n    setDrawerSiderVisible: (visible: boolean) => void;\n};\n\n/**\n * @deprecated Please use `useThemedLayoutContext` instead.\n */\nexport const useSiderVisible = (): UseSiderVisibleType => {\n    const {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    } = useContext(ThemedLayoutContext);\n\n    return {\n        siderVisible: mobileSiderOpen,\n        setSiderVisible: setMobileSiderOpen,\n        drawerSiderVisible: !siderCollapsed,\n        setDrawerSiderVisible: (visible) => setSiderCollapsed(!visible),\n    };\n};\n","import React, { ReactNode, useState } from \"react\";\n\nimport { IThemedLayoutContext } from \"./IThemedLayoutContext\";\n\nexport const ThemedLayoutContext = React.createContext<IThemedLayoutContext>({\n    siderCollapsed: false,\n    mobileSiderOpen: false,\n    setSiderCollapsed: () => undefined,\n    setMobileSiderOpen: () => undefined,\n});\n\nexport const ThemedLayoutContextProvider: React.FC<{\n    children: ReactNode;\n    initialSiderCollapsed?: boolean;\n}> = ({ children, initialSiderCollapsed }) => {\n    const [siderCollapsed, setSiderCollapsed] = useState(\n        initialSiderCollapsed ?? false,\n    );\n    const [mobileSiderOpen, setMobileSiderOpen] = useState(false);\n\n    return (\n        <ThemedLayoutContext.Provider\n            value={{\n                siderCollapsed,\n                mobileSiderOpen,\n                setSiderCollapsed,\n                setMobileSiderOpen,\n            }}\n        >\n            {children}\n        </ThemedLayoutContext.Provider>\n    );\n};\n","import { useContext } from \"react\";\n\nimport { ThemedLayoutContext } from \"../../contexts/themedLayoutContext\";\nimport { IThemedLayoutContext } from \"../../contexts/themedLayoutContext/IThemedLayoutContext\";\n\nexport type UseThemedLayoutContextType = IThemedLayoutContext;\n\nexport const useThemedLayoutContext = (): UseThemedLayoutContextType => {\n    const {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    } = useContext(ThemedLayoutContext);\n\n    return {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    };\n};\n","import React from \"react\";\nimport {\n    useGetIdentity,\n    useActiveAuthProvider,\n    pickNotDeprecated,\n} from \"@refinedev/core\";\nimport {\n    Box,\n    Avatar,\n    Text,\n    HStack,\n    useColorModeValue,\n    BoxProps,\n} from \"@chakra-ui/react\";\nimport { RefineThemedLayoutV2HeaderProps } from \"../types\";\nimport { HamburgerMenu } from \"../hamburgerMenu\";\n\nexport const ThemedHeaderV2: React.FC<RefineThemedLayoutV2HeaderProps> = ({\n    isSticky,\n    sticky,\n}) => {\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const bgColor = useColorModeValue(\n        \"refine.header.bg.light\",\n        \"refine.header.bg.dark\",\n    );\n\n    let stickyProps: BoxProps = {};\n    if (pickNotDeprecated(sticky, isSticky)) {\n        stickyProps = {\n            position: \"sticky\",\n            top: 0,\n            zIndex: 1,\n        };\n    }\n\n    return (\n        <Box\n            py=\"2\"\n            px=\"4\"\n            display=\"flex\"\n            alignItems=\"center\"\n            w=\"full\"\n            height=\"64px\"\n            bg={bgColor}\n            borderBottom=\"1px\"\n            borderBottomColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n            {...stickyProps}\n        >\n            <Box\n                w=\"full\"\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n            >\n                <HamburgerMenu />\n                <HStack>\n                    {user?.name && (\n                        <Text\n                            size=\"sm\"\n                            fontWeight=\"bold\"\n                            data-testid=\"header-user-name\"\n                        >\n                            {user.name}\n                        </Text>\n                    )}\n                    {user?.avatar && (\n                        <Avatar\n                            size=\"sm\"\n                            name={user?.name || \"Profile Photo\"}\n                            src={user.avatar}\n                        />\n                    )}\n                </HStack>\n            </Box>\n        </Box>\n    );\n};\n","import React from \"react\";\nimport { IconButtonProps, IconButton } from \"@chakra-ui/react\";\nimport {\n    IconLayoutSidebarLeftCollapse,\n    IconLayoutSidebarLeftExpand,\n    IconMenu2,\n} from \"@tabler/icons\";\n\nimport { useThemedLayoutContext } from \"@hooks\";\n\nconst HamburgerIcon = (props: IconButtonProps) => (\n    <IconButton variant=\"ghost\" size=\"sm\" {...props} />\n);\n\nexport const HamburgerMenu: React.FC = () => {\n    const {\n        siderCollapsed,\n        setSiderCollapsed,\n        mobileSiderOpen,\n        setMobileSiderOpen,\n    } = useThemedLayoutContext();\n\n    return (\n        <>\n            <HamburgerIcon\n                display={{ base: \"none\", md: \"flex\" }}\n                aria-label=\"drawer-sidebar-toggle\"\n                icon={\n                    siderCollapsed ? (\n                        <IconLayoutSidebarLeftExpand />\n                    ) : (\n                        <IconLayoutSidebarLeftCollapse />\n                    )\n                }\n                onClick={() => setSiderCollapsed(!siderCollapsed)}\n            />\n            <HamburgerIcon\n                display={{ base: \"flex\", md: \"none\" }}\n                aria-label=\"sidebar-toggle\"\n                icon={<IconMenu2 />}\n                onClick={() => setMobileSiderOpen(!mobileSiderOpen)}\n            />\n        </>\n    );\n};\n","import React from \"react\";\nimport {\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useRouterType,\n    useResource,\n} from \"@refinedev/core\";\n\nimport { Box, Heading } from \"@chakra-ui/react\";\n\nimport { CreateButton, Breadcrumb, CreateButtonProps } from \"@components\";\nimport { ListProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\nexport const List: React.FC<ListProps> = (props) => {\n    const {\n        canCreate,\n        children,\n        createButtonProps: createButtonPropsFromProps,\n        resource: resourceFromProps,\n        wrapperProps,\n        contentProps,\n        headerProps,\n        headerButtonProps,\n        headerButtons: headerButtonsFromProps,\n        breadcrumb: breadcrumbFromProps,\n        title,\n    } = props;\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const { resource, identifier } = useResource(resourceFromProps);\n\n    const isCreateButtonVisible =\n        canCreate ??\n        ((resource?.canCreate ?? !!resource?.create) ||\n            createButtonPropsFromProps);\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const createButtonProps: CreateButtonProps | undefined =\n        isCreateButtonVisible\n            ? {\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  ...createButtonPropsFromProps,\n              }\n            : undefined;\n\n    const defaultHeaderButtons = isCreateButtonVisible ? (\n        <CreateButton {...createButtonProps} />\n    ) : null;\n\n    const headerButtons = headerButtonsFromProps\n        ? typeof headerButtonsFromProps === \"function\"\n            ? headerButtonsFromProps({\n                  defaultButtons: defaultHeaderButtons,\n                  createButtonProps,\n              })\n            : headerButtonsFromProps\n        : defaultHeaderButtons;\n\n    const renderTitle = () => {\n        if (title === false) return null;\n\n        if (title) {\n            if (typeof title === \"string\" || typeof title === \"number\") {\n                return (\n                    <Heading\n                        as=\"h3\"\n                        size=\"lg\"\n                        className={RefinePageHeaderClassNames.Title}\n                    >\n                        {title}\n                    </Heading>\n                );\n            }\n\n            return title;\n        }\n\n        return (\n            <Heading\n                as=\"h3\"\n                size=\"lg\"\n                className={RefinePageHeaderClassNames.Title}\n            >\n                {translate(\n                    `${identifier}.titles.list`,\n                    getUserFriendlyName(\n                        resource?.meta?.label ??\n                            resource?.options?.label ??\n                            resource?.label ??\n                            identifier,\n                        \"plural\",\n                    ),\n                )}\n            </Heading>\n        );\n    };\n\n    return (\n        <Box\n            bg=\"chakra-body-bg\"\n            borderRadius=\"md\"\n            px=\"4\"\n            py=\"3\"\n            {...wrapperProps}\n        >\n            <Box\n                mb=\"3\"\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                flexWrap={{ base: \"wrap\", md: \"nowrap\" }}\n                gap=\"3\"\n                {...headerProps}\n            >\n                <Box minW={200}>\n                    {typeof breadcrumb !== \"undefined\" ? (\n                        <>{breadcrumb}</> ?? undefined\n                    ) : (\n                        <Breadcrumb />\n                    )}\n                    {renderTitle()}\n                </Box>\n                <Box\n                    display=\"flex\"\n                    flexWrap=\"wrap\"\n                    justifyContent={{ base: \"flex-start\", md: \"flex-end\" }}\n                    gap=\"2\"\n                    {...headerButtonProps}\n                >\n                    {headerButtons}\n                </Box>\n            </Box>\n            <Box {...contentProps}>{children}</Box>\n        </Box>\n    );\n};\n","import React from \"react\";\nimport {\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useResource,\n    useToPath,\n    useRouterType,\n    useBack,\n    useGo,\n} from \"@refinedev/core\";\nimport { Box, IconButton, HStack, Heading, Spinner } from \"@chakra-ui/react\";\n\n// We use @tabler/icons for icons but you can use any icon library you want.\nimport { IconArrowLeft } from \"@tabler/icons\";\n\nimport {\n    DeleteButton,\n    EditButton,\n    ListButton,\n    RefreshButton,\n    Breadcrumb,\n    ListButtonProps,\n    EditButtonProps,\n    DeleteButtonProps,\n    RefreshButtonProps,\n} from \"@components\";\nimport { ShowProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\nexport const Show: React.FC<ShowProps> = (props) => {\n    const {\n        children,\n        resource: resourceFromProps,\n        recordItemId,\n        canDelete,\n        canEdit,\n        dataProviderName,\n        isLoading,\n        footerButtons: footerButtonsFromProps,\n        footerButtonProps,\n        headerButtons: headerButtonsFromProps,\n        headerButtonProps,\n        wrapperProps,\n        contentProps,\n        headerProps,\n        goBack: goBackFromProps,\n        breadcrumb: breadcrumbFromProps,\n        title,\n    } = props;\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const go = useGo();\n    const { goBack, list: legacyGoList } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const {\n        resource,\n        action,\n        id: idFromParams,\n        identifier,\n    } = useResource(resourceFromProps);\n\n    const goListPath = useToPath({\n        resource,\n        action: \"list\",\n    });\n\n    const id = recordItemId ?? idFromParams;\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const hasList = resource?.list && !recordItemId;\n    const isDeleteButtonVisible =\n        canDelete ?? resource?.meta?.canDelete ?? resource?.canDelete;\n    const isEditButtonVisible =\n        canEdit ?? resource?.canEdit ?? !!resource?.edit;\n\n    const listButtonProps: ListButtonProps | undefined = hasList\n        ? {\n              ...(isLoading ? { disabled: true } : {}),\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n          }\n        : undefined;\n    const editButtonProps: EditButtonProps | undefined = isEditButtonVisible\n        ? {\n              colorScheme: \"brand\",\n              ...(isLoading ? { disabled: true } : {}),\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n              recordItemId: id,\n          }\n        : undefined;\n    const deleteButtonProps: DeleteButtonProps | undefined =\n        isDeleteButtonVisible\n            ? {\n                  ...(isLoading ? { disabled: true } : {}),\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  recordItemId: id,\n                  onSuccess: () => {\n                      if (routerType === \"legacy\") {\n                          legacyGoList(resource?.route ?? resource?.name ?? \"\");\n                      } else {\n                          go({ to: goListPath });\n                      }\n                  },\n                  dataProviderName,\n              }\n            : undefined;\n    const refreshButtonProps: RefreshButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        recordItemId: id,\n        dataProviderName,\n    };\n\n    const defaultHeaderButtons = (\n        <>\n            {listButtonProps && <ListButton {...listButtonProps} />}\n            {isEditButtonVisible && (\n                <EditButton colorScheme=\"brand\" {...editButtonProps} />\n            )}\n            {isDeleteButtonVisible && <DeleteButton {...deleteButtonProps} />}\n            <RefreshButton {...refreshButtonProps} />\n        </>\n    );\n\n    const buttonBack =\n        goBackFromProps === (false || null) ? null : (\n            <IconButton\n                aria-label=\"back\"\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={\n                    action !== \"list\" && typeof action !== \"undefined\"\n                        ? routerType === \"legacy\"\n                            ? goBack\n                            : back\n                        : undefined\n                }\n            >\n                {typeof goBackFromProps !== \"undefined\" ? (\n                    goBackFromProps\n                ) : (\n                    <IconArrowLeft />\n                )}\n            </IconButton>\n        );\n\n    const headerButtons = headerButtonsFromProps\n        ? typeof headerButtonsFromProps === \"function\"\n            ? headerButtonsFromProps({\n                  defaultButtons: defaultHeaderButtons,\n                  deleteButtonProps,\n                  editButtonProps,\n                  listButtonProps,\n                  refreshButtonProps,\n              })\n            : headerButtonsFromProps\n        : defaultHeaderButtons;\n\n    const footerButtons = footerButtonsFromProps\n        ? typeof footerButtonsFromProps === \"function\"\n            ? footerButtonsFromProps({ defaultButtons: null })\n            : footerButtonsFromProps\n        : null;\n\n    const renderTitle = () => {\n        if (title === false) return null;\n\n        if (title) {\n            if (typeof title === \"string\" || typeof title === \"number\") {\n                return (\n                    <Heading\n                        as=\"h3\"\n                        size=\"lg\"\n                        className={RefinePageHeaderClassNames.Title}\n                    >\n                        {title}\n                    </Heading>\n                );\n            }\n\n            return title;\n        }\n\n        return (\n            <Heading\n                as=\"h3\"\n                size=\"lg\"\n                className={RefinePageHeaderClassNames.Title}\n            >\n                {translate(\n                    `${identifier}.titles.show`,\n                    `Show ${getUserFriendlyName(\n                        resource?.meta?.label ??\n                            resource?.options?.label ??\n                            resource?.label ??\n                            identifier,\n                        \"singular\",\n                    )}`,\n                )}\n            </Heading>\n        );\n    };\n\n    return (\n        <Box\n            position=\"relative\"\n            bg=\"chakra-body-bg\"\n            borderRadius=\"md\"\n            px=\"4\"\n            py=\"3\"\n            {...wrapperProps}\n        >\n            {isLoading && (\n                <Spinner\n                    position=\"absolute\"\n                    top=\"50%\"\n                    left=\"50%\"\n                    transform=\"translate(-50%, -50%)\"\n                />\n            )}\n            <Box\n                mb=\"3\"\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                flexWrap={{ base: \"wrap\", md: \"nowrap\" }}\n                gap=\"3\"\n                {...headerProps}\n            >\n                <Box minW={200}>\n                    {typeof breadcrumb !== \"undefined\" ? (\n                        <>{breadcrumb}</> ?? undefined\n                    ) : (\n                        <Breadcrumb />\n                    )}\n                    <HStack>\n                        {buttonBack}\n                        {renderTitle()}\n                    </HStack>\n                </Box>\n                <Box\n                    display=\"flex\"\n                    flexWrap=\"wrap\"\n                    justifyContent={{ base: \"flex-start\", md: \"flex-end\" }}\n                    gap=\"2\"\n                    {...headerButtonProps}\n                >\n                    {headerButtons}\n                </Box>\n            </Box>\n            <Box opacity={isLoading ? 0.5 : undefined} {...contentProps}>\n                {children}\n            </Box>\n            <Box\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap=\"2\"\n                mt={8}\n                {...footerButtonProps}\n            >\n                {footerButtons}\n            </Box>\n        </Box>\n    );\n};\n","import React from \"react\";\n\nimport {\n    useMutationMode,\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useRouterType,\n    useBack,\n    useResource,\n    useGo,\n    useToPath,\n} from \"@refinedev/core\";\n\nimport { Box, Heading, HStack, IconButton, Spinner } from \"@chakra-ui/react\";\n\n// We use @tabler/icons for icons but you can use any icon library you want.\nimport { IconArrowLeft } from \"@tabler/icons\";\n\nimport {\n    DeleteButton,\n    ListButton,\n    RefreshButton,\n    SaveButton,\n    Breadcrumb,\n    ListButtonProps,\n    RefreshButtonProps,\n    DeleteButtonProps,\n    SaveButtonProps,\n    AutoSaveIndicator,\n} from \"@components\";\nimport { EditProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\nexport const Edit: React.FC<EditProps> = (props) => {\n    const {\n        children,\n        resource: resourceFromProps,\n        recordItemId,\n        deleteButtonProps: deleteButtonPropsFromProps,\n        mutationMode: mutationModeFromProps,\n        saveButtonProps: saveButtonPropsFromProps,\n        canDelete,\n        dataProviderName,\n        isLoading,\n        footerButtons: footerButtonsFromProps,\n        footerButtonProps,\n        headerButtons: headerButtonsFromProps,\n        headerButtonProps,\n        wrapperProps,\n        contentProps,\n        headerProps,\n        goBack: goBackFromProps,\n        breadcrumb: breadcrumbFromProps,\n        title,\n        autoSaveProps,\n    } = props;\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n    const { mutationMode: mutationModeContext } = useMutationMode();\n    const mutationMode = mutationModeFromProps ?? mutationModeContext;\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const go = useGo();\n    const { goBack, list: legacyGoList } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const {\n        resource,\n        action,\n        id: idFromParams,\n        identifier,\n    } = useResource(resourceFromProps);\n\n    const goListPath = useToPath({\n        resource,\n        action: \"list\",\n    });\n\n    const id = recordItemId ?? idFromParams;\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const hasList = resource?.list && !recordItemId;\n    const isDeleteButtonVisible =\n        canDelete ??\n        ((resource?.meta?.canDelete ?? resource?.canDelete) ||\n            deleteButtonPropsFromProps);\n\n    const listButtonProps: ListButtonProps | undefined = hasList\n        ? {\n              ...(isLoading ? { disabled: true } : {}),\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n          }\n        : undefined;\n\n    const refreshButtonProps: RefreshButtonProps | undefined = {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        recordItemId: id,\n        dataProviderName,\n    };\n\n    const deleteButtonProps: DeleteButtonProps | undefined =\n        isDeleteButtonVisible\n            ? ({\n                  ...(isLoading ? { disabled: true } : {}),\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  mutationMode,\n                  onSuccess: () => {\n                      if (routerType === \"legacy\") {\n                          legacyGoList(resource?.route ?? resource?.name ?? \"\");\n                      } else {\n                          go({ to: goListPath });\n                      }\n                  },\n                  recordItemId: id,\n                  dataProviderName,\n                  ...deleteButtonPropsFromProps,\n              } as const)\n            : undefined;\n\n    const saveButtonProps: SaveButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        ...saveButtonPropsFromProps,\n    };\n\n    const defaultHeaderButtons = (\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" gap=\"2\">\n            {autoSaveProps && <AutoSaveIndicator {...autoSaveProps} />}\n            {hasList && <ListButton {...listButtonProps} />}\n            <RefreshButton {...refreshButtonProps} />\n        </Box>\n    );\n\n    const defaultFooterButtons = (\n        <>\n            {isDeleteButtonVisible && <DeleteButton {...deleteButtonProps} />}\n            <SaveButton {...saveButtonProps} />\n        </>\n    );\n\n    const buttonBack =\n        goBackFromProps === (false || null) ? null : (\n            <IconButton\n                aria-label=\"back\"\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={\n                    action !== \"list\" && typeof action !== \"undefined\"\n                        ? routerType === \"legacy\"\n                            ? goBack\n                            : back\n                        : undefined\n                }\n            >\n                {typeof goBackFromProps !== \"undefined\" ? (\n                    goBackFromProps\n                ) : (\n                    <IconArrowLeft />\n                )}\n            </IconButton>\n        );\n\n    const headerButtons = headerButtonsFromProps\n        ? typeof headerButtonsFromProps === \"function\"\n            ? headerButtonsFromProps({\n                  defaultButtons: defaultHeaderButtons,\n                  listButtonProps,\n                  refreshButtonProps,\n              })\n            : headerButtonsFromProps\n        : defaultHeaderButtons;\n\n    const footerButtons = footerButtonsFromProps\n        ? typeof footerButtonsFromProps === \"function\"\n            ? footerButtonsFromProps({\n                  defaultButtons: defaultFooterButtons,\n                  deleteButtonProps,\n                  saveButtonProps,\n              })\n            : footerButtonsFromProps\n        : defaultFooterButtons;\n\n    const renderTitle = () => {\n        if (title === false) return null;\n\n        if (title) {\n            if (typeof title === \"string\" || typeof title === \"number\") {\n                return (\n                    <Heading\n                        as=\"h3\"\n                        size=\"lg\"\n                        className={RefinePageHeaderClassNames.Title}\n                    >\n                        {title}\n                    </Heading>\n                );\n            }\n\n            return title;\n        }\n\n        return (\n            <Heading\n                as=\"h3\"\n                size=\"lg\"\n                className={RefinePageHeaderClassNames.Title}\n            >\n                {translate(\n                    `${identifier}.titles.edit`,\n                    `Edit ${getUserFriendlyName(\n                        resource?.meta?.label ??\n                            resource?.options?.label ??\n                            resource?.label ??\n                            identifier,\n                        \"singular\",\n                    )}`,\n                )}\n            </Heading>\n        );\n    };\n\n    return (\n        <Box\n            position=\"relative\"\n            bg=\"chakra-body-bg\"\n            borderRadius=\"md\"\n            px=\"4\"\n            py=\"3\"\n            {...wrapperProps}\n        >\n            {isLoading && (\n                <Spinner\n                    position=\"absolute\"\n                    top=\"50%\"\n                    left=\"50%\"\n                    transform=\"translate(-50%, -50%)\"\n                />\n            )}\n            <Box\n                mb=\"3\"\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                flexWrap={{ base: \"wrap\", md: \"nowrap\" }}\n                gap=\"3\"\n                {...headerProps}\n            >\n                <Box minW={200}>\n                    {typeof breadcrumb !== \"undefined\" ? (\n                        <>{breadcrumb}</> ?? undefined\n                    ) : (\n                        <Breadcrumb />\n                    )}\n                    <HStack spacing={2}>\n                        {buttonBack}\n                        {renderTitle()}\n                    </HStack>\n                </Box>\n                <Box\n                    display=\"flex\"\n                    flexWrap=\"wrap\"\n                    justifyContent={{ base: \"flex-start\", md: \"flex-end\" }}\n                    gap=\"2\"\n                    {...headerButtonProps}\n                >\n                    {headerButtons}\n                </Box>\n            </Box>\n            <Box opacity={isLoading ? 0.5 : undefined} {...contentProps}>\n                {children}\n            </Box>\n            <Box\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap=\"2\"\n                mt={8}\n                {...footerButtonProps}\n            >\n                {footerButtons}\n            </Box>\n        </Box>\n    );\n};\n","import React from \"react\";\nimport {\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useRouterType,\n    useResource,\n    useBack,\n} from \"@refinedev/core\";\nimport { Box, Heading, HStack, IconButton, Spinner } from \"@chakra-ui/react\";\n\n// We use @tabler/icons for icons but you can use any icon library you want.\nimport { IconArrowLeft } from \"@tabler/icons\";\n\nimport { Breadcrumb, SaveButton, SaveButtonProps } from \"@components\";\nimport { CreateProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\nexport const Create: React.FC<CreateProps> = (props) => {\n    const {\n        children,\n        saveButtonProps: saveButtonPropsFromProps,\n        isLoading,\n        resource: resourceFromProps,\n        footerButtons: footerButtonsFromProps,\n        footerButtonProps,\n        headerButtons: headerButtonsFromProps,\n        headerButtonProps,\n        wrapperProps,\n        contentProps,\n        headerProps,\n        goBack: goBackFromProps,\n        breadcrumb: breadcrumbFromProps,\n        title,\n    } = props;\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const { goBack } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const { resource, action, identifier } = useResource(resourceFromProps);\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const saveButtonProps: SaveButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        ...saveButtonPropsFromProps,\n    };\n\n    const defaultFooterButtons = <SaveButton {...saveButtonProps} />;\n\n    const buttonBack =\n        goBackFromProps === (false || null) ? null : (\n            <IconButton\n                aria-label=\"back\"\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={\n                    action !== \"list\" || typeof action !== \"undefined\"\n                        ? routerType === \"legacy\"\n                            ? goBack\n                            : back\n                        : undefined\n                }\n            >\n                {typeof goBackFromProps !== \"undefined\" ? (\n                    goBackFromProps\n                ) : (\n                    <IconArrowLeft />\n                )}\n            </IconButton>\n        );\n\n    const headerButtons = headerButtonsFromProps\n        ? typeof headerButtonsFromProps === \"function\"\n            ? headerButtonsFromProps({\n                  defaultButtons: null,\n              })\n            : headerButtonsFromProps\n        : null;\n\n    const footerButtons = footerButtonsFromProps\n        ? typeof footerButtonsFromProps === \"function\"\n            ? footerButtonsFromProps({\n                  defaultButtons: defaultFooterButtons,\n                  saveButtonProps,\n              })\n            : footerButtonsFromProps\n        : defaultFooterButtons;\n\n    const renderTitle = () => {\n        if (title === false) return null;\n\n        if (title) {\n            if (typeof title === \"string\" || typeof title === \"number\") {\n                return (\n                    <Heading\n                        as=\"h3\"\n                        size=\"lg\"\n                        className={RefinePageHeaderClassNames.Title}\n                    >\n                        {title}\n                    </Heading>\n                );\n            }\n\n            return title;\n        }\n\n        return (\n            <Heading\n                as=\"h3\"\n                size=\"lg\"\n                className={RefinePageHeaderClassNames.Title}\n            >\n                {translate(\n                    `${identifier}.titles.create`,\n                    `Create ${getUserFriendlyName(\n                        resource?.meta?.label ??\n                            resource?.options?.label ??\n                            resource?.label ??\n                            identifier,\n                        \"singular\",\n                    )}`,\n                )}\n            </Heading>\n        );\n    };\n\n    return (\n        <Box\n            position=\"relative\"\n            bg=\"chakra-body-bg\"\n            borderRadius=\"md\"\n            px=\"4\"\n            py=\"3\"\n            {...wrapperProps}\n        >\n            {isLoading && (\n                <Spinner\n                    position=\"absolute\"\n                    top=\"50%\"\n                    left=\"50%\"\n                    transform=\"translate(-50%, -50%)\"\n                />\n            )}\n            <Box\n                mb=\"3\"\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                flexWrap={{ base: \"wrap\", md: \"nowrap\" }}\n                gap=\"3\"\n                {...headerProps}\n            >\n                <Box minW={200}>\n                    {typeof breadcrumb !== \"undefined\" ? (\n                        <>{breadcrumb}</>\n                    ) : (\n                        <Breadcrumb />\n                    )}\n                    <HStack>\n                        {buttonBack}\n                        {renderTitle()}\n                    </HStack>\n                </Box>\n                <Box\n                    display=\"flex\"\n                    flexWrap=\"wrap\"\n                    justifyContent={{ base: \"flex-start\", md: \"flex-end\" }}\n                    gap=\"2\"\n                    {...headerButtonProps}\n                >\n                    {headerButtons}\n                </Box>\n            </Box>\n            <Box opacity={isLoading ? 0.5 : undefined} {...contentProps}>\n                {children}\n            </Box>\n            <Box\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap=\"2\"\n                mt=\"8\"\n                {...footerButtonProps}\n            >\n                {footerButtons}\n            </Box>\n        </Box>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useNavigation,\n    useTranslate,\n    useCan,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { Button, IconButton } from \"@chakra-ui/react\";\nimport { IconSquarePlus } from \"@tabler/icons\";\n\nimport { CreateButtonProps } from \"../types\";\n\nexport const CreateButton: React.FC<CreateButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { createUrl: generateCreateUrl } = useNavigation();\n\n    const { resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"create\",\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n        params: {\n            resource,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const createUrl = resource ? generateCreateUrl(resource, meta) : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={createUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            {hideText ? (\n                <IconButton\n                    colorScheme=\"brand\"\n                    variant=\"outline\"\n                    aria-label={translate(\"buttons.create\", \"Create\")}\n                    title={disabledTitle()}\n                    isDisabled={data?.can === false}\n                    data-testid={RefineButtonTestIds.CreateButton}\n                    className={RefineButtonClassNames.CreateButton}\n                    {...rest}\n                >\n                    <IconSquarePlus size={20} {...svgIconProps} />\n                </IconButton>\n            ) : (\n                <Button\n                    colorScheme=\"brand\"\n                    isDisabled={data?.can === false}\n                    leftIcon={<IconSquarePlus size={20} />}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.CreateButton}\n                    className={RefineButtonClassNames.CreateButton}\n                    {...rest}\n                >\n                    {children ?? translate(\"buttons.create\", \"Create\")}\n                </Button>\n            )}\n        </ActiveLink>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { IconPencil } from \"@tabler/icons\";\nimport { Button, IconButton } from \"@chakra-ui/react\";\n\nimport { EditButtonProps } from \"../types\";\n\n/**\n * `<EditButton>` uses Chakra UI {@link https://chakra-ui.com/docs/components/button `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#edit `edit`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the edit page with the record id route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/buttons/edit-button} for more details.\n */\nexport const EditButton: React.FC<EditButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const translate = useTranslate();\n\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { editUrl: generateEditUrl } = useNavigation();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"edit\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const editUrl =\n        resource && (recordItemId ?? id)\n            ? generateEditUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={editUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            {hideText ? (\n                <IconButton\n                    variant=\"outline\"\n                    aria-label={translate(\"buttons.edit\", \"Edit\")}\n                    title={disabledTitle()}\n                    isDisabled={data?.can === false}\n                    data-testid={RefineButtonTestIds.EditButton}\n                    className={RefineButtonClassNames.EditButton}\n                    {...rest}\n                >\n                    <IconPencil size={20} {...svgIconProps} />\n                </IconButton>\n            ) : (\n                <Button\n                    variant=\"outline\"\n                    isDisabled={data?.can === false}\n                    leftIcon={<IconPencil size={20} {...svgIconProps} />}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.EditButton}\n                    className={RefineButtonClassNames.EditButton}\n                    {...rest}\n                >\n                    {children ?? translate(\"buttons.edit\", \"Edit\")}\n                </Button>\n            )}\n        </ActiveLink>\n    );\n};\n","import React, { useContext, useState } from \"react\";\nimport {\n    useDelete,\n    useTranslate,\n    useMutationMode,\n    useCan,\n    useResource,\n    pickNotDeprecated,\n    useWarnAboutChange,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport {\n    Button,\n    HStack,\n    IconButton,\n    Popover,\n    PopoverArrow,\n    PopoverBody,\n    PopoverContent,\n    PopoverHeader,\n    PopoverTrigger,\n} from \"@chakra-ui/react\";\nimport { IconTrash } from \"@tabler/icons\";\n\nimport { DeleteButtonProps } from \"../types\";\n\n/**\n * `<DeleteButton>` uses Chakra UI {@link https://chakra-ui.com/docs/components/button `<Button>`} and {@link https://chakra-ui.com/docs/components/popover `<Popover>`} components.\n * When you try to delete something, a dialog modal shows up and asks for confirmation. When confirmed it executes the `useDelete` method provided by your `dataProvider`.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/buttons/delete-button} for more details.\n */\nexport const DeleteButton: React.FC<DeleteButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    onSuccess,\n    mutationMode: mutationModeProp,\n    children,\n    successNotification,\n    errorNotification,\n    hideText = false,\n    accessControl,\n    meta,\n    metaData,\n    dataProviderName,\n    confirmTitle,\n    confirmOkText,\n    confirmCancelText,\n    svgIconProps,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const translate = useTranslate();\n\n    const { id, resource, identifier } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { mutationMode: mutationModeContext } = useMutationMode();\n\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const { mutate, isLoading, variables } = useDelete();\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"delete\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const [opened, setOpened] = useState(false);\n\n    const onConfirm = () => {\n        if (identifier && (recordItemId ?? id)) {\n            setWarnWhen(false);\n            setOpened(false);\n            mutate(\n                {\n                    id: recordItemId ?? id ?? \"\",\n                    resource: identifier,\n                    mutationMode,\n                    successNotification,\n                    errorNotification,\n                    meta: pickNotDeprecated(meta, metaData),\n                    metaData: pickNotDeprecated(meta, metaData),\n                    dataProviderName,\n                },\n                {\n                    onSuccess: (value) => {\n                        onSuccess && onSuccess(value);\n                    },\n                },\n            );\n        }\n    };\n\n    const { setWarnWhen } = useWarnAboutChange();\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <Popover isOpen={opened} isLazy>\n            <PopoverTrigger>\n                {hideText ? (\n                    <IconButton\n                        colorScheme=\"red\"\n                        variant=\"outline\"\n                        aria-label={translate(\"buttons.edit\", \"Edit\")}\n                        onClick={() => setOpened((o) => !o)}\n                        isDisabled={isLoading || data?.can === false}\n                        isLoading={\n                            (recordItemId ?? id) === variables?.id && isLoading\n                        }\n                        data-testid={RefineButtonTestIds.DeleteButton}\n                        className={RefineButtonClassNames.DeleteButton}\n                        {...rest}\n                    >\n                        <IconTrash size={20} {...svgIconProps} />\n                    </IconButton>\n                ) : (\n                    <Button\n                        colorScheme=\"red\"\n                        variant=\"outline\"\n                        onClick={() => setOpened((o) => !o)}\n                        isDisabled={isLoading || data?.can === false}\n                        isLoading={id === variables?.id && isLoading}\n                        leftIcon={<IconTrash size={20} {...svgIconProps} />}\n                        title={disabledTitle()}\n                        data-testid={RefineButtonTestIds.DeleteButton}\n                        className={RefineButtonClassNames.DeleteButton}\n                        {...rest}\n                    >\n                        {children ?? translate(\"buttons.delete\", \"Delete\")}\n                    </Button>\n                )}\n            </PopoverTrigger>\n            <PopoverContent>\n                <PopoverArrow />\n                <PopoverHeader textAlign=\"center\">\n                    {confirmTitle ??\n                        translate(\"buttons.confirm\", \"Are you sure?\")}\n                </PopoverHeader>\n                <PopoverBody display=\"flex\" justifyContent=\"center\">\n                    <HStack>\n                        <Button onClick={() => setOpened(false)} size=\"sm\">\n                            {confirmCancelText ??\n                                translate(\"buttons.cancel\", \"Cancel\")}\n                        </Button>\n                        <Button\n                            colorScheme=\"red\"\n                            onClick={onConfirm}\n                            autoFocus\n                            size=\"sm\"\n                        >\n                            {confirmOkText ??\n                                translate(\"buttons.delete\", \"Delete\")}\n                        </Button>\n                    </HStack>\n                </PopoverBody>\n            </PopoverContent>\n        </Popover>\n    );\n};\n","import React from \"react\";\nimport {\n    useTranslate,\n    useResource,\n    useInvalidate,\n    queryKeys,\n    pickDataProvider,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { IconButton, Button } from \"@chakra-ui/react\";\nimport { IconRefresh } from \"@tabler/icons\";\n\nimport { RefreshButtonProps } from \"../types\";\n\nimport { useQueryClient } from \"@tanstack/react-query\";\n\n/**\n * `<RefreshButton>` uses Chakra UI {@link https://chakra-ui.com/docs/components/button `<Button> `} component.\n * to update the data shown on the page via the {@link https://refine.dev/docs/api-reference/core/hooks/invalidate/useInvalidate `useInvalidate`} hook.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/buttons/refresh-button} for more details.\n */\nexport const RefreshButton: React.FC<RefreshButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    dataProviderName,\n    svgIconProps,\n    children,\n    onClick,\n    meta: _meta,\n    metaData: _metaData,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const queryClient = useQueryClient();\n    const invalidates = useInvalidate();\n\n    const { resources, identifier, id } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const isInvalidating = !!queryClient.isFetching({\n        queryKey: queryKeys(\n            identifier,\n            pickDataProvider(identifier, dataProviderName, resources),\n        ).detail(recordItemId ?? id),\n    });\n\n    const handleInvalidate = () => {\n        invalidates({\n            id: recordItemId ?? id,\n            invalidates: [\"detail\"],\n            dataProviderName,\n            resource: identifier,\n        });\n    };\n\n    return hideText ? (\n        <IconButton\n            variant=\"outline\"\n            aria-label={translate(\"buttons.refresh\", \"Refresh\")}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                onClick ? onClick(e) : handleInvalidate();\n            }}\n            isLoading={isInvalidating}\n            data-testid={RefineButtonTestIds.RefreshButton}\n            className={RefineButtonClassNames.RefreshButton}\n            {...rest}\n        >\n            <IconRefresh size={20} {...svgIconProps} />\n        </IconButton>\n    ) : (\n        <Button\n            variant=\"outline\"\n            leftIcon={<IconRefresh size={20} {...svgIconProps} />}\n            isLoading={isInvalidating}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                onClick ? onClick(e) : handleInvalidate();\n            }}\n            data-testid={RefineButtonTestIds.RefreshButton}\n            className={RefineButtonClassNames.RefreshButton}\n            {...rest}\n        >\n            {children ?? translate(\"buttons.refresh\", \"Refresh\")}\n        </Button>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { IconButton, Button } from \"@chakra-ui/react\";\nimport { IconEye } from \"@tabler/icons\";\n\nimport { ShowButtonProps } from \"../types\";\n\n/**\n * `<ShowButton>` uses Chakra UI {@link https://chakra-ui.com/docs/components/button `<Button> `} component.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#show `show`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when red sirecting the app to the show page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/buttons/show-button} for more details.\n */\nexport const ShowButton: React.FC<ShowButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const { showUrl: generateShowUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"show\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const showUrl =\n        resource && (recordItemId || id)\n            ? generateShowUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={showUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            {hideText ? (\n                <IconButton\n                    variant=\"outline\"\n                    aria-label={translate(\"buttons.show\", \"Show\")}\n                    isDisabled={data?.can === false}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.ShowButton}\n                    className={RefineButtonClassNames.ShowButton}\n                    {...rest}\n                >\n                    <IconEye size={20} {...svgIconProps} />\n                </IconButton>\n            ) : (\n                <Button\n                    variant=\"outline\"\n                    isDisabled={data?.can === false}\n                    leftIcon={<IconEye size={20} {...svgIconProps} />}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.ShowButton}\n                    className={RefineButtonClassNames.ShowButton}\n                    {...rest}\n                >\n                    {children ?? translate(\"buttons.show\", \"Show\")}\n                </Button>\n            )}\n        </ActiveLink>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    pickNotDeprecated,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { IconButton, Button } from \"@chakra-ui/react\";\nimport { IconList } from \"@tabler/icons\";\n\nimport { ListButtonProps } from \"../types\";\n\n/**\n * `<ListButton>` is using uses Chakra UI {@link https://chakra-ui.com/docs/components/button `<Button> `} component.\n * It uses the  {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#list `list`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the list page route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/buttons/list-button} for more details.\n **/\nexport const ListButton: React.FC<ListButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const { listUrl: generateListUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { resource, identifier } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"list\",\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n        params: {\n            resource,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const listUrl = resource ? generateListUrl(resource, meta) : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={listUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            {hideText ? (\n                <IconButton\n                    variant=\"outline\"\n                    aria-label={translate(\n                        `${identifier}.titles.list`,\n                        getUserFriendlyName(\n                            resource?.meta?.label ??\n                                resource?.label ??\n                                identifier ??\n                                resourceNameOrRouteName,\n                            \"plural\",\n                        ),\n                    )}\n                    isDisabled={data?.can === false}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.ListButton}\n                    className={RefineButtonClassNames.ListButton}\n                    {...rest}\n                >\n                    <IconList size={20} {...svgIconProps} />\n                </IconButton>\n            ) : (\n                <Button\n                    variant=\"outline\"\n                    isDisabled={data?.can === false}\n                    leftIcon={<IconList size={20} {...svgIconProps} />}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.ListButton}\n                    className={RefineButtonClassNames.ListButton}\n                    {...rest}\n                >\n                    {children ??\n                        translate(\n                            `${\n                                identifier ??\n                                resourceNameFromProps ??\n                                resourceNameOrRouteName\n                            }.titles.list`,\n                            getUserFriendlyName(\n                                resource?.meta?.label ??\n                                    resource?.label ??\n                                    identifier ??\n                                    pickNotDeprecated(\n                                        resourceNameFromProps,\n                                        resourceNameOrRouteName,\n                                    ),\n                                \"plural\",\n                            ),\n                        )}\n                </Button>\n            )}\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { IconButton, Button } from \"@chakra-ui/react\";\nimport { IconFileExport } from \"@tabler/icons\";\n\nimport { ExportButtonProps } from \"../types\";\n\n/**\n * `<ExportButton>` uses Chakra UI {@link https://chakra-ui.com/docs/components/button `<Button> `} component with a default export icon and a default text with \"Export\".\n * It only has presentational value.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/buttons/export-button} for more details.\n */\nexport const ExportButton: React.FC<ExportButtonProps> = ({\n    hideText = false,\n    children,\n    loading = false,\n    svgIconProps,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    return hideText ? (\n        <IconButton\n            variant=\"outline\"\n            aria-label={translate(\"buttons.export\", \"Export\")}\n            isLoading={loading}\n            data-testid={RefineButtonTestIds.ExportButton}\n            className={RefineButtonClassNames.ExportButton}\n            {...rest}\n        >\n            <IconFileExport size={20} {...svgIconProps} />\n        </IconButton>\n    ) : (\n        <Button\n            variant=\"outline\"\n            isLoading={loading}\n            leftIcon={<IconFileExport size={20} {...svgIconProps} />}\n            data-testid={RefineButtonTestIds.ExportButton}\n            className={RefineButtonClassNames.ExportButton}\n            {...rest}\n        >\n            {children ?? translate(\"buttons.export\", \"Export\")}\n        </Button>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { IconButton, Button } from \"@chakra-ui/react\";\nimport { IconDeviceFloppy } from \"@tabler/icons\";\n\nimport { SaveButtonProps } from \"../types\";\n\n/**\n * `<SaveButton>` uses Chakra UI {@link https://chakra-ui.com/docs/components/button `<Button> `}.\n * It uses it for presantation purposes only. Some of the hooks that refine has adds features to this button.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/buttons/save-button} for more details.\n */\nexport const SaveButton: React.FC<SaveButtonProps> = ({\n    hideText = false,\n    svgIconProps,\n    children,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    return hideText ? (\n        <IconButton\n            colorScheme=\"green\"\n            aria-label={translate(\"buttons.save\", \"Save\")}\n            data-testid={RefineButtonTestIds.SaveButton}\n            className={RefineButtonClassNames.SaveButton}\n            {...rest}\n        >\n            <IconDeviceFloppy size={20} {...svgIconProps} />\n        </IconButton>\n    ) : (\n        <Button\n            colorScheme=\"green\"\n            leftIcon={<IconDeviceFloppy size={20} {...svgIconProps} />}\n            data-testid={RefineButtonTestIds.SaveButton}\n            className={RefineButtonClassNames.SaveButton}\n            {...rest}\n        >\n            {children ?? translate(\"buttons.save\", \"Save\")}\n        </Button>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { Button, IconButton } from \"@chakra-ui/react\";\nimport { IconSquarePlus } from \"@tabler/icons\";\n\nimport { CloneButtonProps } from \"../types\";\n\n/**\n * `<CloneButton>` uses Chakra UI {@link https://chakra-ui.com/docs/components/button `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#clone `clone`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation useNavigation} under the hood.\n * It can be useful when redirecting the app to the create page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/buttons/clone-button} for more details.\n *\n */\nexport const CloneButton: React.FC<CloneButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const { cloneUrl: generateCloneUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const translate = useTranslate();\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"create\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const cloneUrl =\n        resource && (recordItemId || id)\n            ? generateCloneUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={cloneUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            {hideText ? (\n                <IconButton\n                    variant=\"outline\"\n                    aria-label={translate(\"buttons.clone\", \"Clone\")}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.CloneButton}\n                    className={RefineButtonClassNames.CloneButton}\n                    {...rest}\n                >\n                    <IconSquarePlus size={20} {...svgIconProps} />\n                </IconButton>\n            ) : (\n                <Button\n                    variant=\"outline\"\n                    isDisabled={data?.can === false}\n                    leftIcon={<IconSquarePlus size={20} {...svgIconProps} />}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.CloneButton}\n                    className={RefineButtonClassNames.CloneButton}\n                    {...rest}\n                >\n                    {children ?? translate(\"buttons.clone\", \"Clone\")}\n                </Button>\n            )}\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { IconButton, Button } from \"@chakra-ui/react\";\nimport { IconFileImport } from \"@tabler/icons\";\n\nimport { ImportButtonProps } from \"../types\";\n\n/**\n * `<ImportButton>` is compatible with the {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useImport/ `useImport`} core hook.\n * It uses uses Chakra UI {@link https://chakra-ui.com/docs/components/button `<Button> component`} and native html {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input  `<input>`} element.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/buttons/import-button} for more details.\n */\nexport const ImportButton: React.FC<ImportButtonProps> = ({\n    inputProps,\n    hideText = false,\n    loading = false,\n    svgIconProps,\n    children,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    return (\n        <label htmlFor=\"contained-button-file\">\n            <input {...inputProps} id=\"contained-button-file\" multiple hidden />\n            {hideText ? (\n                <IconButton\n                    variant=\"outline\"\n                    as=\"span\"\n                    aria-label={translate(\"buttons.import\", \"Import\")}\n                    isLoading={loading}\n                    data-testid={RefineButtonTestIds.ImportButton}\n                    className={RefineButtonClassNames.ImportButton}\n                    {...rest}\n                >\n                    <IconFileImport size={20} {...svgIconProps} />\n                </IconButton>\n            ) : (\n                <Button\n                    variant=\"outline\"\n                    as=\"span\"\n                    leftIcon={<IconFileImport size={20} {...svgIconProps} />}\n                    isLoading={loading}\n                    data-testid={RefineButtonTestIds.ImportButton}\n                    className={RefineButtonClassNames.ImportButton}\n                    {...rest}\n                >\n                    {children ?? translate(\"buttons.import\", \"Import\")}\n                </Button>\n            )}\n        </label>\n    );\n};\n","import React from \"react\";\nimport { Text } from \"@chakra-ui/react\";\n\nimport { TextFieldProps } from \"../types\";\n\n/**\n * This field lets you show basic text. It uses Chakra UI {@link https://chakra-ui.com/docs/components/text  `<Text>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/fields/text} for more details.\n */\nexport const TextField: React.FC<TextFieldProps> = ({ value, ...rest }) => {\n    return <Text {...rest}>{value}</Text>;\n};\n","import React from \"react\";\nimport { Tag } from \"@chakra-ui/react\";\n\nimport { TagFieldProps } from \"../types\";\n\n/**\n * This field lets you display a value in a tag. It uses Chakra UI {@link https://chakra-ui.com/docs/components/tag `<Tag>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/fields/tag} for more details.\n */\nexport const TagField: React.FC<TagFieldProps> = ({ value, ...rest }) => {\n    return <Tag {...rest}>{value?.toString()}</Tag>;\n};\n","import React from \"react\";\nimport { Link } from \"@chakra-ui/react\";\n\nimport { EmailFieldProps } from \"../types\";\n\n/**\n * This field is used to display email values. It uses the {@link https://chakra-ui.com/docs/components/text  `<Text>` }\n * and {@link https://chakra-ui.com/docs/components/link/usage <Link>`} components from Chakra UI.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/fields/email} for more details.\n */\nexport const EmailField: React.FC<EmailFieldProps> = ({ value, ...rest }) => {\n    return (\n        <Link href={`mailto:${value}`} {...rest}>\n            {value}\n        </Link>\n    );\n};\n","import React from \"react\";\nimport { Tooltip } from \"@chakra-ui/react\";\nimport { IconMinus, IconCheck } from \"@tabler/icons\";\n\nimport { BooleanFieldProps } from \"../types\";\n\n/**\n * This field is used to display boolean values. It uses the {@link https://chakra-ui.com/docs/components/tooltip `<Tooltip>`} values from Chakra UI.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/fields/boolean} for more details.\n */\nexport const BooleanField: React.FC<BooleanFieldProps> = ({\n    value,\n    valueLabelTrue = \"true\",\n    valueLabelFalse = \"false\",\n    trueIcon,\n    falseIcon,\n    svgIconProps,\n    ...rest\n}) => {\n    return (\n        <Tooltip label={value ? valueLabelTrue : valueLabelFalse} {...rest}>\n            <span>\n                {value\n                    ? trueIcon ?? <IconCheck size={20} {...svgIconProps} />\n                    : falseIcon ?? <IconMinus size={20} {...svgIconProps} />}\n            </span>\n        </Tooltip>\n    );\n};\n","import React from \"react\";\n\nimport dayjs from \"dayjs\";\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\n\nimport { Text } from \"@chakra-ui/react\";\n\ndayjs.extend(LocalizedFormat);\n\nconst defaultLocale = dayjs.locale();\n\nimport { DateFieldProps } from \"../types\";\n\n/**\n * This field is used to display dates. It uses {@link https://day.js.org/docs/en/display/format `Day.js`} to display date format and\n * Chakra UI {@link https://chakra-ui.com/docs/components/text `<Text>`} component\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/fields/date} for more details.\n */\nexport const DateField: React.FC<DateFieldProps> = ({\n    value,\n    locales,\n    format: dateFormat = \"L\",\n    ...rest\n}) => {\n    return (\n        <Text {...rest}>\n            {dayjs(value)\n                .locale(locales || defaultLocale)\n                .format(dateFormat)}\n        </Text>\n    );\n};\n","import React from \"react\";\n\nimport { UrlField } from \"@components\";\n\nimport { FileFieldProps } from \"../types\";\n\nexport const FileField: React.FC<FileFieldProps> = ({\n    title,\n    src,\n    ...rest\n}) => {\n    return (\n        <UrlField value={src} title={title} {...rest}>\n            {title ?? src}\n        </UrlField>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"@chakra-ui/react\";\n\nimport { UrlFieldProps } from \"../types\";\n\n/**\n * This field is used to display email values. It uses the {@link https://chakra-ui.com/docs/components/text  `<Text>` } component from Chakra UI.\n * You can pass a URL in its `value` property and you can show a text in its place by passing any `children`.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/fields/url} for more details.\n */\nexport const UrlField: React.FC<UrlFieldProps> = ({\n    children,\n    value,\n    title,\n    ...rest\n}) => {\n    return (\n        <Link href={value} title={title} {...rest}>\n            {children ?? value}\n        </Link>\n    );\n};\n","import React from \"react\";\nimport { Text } from \"@chakra-ui/react\";\n\nimport { NumberFieldProps } from \"../types\";\n\nfunction toLocaleStringSupportsOptions() {\n    return !!(\n        typeof Intl == \"object\" &&\n        Intl &&\n        typeof Intl.NumberFormat == \"function\"\n    );\n}\n/**\n * This field is used to display a number formatted according to the browser locale, right aligned. and uses {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl `Intl`} to display date format\n * and Chakra UI {@link https://chakra-ui.com/docs/components/text  `<Text>`} component.\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/fields/number} for more details.\n */\nexport const NumberField: React.FC<NumberFieldProps> = ({\n    value,\n    locale,\n    options,\n    ...rest\n}) => {\n    const number = Number(value);\n\n    return (\n        <Text {...rest}>\n            {toLocaleStringSupportsOptions()\n                ? number.toLocaleString(locale, options)\n                : number}\n        </Text>\n    );\n};\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\n\nimport { MarkdownFieldProps } from \"../types\";\n\n/**\n * This field lets you display markdown content. It supports {@link https://github.github.com/gfm/ GitHub Flavored Markdown}.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/fields/markdown} for more details.\n */\nexport const MarkdownField: React.FC<MarkdownFieldProps> = ({ value = \"\" }) => {\n    return <ReactMarkdown plugins={[gfm]}>{value}</ReactMarkdown>;\n};\n","import * as React from \"react\";\nimport { RefineReadyPageProps } from \"@refinedev/ui-types\";\nimport {\n    Box,\n    Code,\n    Heading,\n    Text,\n    Button,\n    Link,\n    Image,\n} from \"@chakra-ui/react\";\n\n/**\n * @deprecated `ReadyPage` is deprecated and will be removed in the next major release.\n */\nexport const ReadyPage: React.FC<RefineReadyPageProps> = () => {\n    return (\n        <Box\n            p=\"4\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            minH=\"100vh\"\n            bg=\"sider.background\"\n            bgImage=\"https://refine.ams3.cdn.digitaloceanspaces.com/login-background/background.png\"\n        >\n            <Image\n                mb=\"8\"\n                src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                alt=\"Refine Logo\"\n            />\n\n            <Heading mb=\"6\" as=\"h1\" size=\"3xl\" color=\"white\" textAlign=\"center\">\n                Welcome on board\n            </Heading>\n            <Heading as=\"h3\" size=\"md\" color=\"white\" mb=\"6\" textAlign=\"center\">\n                Your configuration is completed.\n            </Heading>\n            <Text mb=\"8\" fontSize=\"xl\" color=\"white\" textAlign=\"center\">\n                Now you can get started by adding your resources to the{\" \"}\n                <Code>resources</Code> property of <Code>Refine</Code>\n            </Text>\n\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\" gap=\"3\">\n                <Button\n                    as={Link}\n                    href=\"https://refine.dev\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    colorScheme=\"white\"\n                    color=\"white\"\n                    variant=\"outline\"\n                    minW=\"150px\"\n                >\n                    Documentation\n                </Button>\n                <Button\n                    as={Link}\n                    href=\"https://refine.dev/examples\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    colorScheme=\"white\"\n                    color=\"white\"\n                    variant=\"outline\"\n                    minW=\"150px\"\n                >\n                    Examples\n                </Button>\n                <Button\n                    as={Link}\n                    href=\"https://discord.gg/refine\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    colorScheme=\"white\"\n                    color=\"white\"\n                    variant=\"outline\"\n                    minW=\"150px\"\n                >\n                    Community\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n","import React from \"react\";\nimport { WelcomePage as WelcomePageFromCore } from \"@refinedev/core\";\n\n/**\n * It is a page that welcomes you after the configuration is completed.\n * @deprecated `WelcomePage` is deprecated. Use `WelcomePage` from `@refinedev/core` instead.\n */\nexport const WelcomePage: React.FC = () => {\n    return <WelcomePageFromCore />;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { RefineErrorPageProps } from \"@refinedev/ui-types\";\nimport {\n    useGo,\n    useResource,\n    useRouterType,\n    useTranslate,\n    useNavigation,\n} from \"@refinedev/core\";\nimport {\n    Box,\n    Heading,\n    Text,\n    Tooltip,\n    IconButton,\n    Button,\n    useColorModeValue,\n    Stack,\n} from \"@chakra-ui/react\";\nimport { IconInfoCircle } from \"@tabler/icons\";\n\nexport const ErrorComponent: React.FC<RefineErrorPageProps> = () => {\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const translate = useTranslate();\n    const { push } = useNavigation();\n    const go = useGo();\n    const routerType = useRouterType();\n\n    const { resource, action } = useResource();\n\n    useEffect(() => {\n        if (resource && action) {\n            setErrorMessage(\n                translate(\n                    \"pages.error.info\",\n                    {\n                        action,\n                        resource: resource?.name,\n                    },\n                    `You may have forgotten to add the \"${action}\" component to \"${resource?.name}\" resource.`,\n                ),\n            );\n        }\n    }, [resource, action]);\n\n    const color = useColorModeValue(\"gray.500\", \"gray.400\");\n\n    return (\n        <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            minH=\"calc(100vh - 150px)\"\n        >\n            <Heading fontWeight={900} fontSize={[120, 160, 220]} color={color}>\n                404\n            </Heading>\n            <Stack\n                direction={[\"column\", \"row\"]}\n                alignItems=\"center\"\n                spacing={2}\n            >\n                <Text color={color} fontSize=\"xl\" align=\"center\">\n                    {translate(\n                        \"pages.error.404\",\n                        \"Sorry, the page you visited does not exist.\",\n                    )}\n                </Text>\n                {errorMessage && (\n                    <Tooltip openDelay={0} label={errorMessage}>\n                        <IconButton\n                            aria-label=\"info\"\n                            color={color}\n                            data-testid=\"error-component-tooltip\"\n                        >\n                            <IconInfoCircle />\n                        </IconButton>\n                    </Tooltip>\n                )}\n            </Stack>\n            <Button\n                mt={6}\n                variant=\"outline\"\n                onClick={() => {\n                    if (routerType === \"legacy\") {\n                        push(\"/\");\n                    } else {\n                        go({ to: \"/\" });\n                    }\n                }}\n            >\n                {translate(\"pages.error.backHome\", \"Back Home\")}\n            </Button>\n        </Box>\n    );\n};\n","import React from \"react\";\nimport { AuthPageProps } from \"@refinedev/core\";\nimport {\n    LoginPage,\n    RegisterPage,\n    ForgotPasswordPage,\n    UpdatePasswordPage,\n} from \"./components\";\nimport { BoxProps } from \"@chakra-ui/react\";\nimport { UseFormProps } from \"@refinedev/react-hook-form\";\n\nexport interface FormPropsType<TFormType> extends UseFormProps {\n    onSubmit?: (values: TFormType) => void;\n}\n\nexport type AuthProps = AuthPageProps<BoxProps, BoxProps, FormPropsType<any>>;\n\n/**\n * **refine** has a default auth page form which is served on `/login` route when the `authProvider` configuration is provided.\n * @param title is not implemented yet.\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/chakra-auth-page/} for more details.\n */\nexport const AuthPage: React.FC<AuthProps> = (props) => {\n    const { type } = props;\n    const renderView = () => {\n        switch (type) {\n            case \"register\":\n                return <RegisterPage {...props} />;\n            case \"forgotPassword\":\n                return <ForgotPasswordPage {...props} />;\n            case \"updatePassword\":\n                return <UpdatePasswordPage {...props} />;\n            default:\n                return <LoginPage {...props} />;\n        }\n    };\n\n    return <>{renderView()}</>;\n};\n","import React from \"react\";\nimport {\n    LoginPageProps,\n    LoginFormTypes,\n    useRouterType,\n    useLink,\n    useRouterContext,\n    useLogin,\n    useTranslate,\n    BaseRecord,\n    HttpError,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport {\n    Box,\n    Heading,\n    BoxProps,\n    VStack,\n    Button,\n    Divider,\n    FormControl,\n    FormLabel,\n    Input,\n    Link as ChakraLink,\n    FormErrorMessage,\n    HStack,\n    Checkbox,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useForm } from \"@refinedev/react-hook-form\";\nimport { FormProvider } from \"react-hook-form\";\n\nimport { layoutProps, cardProps } from \"../styles\";\nimport { FormPropsType } from \"../..\";\nimport { ThemedTitle } from \"@components\";\n\ntype LoginProps = LoginPageProps<\n    BoxProps,\n    BoxProps,\n    FormPropsType<LoginFormTypes>\n>;\n\nexport const LoginPage: React.FC<LoginProps> = ({\n    providers,\n    registerLink,\n    forgotPasswordLink,\n    rememberMe,\n    contentProps,\n    wrapperProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login } = useLogin<LoginFormTypes>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n    const methods = useForm<BaseRecord, HttpError, LoginFormTypes>({\n        ...useFormProps,\n    });\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = methods;\n\n    const renderProviders = () => {\n        if (providers && providers.length > 0) {\n            return (\n                <>\n                    <VStack>\n                        {providers.map((provider) => (\n                            <Button\n                                key={provider.name}\n                                variant=\"outline\"\n                                width=\"full\"\n                                leftIcon={<>{provider?.icon}</>}\n                                fontSize=\"sm\"\n                                onClick={() =>\n                                    login({\n                                        providerName: provider.name,\n                                    })\n                                }\n                            >\n                                {provider.label ?? (\n                                    <label>{provider.label}</label>\n                                )}\n                            </Button>\n                        ))}\n                    </VStack>\n                    <Divider my=\"6\" />\n                </>\n            );\n        }\n        return null;\n    };\n\n    const importantTextColor = useColorModeValue(\"brand.500\", \"brand.200\");\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? <ThemedTitle collapsed={false} />}\n            </div>\n        );\n\n    const allContentProps = { ...cardProps, ...contentProps };\n    const content = (\n        <Box\n            bg=\"chakra-body-bg\"\n            borderWidth=\"1px\"\n            borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n            backgroundColor={useColorModeValue(\"white\", \"gray.800\")}\n            {...allContentProps}\n        >\n            <Heading\n                mb=\"8\"\n                textAlign=\"center\"\n                fontSize=\"2xl\"\n                color={importantTextColor}\n            >\n                {translate(\"pages.login.title\", \"Sign in to your account\")}\n            </Heading>\n            {renderProviders()}\n            <form\n                onSubmit={handleSubmit((data) => {\n                    if (onSubmit) {\n                        return onSubmit(data);\n                    }\n\n                    return login(data);\n                })}\n            >\n                <FormControl mt=\"6\" isInvalid={!!errors?.email}>\n                    <FormLabel htmlFor=\"email\">\n                        {translate(\"pages.login.fields.email\", \"Email\")}\n                    </FormLabel>\n                    <Input\n                        id=\"email\"\n                        placeholder=\"Email\"\n                        type=\"text\"\n                        {...register(\"email\", {\n                            required: true,\n                            pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                message: translate(\n                                    \"pages.login.errors.validEmail\",\n                                    \"Invalid email address\",\n                                ),\n                            },\n                        })}\n                    />\n                    <FormErrorMessage>\n                        {`${errors.email?.message}`}\n                    </FormErrorMessage>\n                </FormControl>\n\n                <FormControl mt=\"6\" isInvalid={!!errors?.password}>\n                    <FormLabel htmlFor=\"password\">\n                        {translate(\"pages.login.fields.password\", \"Password\")}\n                    </FormLabel>\n                    <Input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        {...register(\"password\", {\n                            required: true,\n                        })}\n                    />\n                    <FormErrorMessage>\n                        {`${errors.password?.message}`}\n                    </FormErrorMessage>\n                </FormControl>\n\n                {rememberMe ?? (\n                    <Checkbox {...register(\"remember\")} mt=\"6\">\n                        {translate(\n                            \"pages.login.buttons.rememberMe\",\n                            \"Remember me\",\n                        )}\n                    </Checkbox>\n                )}\n\n                <Button mt=\"6\" type=\"submit\" width=\"full\" colorScheme=\"brand\">\n                    {translate(\"pages.login.signin\", \"Sign in\")}\n                </Button>\n\n                <Box mt=\"6\">\n                    <HStack justifyContent=\"space-between\" fontSize=\"12px\">\n                        {forgotPasswordLink ?? (\n                            <ChakraLink\n                                as={Link}\n                                color={importantTextColor}\n                                to=\"/forgot-password\"\n                            >\n                                {translate(\n                                    \"pages.login.buttons.forgotPassword\",\n                                    \"Forgot password?\",\n                                )}\n                            </ChakraLink>\n                        )}\n                        {registerLink ?? (\n                            <Box>\n                                <span>\n                                    {translate(\n                                        \"pages.login.buttons.noAccount\",\n                                        \"Don’t have an account?\",\n                                    )}\n                                </span>\n                                <ChakraLink\n                                    color={importantTextColor}\n                                    ml=\"1\"\n                                    as={Link}\n                                    fontWeight=\"bold\"\n                                    to=\"/register\"\n                                >\n                                    {translate(\n                                        \"pages.login.register\",\n                                        \"Sign up\",\n                                    )}\n                                </ChakraLink>\n                            </Box>\n                        )}\n                    </HStack>\n                </Box>\n            </form>\n        </Box>\n    );\n\n    const allWrapperProps = { ...layoutProps, ...wrapperProps };\n    return (\n        <FormProvider {...methods}>\n            <Box {...allWrapperProps}>\n                {renderContent ? (\n                    renderContent(content, PageTitle)\n                ) : (\n                    <>\n                        {PageTitle}\n                        {content}\n                    </>\n                )}\n            </Box>\n        </FormProvider>\n    );\n};\n","import { BoxProps } from \"@chakra-ui/react\";\n\nexport const layoutProps: BoxProps = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundSize: \"cover\",\n    minHeight: \"100vh\",\n};\n\nexport const cardProps: BoxProps = {\n    width: \"400px\",\n    borderRadius: \"12px\",\n    padding: \"32px\",\n};\n\nexport const titleProps: BoxProps = {\n    textAlign: \"center\",\n    fontSize: \"24px\",\n};\n","import React from \"react\";\nimport {\n    useTranslate,\n    useRouterType,\n    useLink,\n    useRouterContext,\n    useRegister,\n    RegisterPageProps,\n    RegisterFormTypes,\n    BaseRecord,\n    HttpError,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport {\n    Box,\n    BoxProps,\n    Button,\n    Divider,\n    FormControl,\n    FormErrorMessage,\n    FormLabel,\n    Heading,\n    Input,\n    VStack,\n    Link as ChakraLink,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useForm } from \"@refinedev/react-hook-form\";\n\nimport { layoutProps, cardProps } from \"../styles\";\nimport { FormPropsType } from \"../..\";\nimport { ThemedTitle } from \"@components\";\n\ntype RegisterProps = RegisterPageProps<\n    BoxProps,\n    BoxProps,\n    FormPropsType<RegisterFormTypes>\n>;\n\nexport const RegisterPage: React.FC<RegisterProps> = ({\n    providers,\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate } = useRegister({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, RegisterFormTypes>({\n        ...useFormProps,\n    });\n\n    const renderProviders = () => {\n        if (providers && providers.length > 0) {\n            return (\n                <>\n                    <VStack>\n                        {providers.map((provider) => (\n                            <Button\n                                key={provider.name}\n                                variant=\"outline\"\n                                fontSize=\"sm\"\n                                width=\"full\"\n                                leftIcon={<>{provider?.icon}</>}\n                                onClick={() =>\n                                    mutate({\n                                        providerName: provider.name,\n                                    })\n                                }\n                            >\n                                {provider.label ?? (\n                                    <label>{provider.label}</label>\n                                )}\n                            </Button>\n                        ))}\n                    </VStack>\n                    <Divider my=\"6\" />\n                </>\n            );\n        }\n        return null;\n    };\n\n    const importantTextColor = useColorModeValue(\"brand.500\", \"brand.200\");\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? <ThemedTitle collapsed={false} />}\n            </div>\n        );\n\n    const allContentProps = { ...cardProps, ...contentProps };\n    const content = (\n        <Box\n            bg=\"chakra-body-bg\"\n            borderWidth=\"1px\"\n            borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n            backgroundColor={useColorModeValue(\"white\", \"gray.800\")}\n            {...allContentProps}\n        >\n            <Heading\n                mb=\"8\"\n                textAlign=\"center\"\n                fontSize=\"2xl\"\n                color={importantTextColor}\n            >\n                {translate(\"pages.register.title\", \"Sign up for your account\")}\n            </Heading>\n            {renderProviders()}\n            <form\n                onSubmit={handleSubmit((data) => {\n                    if (onSubmit) {\n                        return onSubmit(data);\n                    }\n\n                    return mutate(data);\n                })}\n            >\n                <FormControl mt=\"6\" isInvalid={!!errors?.email}>\n                    <FormLabel htmlFor=\"email\">\n                        {translate(\"pages.register.fields.email\", \"Email\")}\n                    </FormLabel>\n                    <Input\n                        id=\"email\"\n                        type=\"text\"\n                        placeholder=\"Email\"\n                        {...register(\"email\", {\n                            required: true,\n                            pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                message: translate(\n                                    \"pages.register.errors.validEmail\",\n                                    \"Invalid email address\",\n                                ),\n                            },\n                        })}\n                    />\n                    <FormErrorMessage>\n                        {`${errors.email?.message}`}\n                    </FormErrorMessage>\n                </FormControl>\n\n                <FormControl mt=\"6\" isInvalid={!!errors?.password}>\n                    <FormLabel htmlFor=\"password\">\n                        {translate(\n                            \"pages.register.fields.password\",\n                            \"Password\",\n                        )}\n                    </FormLabel>\n                    <Input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        {...register(\"password\", {\n                            required: true,\n                        })}\n                    />\n                    <FormErrorMessage>\n                        {`${errors.password?.message}`}\n                    </FormErrorMessage>\n                </FormControl>\n\n                <Button mt=\"6\" type=\"submit\" width=\"full\" colorScheme=\"brand\">\n                    {translate(\"pages.register.buttons.submit\", \"Sign up\")}\n                </Button>\n\n                {loginLink ?? (\n                    <Box\n                        display=\"flex\"\n                        justifyContent=\"flex-end\"\n                        mt=\"6\"\n                        fontSize=\"12px\"\n                    >\n                        <span>\n                            {translate(\n                                \"pages.login.buttons.haveAccount\",\n                                \"Have an account?\",\n                            )}\n                        </span>\n                        <ChakraLink\n                            color={importantTextColor}\n                            ml=\"1\"\n                            fontWeight=\"bold\"\n                            as={Link}\n                            to=\"/login\"\n                        >\n                            {translate(\"pages.login.signin\", \"Sign in\")}\n                        </ChakraLink>\n                    </Box>\n                )}\n            </form>\n        </Box>\n    );\n\n    const allWrapperProps = { ...layoutProps, ...wrapperProps };\n    return (\n        <Box {...allWrapperProps}>\n            {renderContent ? (\n                renderContent(content, PageTitle)\n            ) : (\n                <>\n                    {PageTitle}\n                    {content}\n                </>\n            )}\n        </Box>\n    );\n};\n","import React from \"react\";\nimport {\n    useTranslate,\n    useLink,\n    useRouterType,\n    useRouterContext,\n    useForgotPassword,\n    ForgotPasswordFormTypes,\n    ForgotPasswordPageProps,\n    BaseRecord,\n    HttpError,\n} from \"@refinedev/core\";\nimport {\n    Box,\n    BoxProps,\n    Button,\n    FormControl,\n    FormErrorMessage,\n    FormLabel,\n    Heading,\n    Input,\n    Link as ChakraLink,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useForm } from \"@refinedev/react-hook-form\";\n\nimport { layoutProps, cardProps } from \"../styles\";\nimport { FormPropsType } from \"../..\";\nimport { ThemedTitle } from \"@components\";\n\ntype ForgotPasswordProps = ForgotPasswordPageProps<\n    BoxProps,\n    BoxProps,\n    FormPropsType<ForgotPasswordFormTypes>\n>;\n\nexport const ForgotPasswordPage: React.FC<ForgotPasswordProps> = ({\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const { mutate } = useForgotPassword<ForgotPasswordFormTypes>();\n    const translate = useTranslate();\n\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n\n    const {\n        handleSubmit,\n        register,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, ForgotPasswordFormTypes>({\n        ...useFormProps,\n    });\n\n    const importantTextColor = useColorModeValue(\"brand.500\", \"brand.200\");\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? <ThemedTitle collapsed={false} />}\n            </div>\n        );\n\n    const allContentProps = { ...cardProps, ...contentProps };\n    const content = (\n        <Box\n            bg=\"chakra-body-bg\"\n            borderWidth=\"1px\"\n            borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n            backgroundColor={useColorModeValue(\"white\", \"gray.800\")}\n            {...allContentProps}\n        >\n            <Heading\n                mb=\"8\"\n                textAlign=\"center\"\n                fontSize=\"2xl\"\n                color={importantTextColor}\n            >\n                {translate(\n                    \"pages.forgotPassword.title\",\n                    \"Forgot your password?\",\n                )}\n            </Heading>\n\n            <form\n                onSubmit={handleSubmit((data) => {\n                    if (onSubmit) {\n                        return onSubmit(data);\n                    }\n\n                    return mutate(data);\n                })}\n            >\n                <FormControl mb=\"3\" isInvalid={!!errors?.email}>\n                    <FormLabel htmlFor=\"email\">\n                        {translate(\n                            \"pages.forgotPassword.fields.email\",\n                            \"Email\",\n                        )}\n                    </FormLabel>\n                    <Input\n                        id=\"email\"\n                        type=\"text\"\n                        {...register(\"email\", {\n                            required: true,\n                            pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                message: translate(\n                                    \"pages.login.errors.validEmail\",\n                                    \"Invalid email address\",\n                                ),\n                            },\n                        })}\n                    />\n                    <FormErrorMessage>\n                        {`${errors.email?.message}`}\n                    </FormErrorMessage>\n                </FormControl>\n\n                {loginLink ?? (\n                    <Box my=\"6\" display=\"flex\" justifyContent=\"flex-end\">\n                        <span>\n                            {translate(\n                                \"pages.register.buttons.haveAccount\",\n                                \"Have an account?\",\n                            )}\n                        </span>\n                        <ChakraLink\n                            color={importantTextColor}\n                            ml=\"1\"\n                            as={Link}\n                            to=\"/login\"\n                        >\n                            {translate(\"pages.login.signin\", \"Sign in\")}\n                        </ChakraLink>\n                    </Box>\n                )}\n\n                <Button mb=\"3\" type=\"submit\" width=\"full\" colorScheme=\"brand\">\n                    {translate(\n                        \"pages.forgotPassword.buttons.submit\",\n                        \"Send reset instructions\",\n                    )}\n                </Button>\n            </form>\n        </Box>\n    );\n\n    const allWrapperProps = { ...layoutProps, ...wrapperProps };\n    return (\n        <Box {...allWrapperProps}>\n            {renderContent ? (\n                renderContent(content, PageTitle)\n            ) : (\n                <>\n                    {PageTitle}\n                    {content}\n                </>\n            )}\n        </Box>\n    );\n};\n","import React from \"react\";\nimport {\n    useTranslate,\n    useUpdatePassword,\n    UpdatePasswordFormTypes,\n    UpdatePasswordPageProps,\n    BaseRecord,\n    HttpError,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport {\n    Box,\n    BoxProps,\n    Button,\n    FormControl,\n    FormErrorMessage,\n    FormLabel,\n    Heading,\n    Input,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useForm } from \"@refinedev/react-hook-form\";\n\nimport { layoutProps, cardProps } from \"../styles\";\nimport { FormPropsType } from \"../..\";\nimport { ThemedTitle } from \"@components\";\n\ntype UpdatePasswordProps = UpdatePasswordPageProps<\n    BoxProps,\n    BoxProps,\n    FormPropsType<UpdatePasswordFormTypes>\n>;\n\nexport const UpdatePasswordPage: React.FC<UpdatePasswordProps> = ({\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate } = useUpdatePassword<UpdatePasswordFormTypes>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const {\n        register,\n        watch,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, UpdatePasswordFormTypes>({\n        ...useFormProps,\n    });\n\n    const importantTextColor = useColorModeValue(\"brand.500\", \"brand.200\");\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? <ThemedTitle collapsed={false} />}\n            </div>\n        );\n\n    const allContentProps = { ...cardProps, ...contentProps };\n    const content = (\n        <Box\n            bg=\"chakra-body-bg\"\n            borderWidth=\"1px\"\n            borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n            backgroundColor={useColorModeValue(\"white\", \"gray.800\")}\n            {...allContentProps}\n        >\n            <Heading\n                mb=\"8\"\n                textAlign=\"center\"\n                fontSize=\"2xl\"\n                color={importantTextColor}\n            >\n                {translate(\"pages.updatePassword.title\", \"Set New Password\")}\n            </Heading>\n            <form\n                onSubmit={handleSubmit((data) => {\n                    if (onSubmit) {\n                        return onSubmit(data);\n                    }\n\n                    return mutate(data);\n                })}\n            >\n                <FormControl mb=\"3\" isInvalid={!!errors?.password}>\n                    <FormLabel htmlFor=\"password\">\n                        {translate(\n                            \"pages.updatePassword.fields.password\",\n                            \"New Password\",\n                        )}\n                    </FormLabel>\n                    <Input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        {...register(\"password\", {\n                            required: true,\n                        })}\n                    />\n                    <FormErrorMessage>\n                        {`${errors.password?.message}`}\n                    </FormErrorMessage>\n                </FormControl>\n\n                <FormControl mb=\"3\" isInvalid={!!errors?.confirmPassword}>\n                    <FormLabel htmlFor=\"confirmPassword\">\n                        {translate(\n                            \"pages.updatePassword.fields.confirmPassword\",\n                            \"Confirm New Password\",\n                        )}\n                    </FormLabel>\n                    <Input\n                        id=\"confirmPassword\"\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        {...register(\"confirmPassword\", {\n                            required: true,\n                            validate: (val: any) => {\n                                if (watch(\"password\") != val) {\n                                    return translate(\n                                        \"pages.updatePassword.errors.confirmPasswordNotMatch\",\n                                        \"Passwords do not match\",\n                                    );\n                                }\n                                return;\n                            },\n                        })}\n                    />\n                    <FormErrorMessage>\n                        {`${errors.confirmPassword?.message}`}\n                    </FormErrorMessage>\n                </FormControl>\n\n                <Button mt=\"6\" type=\"submit\" width=\"full\" colorScheme=\"brand\">\n                    {translate(\"pages.updatePassword.buttons.submit\", \"Update\")}\n                </Button>\n            </form>\n        </Box>\n    );\n\n    const allWrapperProps = { ...layoutProps, ...wrapperProps };\n    return (\n        <Box {...allWrapperProps}>\n            {renderContent ? (\n                renderContent(content, PageTitle)\n            ) : (\n                <>\n                    {PageTitle}\n                    {content}\n                </>\n            )}\n        </Box>\n    );\n};\n","import React from \"react\";\nimport {\n    matchResourceFromRoute,\n    useBreadcrumb,\n    useLink,\n    useRefineContext,\n    useResource,\n    useRouterContext,\n    useRouterType,\n} from \"@refinedev/core\";\nimport { RefineBreadcrumbProps } from \"@refinedev/ui-types\";\nimport {\n    Breadcrumb as ChakraBreadcrumb,\n    BreadcrumbProps as ChakraBreadcrumbProps,\n    BreadcrumbItem,\n    BreadcrumbLink,\n} from \"@chakra-ui/react\";\nimport { IconHome } from \"@tabler/icons\";\n\nexport type BreadcrumbProps = RefineBreadcrumbProps<ChakraBreadcrumbProps>;\n\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({\n    breadcrumbProps,\n    showHome = true,\n    hideIcons = false,\n    meta,\n}) => {\n    const routerType = useRouterType();\n    const { breadcrumbs } = useBreadcrumb({ meta });\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const { hasDashboard } = useRefineContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    if (breadcrumbs.length === 1) {\n        return null;\n    }\n\n    const { resources } = useResource();\n\n    const rootRouteResource = matchResourceFromRoute(\"/\", resources);\n\n    return (\n        <ChakraBreadcrumb mb=\"3\" {...breadcrumbProps}>\n            {showHome && (hasDashboard || rootRouteResource?.found) && (\n                <BreadcrumbItem>\n                    <ActiveLink to=\"/\">\n                        {rootRouteResource?.resource?.meta?.icon ?? (\n                            <IconHome size={20} />\n                        )}\n                    </ActiveLink>\n                </BreadcrumbItem>\n            )}\n            {breadcrumbs.map(({ label, icon, href }) => {\n                return (\n                    <BreadcrumbItem key={label}>\n                        {!hideIcons && icon}\n                        {href ? (\n                            <BreadcrumbLink\n                                ml={2}\n                                as={ActiveLink}\n                                to={href}\n                                href={href}\n                            >\n                                {label}\n                            </BreadcrumbLink>\n                        ) : (\n                            <BreadcrumbLink ml={2}>{label}</BreadcrumbLink>\n                        )}\n                    </BreadcrumbItem>\n                );\n            })}\n        </ChakraBreadcrumb>\n    );\n};\n","import React from \"react\";\nimport { OpenNotificationParams } from \"@refinedev/core\";\nimport {\n    Box,\n    CircularProgress,\n    CircularProgressLabel,\n    IconButton,\n    Text,\n    useToast,\n} from \"@chakra-ui/react\";\nimport { IconRotate2 } from \"@tabler/icons\";\n\nexport type UndoableNotificationProps = {\n    notificationKey: OpenNotificationParams[\"key\"];\n    message: OpenNotificationParams[\"message\"];\n    cancelMutation: OpenNotificationParams[\"cancelMutation\"];\n    undoableTimeout: OpenNotificationParams[\"undoableTimeout\"];\n};\n\nexport const UndoableNotification: React.FC<UndoableNotificationProps> = ({\n    notificationKey = \"\",\n    message,\n    cancelMutation,\n    undoableTimeout = 0,\n}) => {\n    const toast = useToast();\n\n    return (\n        <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n            gap={2}\n            bg=\"chakra-body-bg\"\n            shadow=\"md\"\n            minW={320}\n            p={2}\n        >\n            <CircularProgress value={undoableTimeout * 20} color=\"green\">\n                <CircularProgressLabel>{undoableTimeout}</CircularProgressLabel>\n            </CircularProgress>\n            <Text>{message}</Text>\n            <IconButton\n                aria-label=\"undo\"\n                variant=\"outline\"\n                onClick={() => {\n                    cancelMutation?.();\n                    toast.close(notificationKey);\n                }}\n            >\n                <IconRotate2 size={18} />\n            </IconButton>\n        </Box>\n    );\n};\n","import React from \"react\";\nimport {\n    AutoSaveIndicatorProps,\n    useTranslate,\n    AutoSaveIndicator as AutoSaveIndicatorCore,\n} from \"@refinedev/core\";\nimport { Text } from \"@chakra-ui/react\";\nimport {\n    IconDots,\n    IconRefresh,\n    IconCircleCheck,\n    IconExclamationCircle,\n} from \"@tabler/icons\";\n\nexport const AutoSaveIndicator: React.FC<AutoSaveIndicatorProps> = ({\n    status,\n    elements: {\n        success = (\n            <Message\n                key=\"autoSave.success\"\n                defaultMessage=\"saved\"\n                icon={<IconCircleCheck size=\"18px\" />}\n            />\n        ),\n        error = (\n            <Message\n                key=\"autoSave.error\"\n                defaultMessage=\"auto save failure\"\n                icon={<IconExclamationCircle size=\"18px\" />}\n            />\n        ),\n        loading = (\n            <Message\n                key=\"autoSave.loading\"\n                defaultMessage=\"saving...\"\n                icon={<IconRefresh size=\"18px\" />}\n            />\n        ),\n        idle = (\n            <Message\n                key=\"autoSave.idle\"\n                defaultMessage=\"waiting for changes\"\n                icon={<IconDots size=\"18px\" />}\n            />\n        ),\n    } = {},\n}) => {\n    return (\n        <AutoSaveIndicatorCore\n            status={status}\n            elements={{\n                success,\n                error,\n                loading,\n                idle,\n            }}\n        />\n    );\n};\n\nconst Message = ({\n    key,\n    defaultMessage,\n    icon,\n}: {\n    key: string;\n    defaultMessage: string;\n    icon: React.ReactNode;\n}) => {\n    const translate = useTranslate();\n\n    return (\n        <Text\n            display=\"flex\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n            color=\"gray.700\"\n            marginRight=\"2\"\n            fontSize=\"sm\"\n        >\n            {translate(key, defaultMessage)}\n            <span style={{ marginLeft: \"3px\" }}>{icon}</span>\n        </Text>\n    );\n};\n","import {\n    extendTheme,\n    baseTheme,\n    Theme,\n    StyleFunctionProps,\n} from \"@chakra-ui/react\";\nimport { mode } from \"@chakra-ui/theme-tools\";\n\nexport const refineTheme = extendTheme({\n    config: {\n        initialColorMode: \"system\",\n    },\n    fonts: {\n        heading:\n            \"Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'\",\n        body: \"Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'\",\n    },\n    styles: {\n        global: () => ({\n            \"html, body\": {\n                fontSize: \"14px\",\n            },\n        }),\n    },\n    colors: {\n        brand: {\n            50: \"#E6FFFA\",\n            100: \"#B2F5EA\",\n            200: \"#81E6D9\",\n            300: \"#4FD1C5\",\n            400: \"#38B2AC\",\n            500: \"#319795\",\n            600: \"#2C7A7B\",\n            700: \"#285E61\",\n            800: \"#234E52\",\n            900: \"#1D4044\",\n        },\n        sider: {\n            background: \"#2A132E\",\n            collapseButton: \"#150A17\",\n        },\n    },\n});\n\nconst refineCustomColors = {\n    header: {\n        bg: {\n            light: baseTheme.colors.white,\n            dark: baseTheme.colors.gray[800],\n        },\n    },\n    sider: {\n        bg: {\n            light: baseTheme.colors.white,\n            dark: baseTheme.colors.gray[800],\n        },\n        header: {\n            light: baseTheme.colors.white,\n            dark: baseTheme.colors.gray[800],\n        },\n    },\n} as const;\n\nconst refineCustomThemes = {\n    Blue: baseTheme.colors.blue,\n    Purple: baseTheme.colors.purple,\n    Magenta: baseTheme.colors.pink,\n    Red: baseTheme.colors.red,\n    Orange: baseTheme.colors.orange,\n    Yellow: baseTheme.colors.yellow,\n    Green: baseTheme.colors.green,\n};\n\nexport interface RefineTheme extends Omit<Theme, \"colors\"> {\n    colors: Theme[\"colors\"] & {\n        brand: {\n            50: string;\n            100: string;\n            200: string;\n            300: string;\n            400: string;\n            500: string;\n            600: string;\n            700: string;\n            800: string;\n            900: string;\n        };\n        refine: typeof refineCustomColors;\n    };\n}\n\nexport const RefineThemes = Object.keys(refineCustomThemes).reduce(\n    (acc, key) => {\n        const themeName = key as keyof typeof refineCustomThemes;\n        return {\n            ...acc,\n            [key]: extendTheme({\n                config: {\n                    initialColorMode: \"system\",\n                },\n\n                styles: {\n                    global: (props: StyleFunctionProps) => {\n                        const bgLight = props.theme.colors.gray[50];\n                        const bgDark = props.theme.colors.gray[900];\n                        return {\n                            \"html, body\": {\n                                background: mode(bgLight, bgDark)(props),\n                            },\n                        };\n                    },\n                },\n\n                colors: {\n                    brand: refineCustomThemes[themeName],\n                    refine: {\n                        ...refineCustomColors,\n                    },\n                },\n            }),\n        };\n    },\n    {},\n) as Record<keyof typeof refineCustomThemes, RefineTheme>;\n","import React from \"react\";\nimport { NotificationProvider } from \"@refinedev/core\";\nimport { useToast } from \"@chakra-ui/react\";\n\nimport { UndoableNotification } from \"@components/undoableNotification\";\n\nexport const notificationProvider = (): NotificationProvider => {\n    const toast = useToast({\n        position: \"top-right\",\n        isClosable: true,\n    });\n\n    return {\n        open: ({\n            key,\n            message,\n            type,\n            description,\n            undoableTimeout,\n            cancelMutation,\n        }) => {\n            if (type === \"progress\") {\n                if (key && toast.isActive(key)) {\n                    toast.update(key, {\n                        render: () => (\n                            <UndoableNotification\n                                notificationKey={key}\n                                message={message}\n                                cancelMutation={cancelMutation}\n                                undoableTimeout={undoableTimeout}\n                            />\n                        ),\n                    });\n                } else {\n                    toast({\n                        id: key,\n                        render: () => (\n                            <UndoableNotification\n                                notificationKey={key}\n                                message={message}\n                                cancelMutation={cancelMutation}\n                                undoableTimeout={undoableTimeout}\n                            />\n                        ),\n                    });\n                }\n            } else {\n                if (key && toast.isActive(key)) {\n                    toast.update(key, {\n                        title: message,\n                        status: type,\n                        description,\n                    });\n                } else {\n                    toast({\n                        id: key,\n                        title: message,\n                        description,\n                        status: type,\n                    });\n                }\n            }\n        },\n        close: (key) => toast.close(key),\n    };\n};\n"],"mappings":"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","names":["React","Box","useColorModeValue","React","useState","CanAccess","useIsExistAuthentication","useLink","useLogout","useMenu","useActiveAuthProvider","useRefineContext","useRouterContext","useRouterType","useTitle","useTranslate","useWarnAboutChange","Accordion","AccordionButton","AccordionIcon","AccordionItem","AccordionPanel","Box","Button","Drawer","DrawerContent","DrawerOverlay","IconButton","Tooltip","VStack","IconList","IconChevronRight","IconChevronLeft","IconDashboard","IconLogout","IconMenu2","Sider","__name","TitleFromProps","render","meta","collapsed","setCollapsed","useState","opened","setOpened","routerType","useRouterType","NewLink","useLink","LegacyLink","useRouterContext","Link","menuItems","selectedKey","defaultOpenKeys","useMenu","TitleFromContext","useTitle","isExistAuthentication","useIsExistAuthentication","t","useTranslate","hasDashboard","useRefineContext","authProvider","useActiveAuthProvider","warnWhen","setWarnWhen","useWarnAboutChange","mutateLogout","useLogout","RenderToTitle","Title","siderWidth","commonTooltipProps","renderTreeView","tree","item","label","route","name","icon","children","isSelected","isParent","linkProps","React","CanAccess","Accordion","AccordionItem","Tooltip","AccordionButton","Button","IconList","AccordionIcon","Box","AccordionPanel","items","dashboard","IconDashboard","handleLogout","logout","IconLogout","renderSider","IconButton","prev","IconMenu2","Drawer","DrawerOverlay","DrawerContent","VStack","IconChevronRight","IconChevronLeft","React","useGetIdentity","useActiveAuthProvider","Box","Avatar","Text","HStack","Header","__name","authProvider","useActiveAuthProvider","user","useGetIdentity","React","Box","HStack","Text","Avatar","Layout","__name","Sider","Header","Title","Footer","OffLayoutArea","children","SiderToRender","HeaderToRender","bg","useColorModeValue","React","Box","React","useRouterContext","useRouterType","useLink","ChakraLink","Title","__name","collapsed","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","React","ChakraLink","React","useState","Box","React","useState","CanAccess","useIsExistAuthentication","useLink","useLogout","useMenu","useActiveAuthProvider","useRefineContext","useRouterContext","useRouterType","useTitle","useTranslate","useWarnAboutChange","Accordion","AccordionButton","AccordionIcon","AccordionItem","AccordionPanel","Box","Button","Drawer","DrawerContent","DrawerOverlay","IconButton","Tooltip","useColorModeValue","VStack","IconList","IconDashboard","IconPower","IconMenu2","ThemedSider","__name","TitleFromProps","render","meta","isSiderOpen","opened","setOpened","useState","routerType","useRouterType","NewLink","useLink","LegacyLink","useRouterContext","Link","menuItems","selectedKey","defaultOpenKeys","useMenu","TitleFromContext","useTitle","isExistAuthentication","useIsExistAuthentication","t","useTranslate","hasDashboard","useRefineContext","authProvider","useActiveAuthProvider","warnWhen","setWarnWhen","useWarnAboutChange","mutateLogout","useLogout","RenderToTitle","ThemedTitle","siderWidth","commonTooltipProps","renderTreeView","tree","item","label","route","name","icon","children","isSelected","isParent","linkProps","React","CanAccess","Accordion","AccordionItem","Tooltip","AccordionButton","Button","IconList","AccordionIcon","useColorModeValue","Box","AccordionPanel","items","dashboard","IconDashboard","handleLogout","logout","IconPower","renderSider","IconButton","prev","IconMenu2","Drawer","DrawerOverlay","DrawerContent","VStack","React","useGetIdentity","useActiveAuthProvider","Box","Avatar","Text","HStack","useColorModeValue","IconButton","Icon","IconLayoutSidebarLeftCollapse","IconLayoutSidebarLeftExpand","ThemedHeader","__name","isSiderOpen","onToggleSiderClick","toggleSiderIconFromProps","authProvider","useActiveAuthProvider","user","useGetIdentity","bgColor","useColorModeValue","hasSidebarToggle","React","Box","IconButton","Icon","IconLayoutSidebarLeftCollapse","IconLayoutSidebarLeftExpand","HStack","Text","Avatar","ThemedLayout","__name","Sider","Header","Title","Footer","OffLayoutArea","children","isSiderOpen","setIsSiderOpen","useState","React","Box","ThemedSider","ThemedHeader","prevValue","React","useRouterContext","useRouterType","useLink","ChakraLink","Icon","HStack","Heading","defaultText","defaultIcon","React","ThemedTitle","__name","collapsed","icon","text","wrapperStyles","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ChakraLink","HStack","Icon","Heading","React","Box","React","CanAccess","useIsExistAuthentication","useLink","useLogout","useMenu","useActiveAuthProvider","useRefineContext","useRouterContext","useRouterType","useTitle","useTranslate","useWarnAboutChange","Accordion","AccordionButton","AccordionIcon","AccordionItem","AccordionPanel","Box","Button","Drawer","DrawerContent","DrawerOverlay","Tooltip","useColorModeValue","VStack","IconList","IconDashboard","IconPower","React","useRouterContext","useRouterType","useLink","ChakraLink","Icon","HStack","Heading","defaultText","defaultIcon","React","ThemedTitleV2","__name","collapsed","icon","text","wrapperStyles","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ChakraLink","HStack","Icon","Heading","usePagination","__name","props","current","pageCount","prev","next","items","r","r1","r2","i","useContext","React","useState","ThemedLayoutContext","React","ThemedLayoutContextProvider","__name","children","initialSiderCollapsed","siderCollapsed","setSiderCollapsed","useState","mobileSiderOpen","setMobileSiderOpen","useSiderVisible","__name","mobileSiderOpen","siderCollapsed","setMobileSiderOpen","setSiderCollapsed","useContext","ThemedLayoutContext","visible","useContext","useThemedLayoutContext","__name","mobileSiderOpen","siderCollapsed","setMobileSiderOpen","setSiderCollapsed","useContext","ThemedLayoutContext","ThemedSiderV2","__name","TitleFromProps","render","meta","activeItemDisabled","siderCollapsed","mobileSiderOpen","setMobileSiderOpen","useThemedLayoutContext","routerType","useRouterType","NewLink","useLink","LegacyLink","useRouterContext","Link","menuItems","selectedKey","defaultOpenKeys","useMenu","TitleFromContext","useTitle","isExistAuthentication","useIsExistAuthentication","t","useTranslate","hasDashboard","useRefineContext","authProvider","useActiveAuthProvider","warnWhen","setWarnWhen","useWarnAboutChange","mutateLogout","useLogout","RenderToTitle","ThemedTitleV2","siderWidth","commonTooltipProps","renderTreeView","tree","item","label","route","name","icon","children","isSelected","isParent","linkProps","linkStyle","React","CanAccess","Accordion","AccordionItem","Tooltip","AccordionButton","Button","IconList","AccordionIcon","useColorModeValue","Box","AccordionPanel","items","dashboard","IconDashboard","handleLogout","logout","IconPower","renderSider","Drawer","DrawerOverlay","DrawerContent","VStack","React","useGetIdentity","useActiveAuthProvider","pickNotDeprecated","Box","Avatar","Text","HStack","useColorModeValue","React","IconButton","IconLayoutSidebarLeftCollapse","IconLayoutSidebarLeftExpand","IconMenu2","HamburgerIcon","__name","props","React","IconButton","HamburgerMenu","siderCollapsed","setSiderCollapsed","mobileSiderOpen","setMobileSiderOpen","useThemedLayoutContext","IconLayoutSidebarLeftExpand","IconLayoutSidebarLeftCollapse","IconMenu2","ThemedHeaderV2","__name","isSticky","sticky","authProvider","useActiveAuthProvider","user","useGetIdentity","bgColor","useColorModeValue","stickyProps","pickNotDeprecated","React","Box","HamburgerMenu","HStack","Text","Avatar","ThemedLayoutV2","__name","Sider","Header","Title","Footer","OffLayoutArea","children","initialSiderCollapsed","React","ThemedLayoutContextProvider","Box","ThemedSiderV2","ThemedHeaderV2","React","useTranslate","useUserFriendlyName","useRefineContext","useRouterType","useResource","Box","Heading","RefinePageHeaderClassNames","List","__name","props","canCreate","children","createButtonPropsFromProps","resourceFromProps","wrapperProps","contentProps","headerProps","headerButtonProps","headerButtonsFromProps","breadcrumbFromProps","title","translate","useTranslate","globalBreadcrumb","useRefineContext","routerType","useRouterType","getUserFriendlyName","useUserFriendlyName","resource","identifier","useResource","isCreateButtonVisible","breadcrumb","createButtonProps","defaultHeaderButtons","React","CreateButton","headerButtons","renderTitle","_a","_b","Heading","RefinePageHeaderClassNames","Box","Breadcrumb","React","useNavigation","useTranslate","useUserFriendlyName","useRefineContext","useResource","useToPath","useRouterType","useBack","useGo","Box","IconButton","HStack","Heading","Spinner","IconArrowLeft","RefinePageHeaderClassNames","Show","__name","props","_a","children","resourceFromProps","recordItemId","canDelete","canEdit","dataProviderName","isLoading","footerButtonsFromProps","footerButtonProps","headerButtonsFromProps","headerButtonProps","wrapperProps","contentProps","headerProps","goBackFromProps","breadcrumbFromProps","title","translate","useTranslate","globalBreadcrumb","useRefineContext","routerType","useRouterType","back","useBack","go","useGo","goBack","legacyGoList","useNavigation","getUserFriendlyName","useUserFriendlyName","resource","action","idFromParams","identifier","useResource","goListPath","useToPath","id","breadcrumb","hasList","isDeleteButtonVisible","isEditButtonVisible","listButtonProps","editButtonProps","deleteButtonProps","refreshButtonProps","defaultHeaderButtons","React","ListButton","EditButton","DeleteButton","RefreshButton","buttonBack","IconButton","IconArrowLeft","headerButtons","footerButtons","renderTitle","_b","Heading","RefinePageHeaderClassNames","Box","Spinner","Breadcrumb","HStack","React","useMutationMode","useNavigation","useTranslate","useUserFriendlyName","useRefineContext","useRouterType","useBack","useResource","useGo","useToPath","Box","Heading","HStack","IconButton","Spinner","IconArrowLeft","RefinePageHeaderClassNames","Edit","__name","props","_a","children","resourceFromProps","recordItemId","deleteButtonPropsFromProps","mutationModeFromProps","saveButtonPropsFromProps","canDelete","dataProviderName","isLoading","footerButtonsFromProps","footerButtonProps","headerButtonsFromProps","headerButtonProps","wrapperProps","contentProps","headerProps","goBackFromProps","breadcrumbFromProps","title","autoSaveProps","translate","useTranslate","globalBreadcrumb","useRefineContext","mutationModeContext","useMutationMode","mutationMode","routerType","useRouterType","back","useBack","go","useGo","goBack","legacyGoList","useNavigation","getUserFriendlyName","useUserFriendlyName","resource","action","idFromParams","identifier","useResource","goListPath","useToPath","id","breadcrumb","hasList","isDeleteButtonVisible","listButtonProps","refreshButtonProps","deleteButtonProps","saveButtonProps","defaultHeaderButtons","React","Box","AutoSaveIndicator","ListButton","RefreshButton","defaultFooterButtons","DeleteButton","SaveButton","buttonBack","IconButton","IconArrowLeft","headerButtons","footerButtons","renderTitle","_b","Heading","RefinePageHeaderClassNames","Spinner","Breadcrumb","HStack","React","useNavigation","useTranslate","useUserFriendlyName","useRefineContext","useRouterType","useResource","useBack","Box","Heading","HStack","IconButton","Spinner","IconArrowLeft","RefinePageHeaderClassNames","Create","__name","props","children","saveButtonPropsFromProps","isLoading","resourceFromProps","footerButtonsFromProps","footerButtonProps","headerButtonsFromProps","headerButtonProps","wrapperProps","contentProps","headerProps","goBackFromProps","breadcrumbFromProps","title","translate","useTranslate","globalBreadcrumb","useRefineContext","routerType","useRouterType","back","useBack","goBack","useNavigation","getUserFriendlyName","useUserFriendlyName","resource","action","identifier","useResource","breadcrumb","saveButtonProps","defaultFooterButtons","React","SaveButton","buttonBack","IconButton","IconArrowLeft","headerButtons","footerButtons","renderTitle","_a","_b","Heading","RefinePageHeaderClassNames","Box","Spinner","Breadcrumb","HStack","React","useContext","useNavigation","useTranslate","useCan","useResource","useRouterContext","useRouterType","useLink","AccessControlContext","RefineButtonClassNames","RefineButtonTestIds","Button","IconButton","IconSquarePlus","CreateButton","__name","resourceNameFromProps","resourceNameOrRouteName","hideText","accessControl","svgIconProps","meta","children","onClick","rest","accessControlContext","useContext","AccessControlContext","accessControlEnabled","hideIfUnauthorized","translate","useTranslate","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","generateCreateUrl","useNavigation","resource","useResource","data","useCan","disabledTitle","createUrl","React","e","IconButton","RefineButtonTestIds","RefineButtonClassNames","IconSquarePlus","Button","React","useContext","useCan","useNavigation","useTranslate","useResource","useRouterContext","useRouterType","useLink","AccessControlContext","RefineButtonClassNames","RefineButtonTestIds","IconPencil","Button","IconButton","EditButton","__name","resourceNameFromProps","resourceNameOrRouteName","recordItemId","hideText","accessControl","svgIconProps","meta","children","onClick","rest","accessControlContext","useContext","AccessControlContext","accessControlEnabled","hideIfUnauthorized","translate","useTranslate","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","generateEditUrl","useNavigation","id","resource","useResource","data","useCan","disabledTitle","editUrl","React","e","IconButton","RefineButtonTestIds","RefineButtonClassNames","IconPencil","Button","React","useContext","useState","useDelete","useTranslate","useMutationMode","useCan","useResource","pickNotDeprecated","useWarnAboutChange","AccessControlContext","RefineButtonClassNames","RefineButtonTestIds","Button","HStack","IconButton","Popover","PopoverArrow","PopoverBody","PopoverContent","PopoverHeader","PopoverTrigger","IconTrash","DeleteButton","__name","resourceNameFromProps","resourceNameOrRouteName","recordItemId","onSuccess","mutationModeProp","children","successNotification","errorNotification","hideText","accessControl","meta","metaData","dataProviderName","confirmTitle","confirmOkText","confirmCancelText","svgIconProps","rest","accessControlContext","useContext","AccessControlContext","accessControlEnabled","hideIfUnauthorized","translate","useTranslate","id","resource","identifier","useResource","mutationModeContext","useMutationMode","mutationMode","mutate","isLoading","variables","useDelete","data","useCan","disabledTitle","opened","setOpened","useState","onConfirm","setWarnWhen","pickNotDeprecated","value","useWarnAboutChange","React","Popover","PopoverTrigger","IconButton","o","RefineButtonTestIds","RefineButtonClassNames","IconTrash","Button","PopoverContent","PopoverArrow","PopoverHeader","PopoverBody","HStack","React","useTranslate","useResource","useInvalidate","queryKeys","pickDataProvider","RefineButtonClassNames","RefineButtonTestIds","IconButton","Button","IconRefresh","useQueryClient","RefreshButton","__name","resourceNameFromProps","resourceNameOrRouteName","recordItemId","hideText","dataProviderName","svgIconProps","children","onClick","_meta","_metaData","rest","translate","useTranslate","queryClient","useQueryClient","invalidates","useInvalidate","resources","identifier","id","useResource","isInvalidating","queryKeys","pickDataProvider","handleInvalidate","React","IconButton","e","RefineButtonTestIds","RefineButtonClassNames","IconRefresh","Button","React","useContext","useCan","useNavigation","useTranslate","useResource","useRouterContext","useRouterType","useLink","AccessControlContext","RefineButtonClassNames","RefineButtonTestIds","IconButton","Button","IconEye","ShowButton","__name","resourceNameFromProps","resourceNameOrRouteName","recordItemId","hideText","accessControl","svgIconProps","meta","children","onClick","rest","accessControlContext","useContext","AccessControlContext","accessControlEnabled","hideIfUnauthorized","generateShowUrl","useNavigation","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","translate","useTranslate","id","resource","useResource","data","useCan","disabledTitle","showUrl","React","e","IconButton","RefineButtonTestIds","RefineButtonClassNames","IconEye","Button","React","useContext","useCan","useNavigation","useTranslate","useUserFriendlyName","useResource","useRouterContext","useRouterType","useLink","pickNotDeprecated","AccessControlContext","RefineButtonClassNames","RefineButtonTestIds","IconButton","Button","IconList","ListButton","__name","resourceNameFromProps","resourceNameOrRouteName","hideText","accessControl","svgIconProps","meta","children","onClick","rest","_a","_b","accessControlContext","useContext","AccessControlContext","accessControlEnabled","hideIfUnauthorized","generateListUrl","useNavigation","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","getUserFriendlyName","useUserFriendlyName","ActiveLink","translate","useTranslate","resource","identifier","useResource","data","useCan","disabledTitle","listUrl","React","e","IconButton","RefineButtonTestIds","RefineButtonClassNames","IconList","Button","pickNotDeprecated","React","useTranslate","RefineButtonClassNames","RefineButtonTestIds","IconButton","Button","IconFileExport","ExportButton","__name","hideText","children","loading","svgIconProps","rest","translate","useTranslate","React","IconButton","RefineButtonTestIds","RefineButtonClassNames","IconFileExport","Button","React","useTranslate","RefineButtonClassNames","RefineButtonTestIds","IconButton","Button","IconDeviceFloppy","SaveButton","__name","hideText","svgIconProps","children","rest","translate","useTranslate","React","IconButton","RefineButtonTestIds","RefineButtonClassNames","IconDeviceFloppy","Button","React","useContext","useCan","useNavigation","useTranslate","useResource","useRouterContext","useRouterType","useLink","AccessControlContext","RefineButtonClassNames","RefineButtonTestIds","Button","IconButton","IconSquarePlus","CloneButton","__name","resourceNameFromProps","resourceNameOrRouteName","recordItemId","hideText","accessControl","svgIconProps","meta","children","onClick","rest","accessControlContext","useContext","AccessControlContext","accessControlEnabled","hideIfUnauthorized","generateCloneUrl","useNavigation","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","id","resource","useResource","translate","useTranslate","data","useCan","disabledTitle","cloneUrl","React","e","IconButton","RefineButtonTestIds","RefineButtonClassNames","IconSquarePlus","Button","React","useTranslate","RefineButtonClassNames","RefineButtonTestIds","IconButton","Button","IconFileImport","ImportButton","__name","inputProps","hideText","loading","svgIconProps","children","rest","translate","useTranslate","React","IconButton","RefineButtonTestIds","RefineButtonClassNames","IconFileImport","Button","React","Text","TextField","__name","value","rest","React","Text","React","Tag","TagField","__name","value","rest","React","Tag","React","Link","EmailField","__name","value","rest","React","Link","React","Tooltip","IconMinus","IconCheck","BooleanField","__name","value","valueLabelTrue","valueLabelFalse","trueIcon","falseIcon","svgIconProps","rest","React","Tooltip","IconCheck","IconMinus","React","dayjs","LocalizedFormat","Text","dayjs","LocalizedFormat","defaultLocale","DateField","__name","value","locales","dateFormat","rest","React","Text","React","FileField","__name","title","src","rest","React","UrlField","React","Link","UrlField","__name","children","value","title","rest","React","Link","React","Text","toLocaleStringSupportsOptions","__name","NumberField","value","locale","options","rest","number","React","Text","React","ReactMarkdown","gfm","MarkdownField","__name","value","React","ReactMarkdown","gfm","React","Box","Code","Heading","Text","Button","Link","Image","ReadyPage","__name","Box","Image","Heading","Text","Code","Button","Link","React","WelcomePageFromCore","WelcomePage","__name","React","WelcomePageFromCore","React","useEffect","useState","useGo","useResource","useRouterType","useTranslate","useNavigation","Box","Heading","Text","Tooltip","IconButton","Button","useColorModeValue","Stack","IconInfoCircle","ErrorComponent","__name","errorMessage","setErrorMessage","useState","translate","useTranslate","push","useNavigation","go","useGo","routerType","useRouterType","resource","action","useResource","useEffect","color","useColorModeValue","React","Box","Heading","Stack","Text","Tooltip","IconButton","IconInfoCircle","Button","React","React","useRouterType","useLink","useRouterContext","useLogin","useTranslate","useActiveAuthProvider","Box","Heading","VStack","Button","Divider","FormControl","FormLabel","Input","ChakraLink","FormErrorMessage","HStack","Checkbox","useColorModeValue","useForm","FormProvider","layoutProps","cardProps","LoginPage","__name","providers","registerLink","forgotPasswordLink","rememberMe","contentProps","wrapperProps","renderContent","formProps","title","_a","_b","onSubmit","useFormProps","authProvider","useActiveAuthProvider","login","useLogin","translate","useTranslate","routerType","useRouterType","NewLink","useLink","LegacyLink","useRouterContext","Link","methods","useForm","register","handleSubmit","errors","renderProviders","React","VStack","provider","Button","Divider","importantTextColor","useColorModeValue","PageTitle","ThemedTitle","allContentProps","cardProps","content","Box","Heading","data","FormControl","FormLabel","Input","FormErrorMessage","Checkbox","HStack","ChakraLink","allWrapperProps","layoutProps","FormProvider","React","useTranslate","useRouterType","useLink","useRouterContext","useRegister","useActiveAuthProvider","Box","Button","Divider","FormControl","FormErrorMessage","FormLabel","Heading","Input","VStack","ChakraLink","useColorModeValue","useForm","RegisterPage","__name","providers","loginLink","wrapperProps","contentProps","renderContent","formProps","title","_a","_b","onSubmit","useFormProps","routerType","useRouterType","NewLink","useLink","LegacyLink","useRouterContext","Link","translate","useTranslate","authProvider","useActiveAuthProvider","mutate","useRegister","register","handleSubmit","errors","useForm","renderProviders","React","VStack","provider","Button","Divider","importantTextColor","useColorModeValue","PageTitle","ThemedTitle","allContentProps","cardProps","content","Box","Heading","data","FormControl","FormLabel","Input","FormErrorMessage","ChakraLink","allWrapperProps","layoutProps","React","useTranslate","useLink","useRouterType","useRouterContext","useForgotPassword","Box","Button","FormControl","FormErrorMessage","FormLabel","Heading","Input","ChakraLink","useColorModeValue","useForm","ForgotPasswordPage","__name","loginLink","wrapperProps","contentProps","renderContent","formProps","title","_a","onSubmit","useFormProps","mutate","useForgotPassword","translate","useTranslate","routerType","useRouterType","NewLink","useLink","LegacyLink","useRouterContext","Link","handleSubmit","register","errors","useForm","importantTextColor","useColorModeValue","PageTitle","React","ThemedTitle","allContentProps","cardProps","content","Box","Heading","data","FormControl","FormLabel","Input","FormErrorMessage","ChakraLink","Button","allWrapperProps","layoutProps","React","useTranslate","useUpdatePassword","useActiveAuthProvider","Box","Button","FormControl","FormErrorMessage","FormLabel","Heading","Input","useColorModeValue","useForm","UpdatePasswordPage","__name","wrapperProps","contentProps","renderContent","formProps","title","_a","_b","onSubmit","useFormProps","translate","useTranslate","authProvider","useActiveAuthProvider","mutate","useUpdatePassword","register","watch","handleSubmit","errors","useForm","importantTextColor","useColorModeValue","PageTitle","React","ThemedTitle","allContentProps","cardProps","content","Box","Heading","data","FormControl","FormLabel","Input","FormErrorMessage","val","Button","allWrapperProps","layoutProps","AuthPage","__name","props","type","React","RegisterPage","ForgotPasswordPage","UpdatePasswordPage","LoginPage","React","matchResourceFromRoute","useBreadcrumb","useLink","useRefineContext","useResource","useRouterContext","useRouterType","ChakraBreadcrumb","BreadcrumbItem","BreadcrumbLink","IconHome","Breadcrumb","__name","breadcrumbProps","showHome","hideIcons","meta","_a","_b","routerType","useRouterType","breadcrumbs","useBreadcrumb","Link","useLink","LegacyLink","useRouterContext","hasDashboard","useRefineContext","ActiveLink","resources","useResource","rootRouteResource","matchResourceFromRoute","React","ChakraBreadcrumb","BreadcrumbItem","IconHome","label","icon","href","BreadcrumbLink","React","Box","CircularProgress","CircularProgressLabel","IconButton","Text","useToast","IconRotate2","UndoableNotification","__name","notificationKey","message","cancelMutation","undoableTimeout","toast","useToast","React","Box","CircularProgress","CircularProgressLabel","Text","IconButton","IconRotate2","React","useTranslate","AutoSaveIndicatorCore","Text","IconDots","IconRefresh","IconCircleCheck","IconExclamationCircle","AutoSaveIndicator","__name","status","success","React","Message","IconCircleCheck","error","IconExclamationCircle","loading","IconRefresh","idle","IconDots","AutoSaveIndicatorCore","key","defaultMessage","icon","translate","useTranslate","Text","extendTheme","baseTheme","mode","refineTheme","refineCustomColors","refineCustomThemes","RefineThemes","acc","key","themeName","props","bgLight","bgDark","React","useToast","notificationProvider","__name","toast","useToast","key","message","type","description","undoableTimeout","cancelMutation","React","UndoableNotification"]}