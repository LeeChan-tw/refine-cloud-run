{"version":3,"sources":["../src/index.tsx","../src/components/layout/index.tsx","../src/components/layout/sider/index.tsx","../src/components/layout/header/index.tsx","../src/components/layout/title/index.tsx","../src/components/themedLayout/index.tsx","../src/components/themedLayout/sider/index.tsx","../src/components/themedLayout/header/index.tsx","../src/components/themedLayout/title/index.tsx","../src/components/themedLayoutV2/index.tsx","../src/components/themedLayoutV2/sider/index.tsx","../src/components/themedLayoutV2/title/index.tsx","../src/hooks/usePagination/index.ts","../src/hooks/useSiderVisible/index.ts","../src/contexts/themedLayoutContext/index.tsx","../src/hooks/useThemedLayoutContext/index.ts","../src/components/themedLayoutV2/header/index.tsx","../src/components/themedLayoutV2/hamburgerMenu/index.tsx","../src/components/crud/list/index.tsx","../src/components/crud/show/index.tsx","../src/components/crud/edit/index.tsx","../src/components/crud/create/index.tsx","../src/components/buttons/create/index.tsx","../src/components/buttons/edit/index.tsx","../src/components/buttons/delete/index.tsx","../src/components/buttons/refresh/index.tsx","../src/components/buttons/show/index.tsx","../src/components/buttons/list/index.tsx","../src/components/buttons/export/index.tsx","../src/components/buttons/save/index.tsx","../src/components/buttons/clone/index.tsx","../src/components/buttons/import/index.tsx","../src/components/fields/text/index.tsx","../src/components/fields/tag/index.tsx","../src/components/fields/email/index.tsx","../src/components/fields/boolean/index.tsx","../src/components/fields/date/index.tsx","../src/components/fields/file/index.tsx","../src/components/fields/url/index.tsx","../src/components/fields/number/index.tsx","../src/components/fields/markdown/index.tsx","../src/components/pages/ready/index.tsx","../src/components/pages/welcome/index.tsx","../src/components/pages/error/index.tsx","../src/components/pages/auth/index.tsx","../src/components/pages/auth/components/login/index.tsx","../src/components/pages/auth/components/styles.ts","../src/components/pages/auth/components/register/index.tsx","../src/components/pages/auth/components/forgotPassword/index.tsx","../src/components/pages/auth/components/updatePassword/index.tsx","../src/components/breadcrumb/index.tsx","../src/components/undoableNotification/index.tsx","../src/components/autoSaveIndicator/index.tsx","../src/theme/index.ts","../src/providers/notificationProvider.tsx"],"sourcesContent":["export * from \"./components\";\nexport * from \"./hooks\";\nexport * from \"./theme\";\nexport * from \"./providers\";\nexport * from \"./contexts\";\n","import React from \"react\";\nimport { Box, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { Sider as DefaultSider } from \"./sider\";\nimport { Header as DefaultHeader } from \"./header\";\nimport { RefineLayoutLayoutProps } from \"./types\";\n\n/**\n * @deprecated use `<ThemedLayout>` instead with 100% backward compatibility.\n * @see https://refine.dev/docs/api-reference/chakra-ui/components/chakra-ui-themed-layout\n **/\nexport const Layout: React.FC<RefineLayoutLayoutProps> = ({\n    Sider,\n    Header,\n    Title,\n    Footer,\n    OffLayoutArea,\n    children,\n}) => {\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n\n    const bg = useColorModeValue(\"gray.100\", \"gray.900\");\n\n    return (\n        <Box display=\"flex\" bg={bg}>\n            <SiderToRender Title={Title} />\n            <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                flex={1}\n                overflow=\"hidden\"\n                minH=\"100vh\"\n            >\n                <HeaderToRender />\n                <Box p={[2, 4]}>{children}</Box>\n                {Footer && <Footer />}\n            </Box>\n            {OffLayoutArea && <OffLayoutArea />}\n        </Box>\n    );\n};\n","import React, { useState } from \"react\";\nimport {\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useLink,\n    useLogout,\n    useMenu,\n    useActiveAuthProvider,\n    useRefineContext,\n    useRouterContext,\n    useRouterType,\n    useTitle,\n    useTranslate,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\nimport {\n    Accordion,\n    AccordionButton,\n    AccordionIcon,\n    AccordionItem,\n    AccordionPanel,\n    Box,\n    Button,\n    Drawer,\n    DrawerContent,\n    DrawerOverlay,\n    IconButton,\n    Tooltip,\n    TooltipProps,\n    VStack,\n} from \"@chakra-ui/react\";\nimport {\n    IconList,\n    IconChevronRight,\n    IconChevronLeft,\n    IconDashboard,\n    IconLogout,\n    IconMenu2,\n} from \"@tabler/icons\";\n\nimport { Title as DefaultTitle } from \"@components\";\nimport { RefineLayoutSiderProps } from \"../types\";\n\nexport const Sider: React.FC<RefineLayoutSiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n}) => {\n    const [collapsed, setCollapsed] = useState(false);\n    const [opened, setOpened] = useState(false);\n\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const TitleFromContext = useTitle();\n    const isExistAuthentication = useIsExistAuthentication();\n    const t = useTranslate();\n    const { hasDashboard } = useRefineContext();\n    const authProvider = useActiveAuthProvider();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n    const siderWidth = () => {\n        if (collapsed) return \"80px\";\n        return \"200px\";\n    };\n\n    const commonTooltipProps: Omit<TooltipProps, \"children\"> = {\n        placement: \"right\",\n        hasArrow: true,\n        isDisabled: !collapsed || opened,\n    };\n\n    const renderTreeView = (tree: ITreeMenu[]) => {\n        return tree.map((item) => {\n            const { label, route, name, icon, children } = item;\n\n            const isSelected = item.key === selectedKey;\n            const isParent = children.length > 0;\n\n            const linkProps = !isParent\n                ? {\n                      as: Link,\n                      to: route,\n                  }\n                : undefined;\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{\n                        resource: item,\n                    }}\n                >\n                    <Accordion\n                        defaultIndex={\n                            defaultOpenKeys.includes(item.key || \"\") ? 0 : -1\n                        }\n                        width=\"full\"\n                        allowToggle\n                    >\n                        <AccordionItem border=\"none\">\n                            <Tooltip label={label} {...commonTooltipProps}>\n                                <AccordionButton\n                                    pl={6}\n                                    pr={4}\n                                    pt={3}\n                                    pb={3}\n                                    as=\"div\"\n                                    width=\"full\"\n                                >\n                                    <Button\n                                        width=\"full\"\n                                        variant=\"link\"\n                                        color=\"white\"\n                                        fontWeight=\"normal\"\n                                        leftIcon={\n                                            icon ??\n                                            ((\n                                                <>\n                                                    <IconList size={20} />\n                                                </>\n                                            ) as any)\n                                        }\n                                        rightIcon={\n                                            isParent ? (\n                                                <AccordionIcon />\n                                            ) : undefined\n                                        }\n                                        _active={{\n                                            color: \"none\",\n                                            fontWeight: isParent\n                                                ? \"normal\"\n                                                : \"bold\",\n                                        }}\n                                        _hover={{ textDecoration: \"none\" }}\n                                        isActive={isSelected}\n                                        {...linkProps}\n                                    >\n                                        {(!collapsed || opened) && (\n                                            <Box flexGrow={1} textAlign=\"left\">\n                                                {label}\n                                            </Box>\n                                        )}\n                                    </Button>\n                                </AccordionButton>\n                            </Tooltip>\n\n                            {isParent && (\n                                <AccordionPanel\n                                    p={0}\n                                    pl={collapsed && !opened ? 0 : 4}\n                                >\n                                    <Accordion width=\"full\" allowToggle>\n                                        {renderTreeView(children)}\n                                    </Accordion>\n                                </AccordionPanel>\n                            )}\n                        </AccordionItem>\n                    </Accordion>\n                </CanAccess>\n            );\n        });\n    };\n\n    const items = renderTreeView(menuItems);\n\n    const dashboard = hasDashboard ? (\n        <CanAccess resource=\"dashboard\" action=\"list\">\n            <Tooltip\n                label={t(\"dashboard.title\", \"Dashboard\")}\n                {...commonTooltipProps}\n            >\n                <Button\n                    width=\"full\"\n                    justifyContent={\n                        collapsed && !opened ? \"center\" : \"flex-start\"\n                    }\n                    pl={6}\n                    pr={4}\n                    pt={3}\n                    pb={3}\n                    fontWeight=\"normal\"\n                    leftIcon={<IconDashboard size={20} />}\n                    variant=\"link\"\n                    color=\"white\"\n                    isActive={selectedKey === \"/\"}\n                    _active={{ color: \"none\", fontWeight: \"bold\" }}\n                    _hover={{ textDecoration: \"none\" }}\n                    as={Link}\n                    to=\"/\"\n                >\n                    {(!collapsed || opened) &&\n                        t(\"dashboard.title\", \"Dashboard\")}\n                </Button>\n            </Tooltip>\n        </CanAccess>\n    ) : null;\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                t(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Tooltip label={t(\"buttons.logout\", \"Logout\")} {...commonTooltipProps}>\n            <Button\n                width=\"full\"\n                justifyContent={collapsed && !opened ? \"center\" : \"flex-start\"}\n                pl={6}\n                pr={4}\n                pt={3}\n                pb={3}\n                fontWeight=\"normal\"\n                leftIcon={<IconLogout size={20} />}\n                variant=\"link\"\n                _active={{ color: \"none\" }}\n                _hover={{ textDecoration: \"none\" }}\n                color=\"white\"\n                onClick={handleLogout}\n            >\n                {(!collapsed || opened) && t(\"buttons.logout\", \"Logout\")}\n            </Button>\n        </Tooltip>\n    );\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                logout,\n                items,\n                collapsed: false,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    return (\n        <>\n            <Box\n                position=\"fixed\"\n                top={16}\n                left={0}\n                zIndex={1200}\n                display={[\"block\", \"block\", \"none\", \"none\", \"none\"]}\n            >\n                <IconButton\n                    borderLeftRadius={0}\n                    bg=\"sider.background\"\n                    color=\"white\"\n                    _hover={{ bg: \"sider.background\" }}\n                    _active={{\n                        bg: \"sider.background\",\n                        transform: \"translateY(1px)\",\n                    }}\n                    aria-label=\"Open Menu\"\n                    onClick={() => setOpened((prev) => !prev)}\n                >\n                    <IconMenu2 />\n                </IconButton>\n            </Box>\n            <Drawer\n                placement=\"left\"\n                isOpen={opened}\n                onClose={() => setOpened(false)}\n            >\n                <DrawerOverlay />\n                <DrawerContent w=\"200px\" maxW=\"200px\" bg=\"sider.background\">\n                    <Box display=\"flex\" justifyContent=\"center\" py={4}>\n                        <RenderToTitle collapsed={false} />\n                    </Box>\n                    <VStack\n                        mt={2}\n                        color=\"white\"\n                        alignItems=\"start\"\n                        flexGrow={1}\n                    >\n                        <Box width=\"full\">{renderSider()}</Box>\n                    </VStack>\n                </DrawerContent>\n            </Drawer>\n\n            <Box\n                display={[\"none\", \"none\", \"flex\"]}\n                width={siderWidth()}\n                transition=\"width 200ms ease, min-width 200ms ease\"\n                flexShrink={0}\n            />\n            <Box\n                bg=\"sider.background\"\n                position=\"fixed\"\n                width={siderWidth()}\n                top={0}\n                h=\"100vh\"\n                display={[\"none\", \"none\", \"flex\"]}\n                flexDirection=\"column\"\n                transition=\"width 200ms ease, min-width 200ms ease\"\n            >\n                <Box display=\"flex\" justifyContent=\"center\" py={4}>\n                    <RenderToTitle collapsed={collapsed} />\n                </Box>\n                <VStack mt={2} color=\"white\" alignItems=\"start\" flexGrow={1}>\n                    <Box width=\"full\">{renderSider()}</Box>\n                </VStack>\n                <Button\n                    onClick={() => setCollapsed((prev) => !prev)}\n                    color=\"white\"\n                    bg=\"sider.collapseButton\"\n                    borderRadius={0}\n                    _hover={{ bg: \"sider.collapseButton\" }}\n                    _active={{\n                        bg: \"sider.collapseButton\",\n                        transform: \"translateY(1px)\",\n                    }}\n                >\n                    {collapsed ? <IconChevronRight /> : <IconChevronLeft />}\n                </Button>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport { useGetIdentity, useActiveAuthProvider } from \"@refinedev/core\";\nimport { Box, Avatar, Text, HStack } from \"@chakra-ui/react\";\n\nimport { RefineLayoutHeaderProps } from \"../types\";\n\nexport const Header: React.FC<RefineLayoutHeaderProps> = () => {\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const shouldRenderHeader = user && (user.name || user.avatar);\n\n    return shouldRenderHeader ? (\n        <Box\n            py=\"2\"\n            px=\"4\"\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            w=\"full\"\n            bg=\"chakra-body-bg\"\n        >\n            <HStack>\n                <Text size=\"sm\" fontWeight=\"bold\">\n                    {user?.name}\n                </Text>\n                <Avatar size=\"sm\" name={user?.name} src={user?.avatar} />\n            </HStack>\n        </Box>\n    ) : null;\n};\n","import React from \"react\";\nimport {\n    useRouterContext,\n    useRouterType,\n    useLink,\n    TitleProps,\n} from \"@refinedev/core\";\nimport { Link as ChakraLink } from \"@chakra-ui/react\";\n\nexport const Title: React.FC<TitleProps> = ({ collapsed }) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <ChakraLink as={ActiveLink} to=\"/\">\n            {collapsed ? (\n                <img\n                    src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine-mini.svg\"\n                    alt=\"Refine\"\n                    style={{ maxHeight: \"38px\" }}\n                />\n            ) : (\n                <img\n                    src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                    alt=\"Refine\"\n                    width=\"140px\"\n                    style={{ minHeight: \"38px\" }}\n                />\n            )}\n        </ChakraLink>\n    );\n};\n","import React, { useState } from \"react\";\nimport { Box } from \"@chakra-ui/react\";\n\nimport { ThemedSider as DefaultSider } from \"./sider\";\nimport { ThemedHeader as DefaultHeader } from \"./header\";\nimport { RefineThemedLayoutProps } from \"./types\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/chakra-ui/components/chakra-ui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedLayout: React.FC<RefineThemedLayoutProps> = ({\n    Sider,\n    Header,\n    Title,\n    Footer,\n    OffLayoutArea,\n    children,\n}) => {\n    const [isSiderOpen, setIsSiderOpen] = useState(true);\n\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n\n    return (\n        <Box display=\"flex\">\n            <SiderToRender Title={Title} isSiderOpen={isSiderOpen} />\n            <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                flex={1}\n                overflow=\"hidden\"\n                minH=\"100vh\"\n            >\n                <HeaderToRender\n                    isSiderOpen={isSiderOpen}\n                    onToggleSiderClick={() => {\n                        return setIsSiderOpen((prevValue) => !prevValue);\n                    }}\n                />\n                <Box p={[2, 4]}>{children}</Box>\n                {Footer && <Footer />}\n            </Box>\n            {OffLayoutArea && <OffLayoutArea />}\n        </Box>\n    );\n};\n","import React, { useState } from \"react\";\nimport {\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useLink,\n    useLogout,\n    useMenu,\n    useActiveAuthProvider,\n    useRefineContext,\n    useRouterContext,\n    useRouterType,\n    useTitle,\n    useTranslate,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\nimport {\n    Accordion,\n    AccordionButton,\n    AccordionIcon,\n    AccordionItem,\n    AccordionPanel,\n    Box,\n    Button,\n    Drawer,\n    DrawerContent,\n    DrawerOverlay,\n    IconButton,\n    Tooltip,\n    TooltipProps,\n    useColorModeValue,\n    VStack,\n} from \"@chakra-ui/react\";\nimport { IconList, IconDashboard, IconPower, IconMenu2 } from \"@tabler/icons\";\n\nimport { ThemedTitle as DefaultTitle } from \"@components\";\nimport { RefineThemedLayoutSiderProps } from \"../types\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/chakra-ui/components/chakra-ui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedSider: React.FC<RefineThemedLayoutSiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n    isSiderOpen,\n}) => {\n    const [opened, setOpened] = useState(false);\n\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const TitleFromContext = useTitle();\n    const isExistAuthentication = useIsExistAuthentication();\n    const t = useTranslate();\n    const { hasDashboard } = useRefineContext();\n    const authProvider = useActiveAuthProvider();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n    const siderWidth = () => {\n        if (!isSiderOpen) return \"56px\";\n        return \"200px\";\n    };\n\n    const commonTooltipProps: Omit<TooltipProps, \"children\"> = {\n        placement: \"right\",\n        hasArrow: true,\n        isDisabled: isSiderOpen || opened,\n    };\n\n    const renderTreeView = (tree: ITreeMenu[]) => {\n        return tree.map((item) => {\n            const { label, route, name, icon, children } = item;\n\n            const isSelected = item.key === selectedKey;\n            const isParent = children.length > 0;\n\n            const linkProps = !isParent\n                ? {\n                      as: Link,\n                      to: route,\n                  }\n                : undefined;\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{\n                        resource: item,\n                    }}\n                >\n                    <Accordion\n                        defaultIndex={\n                            defaultOpenKeys.includes(item.key || \"\") ? 0 : -1\n                        }\n                        width=\"full\"\n                        mb={2}\n                        allowToggle\n                    >\n                        <AccordionItem border=\"none\">\n                            <Tooltip label={label} {...commonTooltipProps}>\n                                <AccordionButton\n                                    px={0}\n                                    py={0}\n                                    as=\"div\"\n                                    width=\"full\"\n                                    _hover={{\n                                        backgroundColor: \"transparent\",\n                                    }}\n                                >\n                                    <Button\n                                        colorScheme={\n                                            isSelected ? \"brand\" : \"gray\"\n                                        }\n                                        borderRadius={0}\n                                        pl={!isSiderOpen && !opened ? 6 : 5}\n                                        width=\"full\"\n                                        variant=\"ghost\"\n                                        fontWeight=\"normal\"\n                                        leftIcon={\n                                            icon ??\n                                            ((\n                                                <>\n                                                    <IconList size={16} />\n                                                </>\n                                            ) as any)\n                                        }\n                                        rightIcon={\n                                            isParent ? (\n                                                <AccordionIcon color=\"brand.100\" />\n                                            ) : undefined\n                                        }\n                                        _active={{\n                                            _before: {\n                                                content: \"''\",\n                                                bgColor: useColorModeValue(\n                                                    \"brand.200\",\n                                                    \"brand.200\",\n                                                ),\n                                                opacity: 0.05,\n                                                position: \"absolute\",\n                                                top: 0,\n                                                bottom: 0,\n                                                left: 0,\n                                                right: 0,\n                                                width: \"100%\",\n                                                height: \"100%\",\n                                            },\n                                            borderRight: \"4px\",\n                                            borderRightColor: \"brand.200\",\n                                        }}\n                                        isActive={isSelected}\n                                        {...linkProps}\n                                    >\n                                        {(isSiderOpen || opened) && (\n                                            <Box flexGrow={1} textAlign=\"left\">\n                                                {label}\n                                            </Box>\n                                        )}\n                                    </Button>\n                                </AccordionButton>\n                            </Tooltip>\n\n                            {isParent && (\n                                <AccordionPanel\n                                    p={0}\n                                    pl={!isSiderOpen && !opened ? 0 : 4}\n                                >\n                                    <Accordion width=\"full\" allowToggle>\n                                        {renderTreeView(children)}\n                                    </Accordion>\n                                </AccordionPanel>\n                            )}\n                        </AccordionItem>\n                    </Accordion>\n                </CanAccess>\n            );\n        });\n    };\n\n    const items = renderTreeView(menuItems);\n\n    const dashboard = hasDashboard ? (\n        <CanAccess resource=\"dashboard\" action=\"list\">\n            <Tooltip\n                label={t(\"dashboard.title\", \"Dashboard\")}\n                {...commonTooltipProps}\n            >\n                <Button\n                    width=\"full\"\n                    justifyContent={\n                        !isSiderOpen && !opened ? \"center\" : \"flex-start\"\n                    }\n                    fontWeight=\"normal\"\n                    leftIcon={<IconDashboard size={16} />}\n                    variant=\"ghost\"\n                    isActive={selectedKey === \"/\"}\n                    _active={{\n                        color: \"brand.200\",\n                        backgroundColor: \"brand.900\",\n                    }}\n                    as={Link}\n                    to=\"/\"\n                >\n                    {(isSiderOpen || opened) &&\n                        t(\"dashboard.title\", \"Dashboard\")}\n                </Button>\n            </Tooltip>\n        </CanAccess>\n    ) : null;\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                t(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Tooltip label={t(\"buttons.logout\", \"Logout\")} {...commonTooltipProps}>\n            <Box p={0}>\n                <Button\n                    borderRadius={0}\n                    width=\"full\"\n                    justifyContent={\n                        !isSiderOpen && !opened ? \"center\" : \"flex-start\"\n                    }\n                    pl={!isSiderOpen && !opened ? 6 : 5}\n                    fontWeight=\"normal\"\n                    leftIcon={<IconPower size={16} />}\n                    variant=\"ghost\"\n                    _active={{\n                        color: \"brand.200\",\n                        backgroundColor: \"brand.900\",\n                    }}\n                    onClick={handleLogout}\n                >\n                    {(isSiderOpen || opened) && t(\"buttons.logout\", \"Logout\")}\n                </Button>\n            </Box>\n        </Tooltip>\n    );\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                logout,\n                items,\n                collapsed: false,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    return (\n        <>\n            <Box\n                position=\"fixed\"\n                top={3}\n                left={0}\n                zIndex={1200}\n                display={[\"block\", \"block\", \"none\", \"none\", \"none\"]}\n            >\n                <IconButton\n                    borderLeftRadius={0}\n                    aria-label=\"Open Menu\"\n                    onClick={() => setOpened((prev) => !prev)}\n                >\n                    <IconMenu2 />\n                </IconButton>\n            </Box>\n            <Drawer\n                placement=\"left\"\n                isOpen={opened}\n                onClose={() => setOpened(false)}\n            >\n                <DrawerOverlay />\n                <DrawerContent w=\"200px\" maxW=\"200px\">\n                    <Box\n                        display=\"flex\"\n                        pl={4}\n                        alignItems=\"center\"\n                        height=\"64px\"\n                        fontSize=\"14px\"\n                        bg={useColorModeValue(\n                            \"refine.sider.header.light\",\n                            \"refine.sider.header.dark\",\n                        )}\n                    >\n                        <RenderToTitle collapsed={false} />\n                    </Box>\n                    <VStack\n                        alignItems=\"start\"\n                        flexGrow={1}\n                        bg={useColorModeValue(\n                            \"refine.sider.bg.light\",\n                            \"refine.sider.bg.dark\",\n                        )}\n                    >\n                        <Box width=\"full\">{renderSider()}</Box>\n                    </VStack>\n                </DrawerContent>\n            </Drawer>\n\n            <Box\n                display={[\"none\", \"none\", \"flex\"]}\n                width={siderWidth()}\n                transition=\"width 200ms ease, min-width 200ms ease\"\n                flexShrink={0}\n            />\n            <Box\n                position=\"fixed\"\n                width={siderWidth()}\n                top={0}\n                h=\"100vh\"\n                display={[\"none\", \"none\", \"flex\"]}\n                flexDirection=\"column\"\n                transition=\"width 200ms ease, min-width 200ms ease\"\n            >\n                <Box\n                    display=\"flex\"\n                    pl={!isSiderOpen ? 0 : 4}\n                    justifyContent={!isSiderOpen ? \"center\" : \"flex-start\"}\n                    alignItems=\"center\"\n                    fontSize=\"14px\"\n                    height=\"64px\"\n                    borderRight=\"1px\"\n                    borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n                    bg={useColorModeValue(\n                        \"refine.sider.header.light\",\n                        \"refine.sider.header.dark\",\n                    )}\n                >\n                    <RenderToTitle collapsed={!isSiderOpen} />\n                </Box>\n                <VStack\n                    alignItems=\"start\"\n                    paddingTop={2}\n                    flexGrow={1}\n                    borderRight=\"1px\"\n                    borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n                    bg={useColorModeValue(\n                        \"refine.sider.bg.light\",\n                        \"refine.sider.bg.dark\",\n                    )}\n                >\n                    <Box width=\"full\">{renderSider()}</Box>\n                </VStack>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport { useGetIdentity, useActiveAuthProvider } from \"@refinedev/core\";\nimport {\n    Box,\n    Avatar,\n    Text,\n    HStack,\n    useColorModeValue,\n    IconButton,\n    Icon,\n} from \"@chakra-ui/react\";\nimport { RefineThemedLayoutHeaderProps } from \"../types\";\nimport {\n    IconLayoutSidebarLeftCollapse,\n    IconLayoutSidebarLeftExpand,\n} from \"@tabler/icons\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/chakra-ui/components/chakra-ui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedHeader: React.FC<RefineThemedLayoutHeaderProps> = ({\n    isSiderOpen,\n    onToggleSiderClick,\n    toggleSiderIcon: toggleSiderIconFromProps,\n}) => {\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const bgColor = useColorModeValue(\n        \"refine.header.bg.light\",\n        \"refine.header.bg.dark\",\n    );\n\n    const hasSidebarToggle = Boolean(onToggleSiderClick);\n\n    return (\n        <Box\n            py=\"2\"\n            pr=\"4\"\n            pl=\"2\"\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent={\n                hasSidebarToggle\n                    ? { base: \"flex-end\", md: \"space-between\" }\n                    : \"flex-end\"\n            }\n            w=\"full\"\n            height=\"64px\"\n            bg={bgColor}\n            borderBottom=\"1px\"\n            borderBottomColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n        >\n            {hasSidebarToggle && (\n                <IconButton\n                    display={{ base: \"none\", md: \"flex\" }}\n                    backgroundColor=\"transparent\"\n                    aria-label=\"sidebar-toggle\"\n                    onClick={() => onToggleSiderClick?.()}\n                >\n                    {toggleSiderIconFromProps?.(Boolean(isSiderOpen)) ??\n                        (isSiderOpen ? (\n                            <Icon\n                                as={IconLayoutSidebarLeftCollapse}\n                                boxSize={\"24px\"}\n                            />\n                        ) : (\n                            <Icon\n                                as={IconLayoutSidebarLeftExpand}\n                                boxSize={\"24px\"}\n                            />\n                        ))}\n                </IconButton>\n            )}\n\n            <HStack>\n                {user?.name && (\n                    <Text size=\"sm\" fontWeight=\"bold\">\n                        {user.name}\n                    </Text>\n                )}\n                {user?.avatar && (\n                    <Avatar\n                        size=\"sm\"\n                        name={user?.name || \"Profile Photo\"}\n                        src={user.avatar}\n                    />\n                )}\n            </HStack>\n        </Box>\n    );\n};\n","import React from \"react\";\nimport { useRouterContext, useRouterType, useLink } from \"@refinedev/core\";\nimport { Link as ChakraLink, Icon, HStack, Heading } from \"@chakra-ui/react\";\nimport { RefineLayoutThemedTitleProps } from \"../types\";\n\nconst defaultText = \"refine Project\";\n\nconst defaultIcon = (\n    <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-testid=\"refine-logo\"\n    >\n        <path\n            d=\"M12 9C13.6569 9 15 7.65685 15 6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6C9 7.65685 10.3431 9 12 9Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM8 6C8 3.79086 9.79086 2 12 2C14.2091 2 16 3.79086 16 6V18C16 20.2091 14.2091 22 12 22C9.79086 22 8 20.2091 8 18V6Z\"\n            fill=\"currentColor\"\n        />\n    </svg>\n);\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/chakra-ui/components/chakra-ui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedTitle: React.FC<RefineLayoutThemedTitleProps> = ({\n    collapsed,\n    icon = defaultIcon,\n    text = defaultText,\n    wrapperStyles,\n}) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <ChakraLink\n            as={ActiveLink}\n            to=\"/\"\n            fontSize=\"inherit\"\n            textDecoration=\"none\"\n            _hover={{\n                textDecoration: \"none\",\n            }}\n        >\n            <HStack\n                spacing=\"8px\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                fontSize=\"inherit\"\n                style={{\n                    ...wrapperStyles,\n                }}\n            >\n                <Icon height=\"24px\" width=\"24px\" color=\"brand.500\">\n                    {icon}\n                </Icon>\n\n                {!collapsed && (\n                    <Heading as=\"h6\" fontWeight={700} fontSize=\"inherit\">\n                        {text}\n                    </Heading>\n                )}\n            </HStack>\n        </ChakraLink>\n    );\n};\n","import React from \"react\";\nimport { Box } from \"@chakra-ui/react\";\n\nimport { ThemedSiderV2 as DefaultSider } from \"./sider\";\nimport { ThemedHeaderV2 as DefaultHeader } from \"./header\";\nimport { RefineThemedLayoutV2Props } from \"./types\";\nimport { ThemedLayoutContextProvider } from \"../../contexts\";\n\nexport const ThemedLayoutV2: React.FC<RefineThemedLayoutV2Props> = ({\n    Sider,\n    Header,\n    Title,\n    Footer,\n    OffLayoutArea,\n    children,\n    initialSiderCollapsed,\n}) => {\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n\n    return (\n        <ThemedLayoutContextProvider\n            initialSiderCollapsed={initialSiderCollapsed}\n        >\n            <Box display=\"flex\">\n                <SiderToRender Title={Title} />\n                <Box\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    flex={1}\n                    minH=\"100vh\"\n                    overflow=\"clip\"\n                >\n                    <HeaderToRender />\n                    <Box p={[2, 4]}>{children}</Box>\n                    {Footer && <Footer />}\n                </Box>\n                {OffLayoutArea && <OffLayoutArea />}\n            </Box>\n        </ThemedLayoutContextProvider>\n    );\n};\n","import React, { CSSProperties } from \"react\";\nimport {\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useLink,\n    useLogout,\n    useMenu,\n    useActiveAuthProvider,\n    useRefineContext,\n    useRouterContext,\n    useRouterType,\n    useTitle,\n    useTranslate,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\nimport {\n    Accordion,\n    AccordionButton,\n    AccordionIcon,\n    AccordionItem,\n    AccordionPanel,\n    Box,\n    Button,\n    Drawer,\n    DrawerContent,\n    DrawerOverlay,\n    Tooltip,\n    TooltipProps,\n    useColorModeValue,\n    VStack,\n} from \"@chakra-ui/react\";\nimport { IconList, IconDashboard, IconPower } from \"@tabler/icons\";\n\nimport { ThemedTitleV2 as DefaultTitle } from \"../title\";\nimport { RefineThemedLayoutV2SiderProps } from \"../types\";\nimport { useThemedLayoutContext } from \"@hooks\";\n\nexport const ThemedSiderV2: React.FC<RefineThemedLayoutV2SiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n    activeItemDisabled = false,\n}) => {\n    const { siderCollapsed, mobileSiderOpen, setMobileSiderOpen } =\n        useThemedLayoutContext();\n\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const TitleFromContext = useTitle();\n    const isExistAuthentication = useIsExistAuthentication();\n    const t = useTranslate();\n    const { hasDashboard } = useRefineContext();\n    const authProvider = useActiveAuthProvider();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n    const siderWidth = () => {\n        if (siderCollapsed) return \"56px\";\n        return \"200px\";\n    };\n\n    const commonTooltipProps: Omit<TooltipProps, \"children\"> = {\n        placement: \"right\",\n        hasArrow: true,\n        isDisabled: !siderCollapsed || mobileSiderOpen,\n    };\n\n    const renderTreeView = (tree: ITreeMenu[]) => {\n        return tree.map((item) => {\n            const { label, route, name, icon, children } = item;\n\n            const isSelected = item.key === selectedKey;\n            const isParent = children.length > 0;\n\n            const linkProps = !isParent\n                ? {\n                      as: Link,\n                      to: route,\n                  }\n                : undefined;\n\n            const linkStyle: CSSProperties =\n                activeItemDisabled && isSelected\n                    ? { pointerEvents: \"none\" }\n                    : {};\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{\n                        resource: item,\n                    }}\n                >\n                    <Accordion\n                        defaultIndex={\n                            defaultOpenKeys.includes(item.key || \"\") ? 0 : -1\n                        }\n                        width=\"full\"\n                        mb={2}\n                        allowToggle\n                    >\n                        <AccordionItem border=\"none\">\n                            <Tooltip label={label} {...commonTooltipProps}>\n                                <AccordionButton\n                                    px={0}\n                                    py={0}\n                                    as=\"div\"\n                                    width=\"full\"\n                                    _hover={{\n                                        backgroundColor: \"transparent\",\n                                    }}\n                                >\n                                    <Button\n                                        colorScheme={\n                                            isSelected ? \"brand\" : \"gray\"\n                                        }\n                                        borderRadius={0}\n                                        pl={\n                                            siderCollapsed && !mobileSiderOpen\n                                                ? 6\n                                                : 5\n                                        }\n                                        width=\"full\"\n                                        variant=\"ghost\"\n                                        fontWeight=\"normal\"\n                                        leftIcon={\n                                            icon ??\n                                            ((\n                                                <>\n                                                    <IconList size={16} />\n                                                </>\n                                            ) as any)\n                                        }\n                                        rightIcon={\n                                            isParent ? (\n                                                <AccordionIcon color=\"brand.100\" />\n                                            ) : undefined\n                                        }\n                                        _active={{\n                                            _before: {\n                                                content: \"''\",\n                                                bgColor: useColorModeValue(\n                                                    \"brand.200\",\n                                                    \"brand.200\",\n                                                ),\n                                                opacity: 0.05,\n                                                position: \"absolute\",\n                                                top: 0,\n                                                bottom: 0,\n                                                left: 0,\n                                                right: 0,\n                                                width: \"100%\",\n                                                height: \"100%\",\n                                            },\n                                            borderRight: \"4px\",\n                                            borderRightColor: \"brand.200\",\n                                        }}\n                                        isActive={isSelected}\n                                        style={linkStyle}\n                                        {...linkProps}\n                                    >\n                                        {(mobileSiderOpen ||\n                                            !siderCollapsed) && (\n                                            <Box flexGrow={1} textAlign=\"left\">\n                                                {label}\n                                            </Box>\n                                        )}\n                                    </Button>\n                                </AccordionButton>\n                            </Tooltip>\n\n                            {isParent && (\n                                <AccordionPanel\n                                    p={0}\n                                    pl={\n                                        siderCollapsed && !mobileSiderOpen\n                                            ? 0\n                                            : 4\n                                    }\n                                >\n                                    <Accordion width=\"full\" allowToggle>\n                                        {renderTreeView(children)}\n                                    </Accordion>\n                                </AccordionPanel>\n                            )}\n                        </AccordionItem>\n                    </Accordion>\n                </CanAccess>\n            );\n        });\n    };\n\n    const items = renderTreeView(menuItems);\n\n    const dashboard = hasDashboard ? (\n        <CanAccess resource=\"dashboard\" action=\"list\">\n            <Tooltip\n                label={t(\"dashboard.title\", \"Dashboard\")}\n                {...commonTooltipProps}\n            >\n                <Button\n                    width=\"full\"\n                    justifyContent={\n                        !mobileSiderOpen && siderCollapsed\n                            ? \"center\"\n                            : \"flex-start\"\n                    }\n                    fontWeight=\"normal\"\n                    leftIcon={<IconDashboard size={16} />}\n                    variant=\"ghost\"\n                    isActive={selectedKey === \"/\"}\n                    _active={{\n                        color: \"brand.200\",\n                        backgroundColor: \"brand.900\",\n                    }}\n                    as={Link}\n                    to=\"/\"\n                >\n                    {(mobileSiderOpen || !siderCollapsed) &&\n                        t(\"dashboard.title\", \"Dashboard\")}\n                </Button>\n            </Tooltip>\n        </CanAccess>\n    ) : null;\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                t(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Tooltip label={t(\"buttons.logout\", \"Logout\")} {...commonTooltipProps}>\n            <Box p={0}>\n                <Button\n                    borderRadius={0}\n                    width=\"full\"\n                    justifyContent={\n                        !mobileSiderOpen && siderCollapsed\n                            ? \"center\"\n                            : \"flex-start\"\n                    }\n                    pl={!mobileSiderOpen && siderCollapsed ? 6 : 5}\n                    fontWeight=\"normal\"\n                    leftIcon={<IconPower size={16} />}\n                    variant=\"ghost\"\n                    _active={{\n                        color: \"brand.200\",\n                        backgroundColor: \"brand.900\",\n                    }}\n                    onClick={handleLogout}\n                >\n                    {(mobileSiderOpen || !siderCollapsed) &&\n                        t(\"buttons.logout\", \"Logout\")}\n                </Button>\n            </Box>\n        </Tooltip>\n    );\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                logout,\n                items,\n                collapsed: false,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    return (\n        <>\n            <Drawer\n                placement=\"left\"\n                isOpen={mobileSiderOpen}\n                onClose={() => setMobileSiderOpen(!mobileSiderOpen)}\n            >\n                <DrawerOverlay />\n                <DrawerContent w=\"200px\" maxW=\"200px\">\n                    <Box\n                        display=\"flex\"\n                        flexShrink={0}\n                        pl={4}\n                        alignItems=\"center\"\n                        height=\"64px\"\n                        fontSize=\"14px\"\n                        bg={useColorModeValue(\n                            \"refine.sider.header.light\",\n                            \"refine.sider.header.dark\",\n                        )}\n                        borderBottom=\"1px\"\n                        borderBottomColor={useColorModeValue(\n                            \"gray.200\",\n                            \"gray.700\",\n                        )}\n                    >\n                        <RenderToTitle collapsed={false} />\n                    </Box>\n                    <VStack\n                        alignItems=\"start\"\n                        flexGrow={1}\n                        bg={useColorModeValue(\n                            \"refine.sider.bg.light\",\n                            \"refine.sider.bg.dark\",\n                        )}\n                        overflow=\"auto\"\n                    >\n                        <Box width=\"full\">{renderSider()}</Box>\n                    </VStack>\n                </DrawerContent>\n            </Drawer>\n\n            <Box\n                display={[\"none\", \"none\", \"flex\"]}\n                width={siderWidth()}\n                transition=\"width 200ms ease, min-width 200ms ease\"\n                flexShrink={0}\n            />\n            <Box\n                position=\"fixed\"\n                width={siderWidth()}\n                top={0}\n                h=\"100vh\"\n                display={[\"none\", \"none\", \"flex\"]}\n                flexDirection=\"column\"\n                transition=\"width 200ms ease, min-width 200ms ease\"\n            >\n                <Box\n                    display=\"flex\"\n                    flexShrink={0}\n                    pl={siderCollapsed ? 0 : 4}\n                    justifyContent={siderCollapsed ? \"center\" : \"flex-start\"}\n                    alignItems=\"center\"\n                    fontSize=\"14px\"\n                    height=\"64px\"\n                    borderRight=\"1px\"\n                    borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n                    borderBottom=\"1px\"\n                    borderBottomColor={useColorModeValue(\n                        \"gray.200\",\n                        \"gray.700\",\n                    )}\n                    bg={useColorModeValue(\n                        \"refine.sider.header.light\",\n                        \"refine.sider.header.dark\",\n                    )}\n                >\n                    <RenderToTitle collapsed={siderCollapsed} />\n                </Box>\n                <VStack\n                    alignItems=\"start\"\n                    paddingY={2}\n                    height=\"100%\"\n                    flexGrow={1}\n                    borderRight=\"1px\"\n                    borderRightColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n                    bg={useColorModeValue(\n                        \"refine.sider.bg.light\",\n                        \"refine.sider.bg.dark\",\n                    )}\n                >\n                    <Box width=\"full\" overflow=\"auto\">\n                        {renderSider()}\n                    </Box>\n                </VStack>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport { useRouterContext, useRouterType, useLink } from \"@refinedev/core\";\nimport { Link as ChakraLink, Icon, HStack, Heading } from \"@chakra-ui/react\";\nimport { RefineLayoutThemedTitleProps } from \"../types\";\n\nconst defaultText = \"refine Project\";\n\nconst defaultIcon = (\n    <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-testid=\"refine-logo\"\n    >\n        <path\n            d=\"M12 9C13.6569 9 15 7.65685 15 6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6C9 7.65685 10.3431 9 12 9Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM8 6C8 3.79086 9.79086 2 12 2C14.2091 2 16 3.79086 16 6V18C16 20.2091 14.2091 22 12 22C9.79086 22 8 20.2091 8 18V6Z\"\n            fill=\"currentColor\"\n        />\n    </svg>\n);\n\nexport const ThemedTitleV2: React.FC<RefineLayoutThemedTitleProps> = ({\n    collapsed,\n    icon = defaultIcon,\n    text = defaultText,\n    wrapperStyles,\n}) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <ChakraLink\n            as={ActiveLink}\n            to=\"/\"\n            fontSize=\"inherit\"\n            textDecoration=\"none\"\n            _hover={{\n                textDecoration: \"none\",\n            }}\n        >\n            <HStack\n                spacing=\"8px\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                fontSize=\"inherit\"\n                style={{\n                    ...wrapperStyles,\n                }}\n            >\n                <Icon height=\"24px\" width=\"24px\" color=\"brand.500\">\n                    {icon}\n                </Icon>\n\n                {!collapsed && (\n                    <Heading as=\"h6\" fontWeight={700} fontSize=\"inherit\">\n                        {text}\n                    </Heading>\n                )}\n            </HStack>\n        </ChakraLink>\n    );\n};\n","type UsePaginationProps = {\n    current: number;\n    pageCount: number;\n};\nexport const usePagination = (\n    props: UsePaginationProps,\n): {\n    current: number;\n    prev?: number;\n    next?: number;\n    items: [number | string];\n} => {\n    const { current, pageCount } = props;\n\n    const prev = current === 1 ? undefined : current - 1,\n        next = current === pageCount ? undefined : current + 1,\n        items: [number | string] = [1];\n\n    if (current === 1 && pageCount === 1) return { current, prev, next, items };\n    if (current > 4) items.push(\"…\");\n\n    const r = 2,\n        r1 = current - r,\n        r2 = current + r;\n\n    for (let i = r1 > 2 ? r1 : 2; i <= Math.min(pageCount, r2); i++)\n        items.push(i);\n\n    if (r2 + 1 < pageCount) items.push(\"…\");\n    if (r2 < pageCount) items.push(pageCount);\n\n    return { current, prev, next, items };\n};\n","import { useContext } from \"react\";\n\nimport { ThemedLayoutContext } from \"../../contexts/themedLayoutContext\";\n\nexport type UseSiderVisibleType = {\n    siderVisible: boolean;\n    drawerSiderVisible: boolean;\n    setSiderVisible: (visible: boolean) => void;\n    setDrawerSiderVisible: (visible: boolean) => void;\n};\n\n/**\n * @deprecated Please use `useThemedLayoutContext` instead.\n */\nexport const useSiderVisible = (): UseSiderVisibleType => {\n    const {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    } = useContext(ThemedLayoutContext);\n\n    return {\n        siderVisible: mobileSiderOpen,\n        setSiderVisible: setMobileSiderOpen,\n        drawerSiderVisible: !siderCollapsed,\n        setDrawerSiderVisible: (visible) => setSiderCollapsed(!visible),\n    };\n};\n","import React, { ReactNode, useState } from \"react\";\n\nimport { IThemedLayoutContext } from \"./IThemedLayoutContext\";\n\nexport const ThemedLayoutContext = React.createContext<IThemedLayoutContext>({\n    siderCollapsed: false,\n    mobileSiderOpen: false,\n    setSiderCollapsed: () => undefined,\n    setMobileSiderOpen: () => undefined,\n});\n\nexport const ThemedLayoutContextProvider: React.FC<{\n    children: ReactNode;\n    initialSiderCollapsed?: boolean;\n}> = ({ children, initialSiderCollapsed }) => {\n    const [siderCollapsed, setSiderCollapsed] = useState(\n        initialSiderCollapsed ?? false,\n    );\n    const [mobileSiderOpen, setMobileSiderOpen] = useState(false);\n\n    return (\n        <ThemedLayoutContext.Provider\n            value={{\n                siderCollapsed,\n                mobileSiderOpen,\n                setSiderCollapsed,\n                setMobileSiderOpen,\n            }}\n        >\n            {children}\n        </ThemedLayoutContext.Provider>\n    );\n};\n","import { useContext } from \"react\";\n\nimport { ThemedLayoutContext } from \"../../contexts/themedLayoutContext\";\nimport { IThemedLayoutContext } from \"../../contexts/themedLayoutContext/IThemedLayoutContext\";\n\nexport type UseThemedLayoutContextType = IThemedLayoutContext;\n\nexport const useThemedLayoutContext = (): UseThemedLayoutContextType => {\n    const {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    } = useContext(ThemedLayoutContext);\n\n    return {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    };\n};\n","import React from \"react\";\nimport {\n    useGetIdentity,\n    useActiveAuthProvider,\n    pickNotDeprecated,\n} from \"@refinedev/core\";\nimport {\n    Box,\n    Avatar,\n    Text,\n    HStack,\n    useColorModeValue,\n    BoxProps,\n} from \"@chakra-ui/react\";\nimport { RefineThemedLayoutV2HeaderProps } from \"../types\";\nimport { HamburgerMenu } from \"../hamburgerMenu\";\n\nexport const ThemedHeaderV2: React.FC<RefineThemedLayoutV2HeaderProps> = ({\n    isSticky,\n    sticky,\n}) => {\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const bgColor = useColorModeValue(\n        \"refine.header.bg.light\",\n        \"refine.header.bg.dark\",\n    );\n\n    let stickyProps: BoxProps = {};\n    if (pickNotDeprecated(sticky, isSticky)) {\n        stickyProps = {\n            position: \"sticky\",\n            top: 0,\n            zIndex: 1,\n        };\n    }\n\n    return (\n        <Box\n            py=\"2\"\n            px=\"4\"\n            display=\"flex\"\n            alignItems=\"center\"\n            w=\"full\"\n            height=\"64px\"\n            bg={bgColor}\n            borderBottom=\"1px\"\n            borderBottomColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n            {...stickyProps}\n        >\n            <Box\n                w=\"full\"\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n            >\n                <HamburgerMenu />\n                <HStack>\n                    {user?.name && (\n                        <Text\n                            size=\"sm\"\n                            fontWeight=\"bold\"\n                            data-testid=\"header-user-name\"\n                        >\n                            {user.name}\n                        </Text>\n                    )}\n                    {user?.avatar && (\n                        <Avatar\n                            size=\"sm\"\n                            name={user?.name || \"Profile Photo\"}\n                            src={user.avatar}\n                        />\n                    )}\n                </HStack>\n            </Box>\n        </Box>\n    );\n};\n","import React from \"react\";\nimport { IconButtonProps, IconButton } from \"@chakra-ui/react\";\nimport {\n    IconLayoutSidebarLeftCollapse,\n    IconLayoutSidebarLeftExpand,\n    IconMenu2,\n} from \"@tabler/icons\";\n\nimport { useThemedLayoutContext } from \"@hooks\";\n\nconst HamburgerIcon = (props: IconButtonProps) => (\n    <IconButton variant=\"ghost\" size=\"sm\" {...props} />\n);\n\nexport const HamburgerMenu: React.FC = () => {\n    const {\n        siderCollapsed,\n        setSiderCollapsed,\n        mobileSiderOpen,\n        setMobileSiderOpen,\n    } = useThemedLayoutContext();\n\n    return (\n        <>\n            <HamburgerIcon\n                display={{ base: \"none\", md: \"flex\" }}\n                aria-label=\"drawer-sidebar-toggle\"\n                icon={\n                    siderCollapsed ? (\n                        <IconLayoutSidebarLeftExpand />\n                    ) : (\n                        <IconLayoutSidebarLeftCollapse />\n                    )\n                }\n                onClick={() => setSiderCollapsed(!siderCollapsed)}\n            />\n            <HamburgerIcon\n                display={{ base: \"flex\", md: \"none\" }}\n                aria-label=\"sidebar-toggle\"\n                icon={<IconMenu2 />}\n                onClick={() => setMobileSiderOpen(!mobileSiderOpen)}\n            />\n        </>\n    );\n};\n","import React from \"react\";\nimport {\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useRouterType,\n    useResource,\n} from \"@refinedev/core\";\n\nimport { Box, Heading } from \"@chakra-ui/react\";\n\nimport { CreateButton, Breadcrumb, CreateButtonProps } from \"@components\";\nimport { ListProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\nexport const List: React.FC<ListProps> = (props) => {\n    const {\n        canCreate,\n        children,\n        createButtonProps: createButtonPropsFromProps,\n        resource: resourceFromProps,\n        wrapperProps,\n        contentProps,\n        headerProps,\n        headerButtonProps,\n        headerButtons: headerButtonsFromProps,\n        breadcrumb: breadcrumbFromProps,\n        title,\n    } = props;\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const { resource, identifier } = useResource(resourceFromProps);\n\n    const isCreateButtonVisible =\n        canCreate ??\n        ((resource?.canCreate ?? !!resource?.create) ||\n            createButtonPropsFromProps);\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const createButtonProps: CreateButtonProps | undefined =\n        isCreateButtonVisible\n            ? {\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  ...createButtonPropsFromProps,\n              }\n            : undefined;\n\n    const defaultHeaderButtons = isCreateButtonVisible ? (\n        <CreateButton {...createButtonProps} />\n    ) : null;\n\n    const headerButtons = headerButtonsFromProps\n        ? typeof headerButtonsFromProps === \"function\"\n            ? headerButtonsFromProps({\n                  defaultButtons: defaultHeaderButtons,\n                  createButtonProps,\n              })\n            : headerButtonsFromProps\n        : defaultHeaderButtons;\n\n    const renderTitle = () => {\n        if (title === false) return null;\n\n        if (title) {\n            if (typeof title === \"string\" || typeof title === \"number\") {\n                return (\n                    <Heading\n                        as=\"h3\"\n                        size=\"lg\"\n                        className={RefinePageHeaderClassNames.Title}\n                    >\n                        {title}\n                    </Heading>\n                );\n            }\n\n            return title;\n        }\n\n        return (\n            <Heading\n                as=\"h3\"\n                size=\"lg\"\n                className={RefinePageHeaderClassNames.Title}\n            >\n                {translate(\n                    `${identifier}.titles.list`,\n                    getUserFriendlyName(\n                        resource?.meta?.label ??\n                            resource?.options?.label ??\n                            resource?.label ??\n                            identifier,\n                        \"plural\",\n                    ),\n                )}\n            </Heading>\n        );\n    };\n\n    return (\n        <Box\n            bg=\"chakra-body-bg\"\n            borderRadius=\"md\"\n            px=\"4\"\n            py=\"3\"\n            {...wrapperProps}\n        >\n            <Box\n                mb=\"3\"\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                flexWrap={{ base: \"wrap\", md: \"nowrap\" }}\n                gap=\"3\"\n                {...headerProps}\n            >\n                <Box minW={200}>\n                    {typeof breadcrumb !== \"undefined\" ? (\n                        <>{breadcrumb}</> ?? undefined\n                    ) : (\n                        <Breadcrumb />\n                    )}\n                    {renderTitle()}\n                </Box>\n                <Box\n                    display=\"flex\"\n                    flexWrap=\"wrap\"\n                    justifyContent={{ base: \"flex-start\", md: \"flex-end\" }}\n                    gap=\"2\"\n                    {...headerButtonProps}\n                >\n                    {headerButtons}\n                </Box>\n            </Box>\n            <Box {...contentProps}>{children}</Box>\n        </Box>\n    );\n};\n","import React from \"react\";\nimport {\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useResource,\n    useToPath,\n    useRouterType,\n    useBack,\n    useGo,\n} from \"@refinedev/core\";\nimport { Box, IconButton, HStack, Heading, Spinner } from \"@chakra-ui/react\";\n\n// We use @tabler/icons for icons but you can use any icon library you want.\nimport { IconArrowLeft } from \"@tabler/icons\";\n\nimport {\n    DeleteButton,\n    EditButton,\n    ListButton,\n    RefreshButton,\n    Breadcrumb,\n    ListButtonProps,\n    EditButtonProps,\n    DeleteButtonProps,\n    RefreshButtonProps,\n} from \"@components\";\nimport { ShowProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\nexport const Show: React.FC<ShowProps> = (props) => {\n    const {\n        children,\n        resource: resourceFromProps,\n        recordItemId,\n        canDelete,\n        canEdit,\n        dataProviderName,\n        isLoading,\n        footerButtons: footerButtonsFromProps,\n        footerButtonProps,\n        headerButtons: headerButtonsFromProps,\n        headerButtonProps,\n        wrapperProps,\n        contentProps,\n        headerProps,\n        goBack: goBackFromProps,\n        breadcrumb: breadcrumbFromProps,\n        title,\n    } = props;\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const go = useGo();\n    const { goBack, list: legacyGoList } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const {\n        resource,\n        action,\n        id: idFromParams,\n        identifier,\n    } = useResource(resourceFromProps);\n\n    const goListPath = useToPath({\n        resource,\n        action: \"list\",\n    });\n\n    const id = recordItemId ?? idFromParams;\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const hasList = resource?.list && !recordItemId;\n    const isDeleteButtonVisible =\n        canDelete ?? resource?.meta?.canDelete ?? resource?.canDelete;\n    const isEditButtonVisible =\n        canEdit ?? resource?.canEdit ?? !!resource?.edit;\n\n    const listButtonProps: ListButtonProps | undefined = hasList\n        ? {\n              ...(isLoading ? { disabled: true } : {}),\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n          }\n        : undefined;\n    const editButtonProps: EditButtonProps | undefined = isEditButtonVisible\n        ? {\n              colorScheme: \"brand\",\n              ...(isLoading ? { disabled: true } : {}),\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n              recordItemId: id,\n          }\n        : undefined;\n    const deleteButtonProps: DeleteButtonProps | undefined =\n        isDeleteButtonVisible\n            ? {\n                  ...(isLoading ? { disabled: true } : {}),\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  recordItemId: id,\n                  onSuccess: () => {\n                      if (routerType === \"legacy\") {\n                          legacyGoList(resource?.route ?? resource?.name ?? \"\");\n                      } else {\n                          go({ to: goListPath });\n                      }\n                  },\n                  dataProviderName,\n              }\n            : undefined;\n    const refreshButtonProps: RefreshButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        recordItemId: id,\n        dataProviderName,\n    };\n\n    const defaultHeaderButtons = (\n        <>\n            {listButtonProps && <ListButton {...listButtonProps} />}\n            {isEditButtonVisible && (\n                <EditButton colorScheme=\"brand\" {...editButtonProps} />\n            )}\n            {isDeleteButtonVisible && <DeleteButton {...deleteButtonProps} />}\n            <RefreshButton {...refreshButtonProps} />\n        </>\n    );\n\n    const buttonBack =\n        goBackFromProps === (false || null) ? null : (\n            <IconButton\n                aria-label=\"back\"\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={\n                    action !== \"list\" && typeof action !== \"undefined\"\n                        ? routerType === \"legacy\"\n                            ? goBack\n                            : back\n                        : undefined\n                }\n            >\n                {typeof goBackFromProps !== \"undefined\" ? (\n                    goBackFromProps\n                ) : (\n                    <IconArrowLeft />\n                )}\n            </IconButton>\n        );\n\n    const headerButtons = headerButtonsFromProps\n        ? typeof headerButtonsFromProps === \"function\"\n            ? headerButtonsFromProps({\n                  defaultButtons: defaultHeaderButtons,\n                  deleteButtonProps,\n                  editButtonProps,\n                  listButtonProps,\n                  refreshButtonProps,\n              })\n            : headerButtonsFromProps\n        : defaultHeaderButtons;\n\n    const footerButtons = footerButtonsFromProps\n        ? typeof footerButtonsFromProps === \"function\"\n            ? footerButtonsFromProps({ defaultButtons: null })\n            : footerButtonsFromProps\n        : null;\n\n    const renderTitle = () => {\n        if (title === false) return null;\n\n        if (title) {\n            if (typeof title === \"string\" || typeof title === \"number\") {\n                return (\n                    <Heading\n                        as=\"h3\"\n                        size=\"lg\"\n                        className={RefinePageHeaderClassNames.Title}\n                    >\n                        {title}\n                    </Heading>\n                );\n            }\n\n            return title;\n        }\n\n        return (\n            <Heading\n                as=\"h3\"\n                size=\"lg\"\n                className={RefinePageHeaderClassNames.Title}\n            >\n                {translate(\n                    `${identifier}.titles.show`,\n                    `Show ${getUserFriendlyName(\n                        resource?.meta?.label ??\n                            resource?.options?.label ??\n                            resource?.label ??\n                            identifier,\n                        \"singular\",\n                    )}`,\n                )}\n            </Heading>\n        );\n    };\n\n    return (\n        <Box\n            position=\"relative\"\n            bg=\"chakra-body-bg\"\n            borderRadius=\"md\"\n            px=\"4\"\n            py=\"3\"\n            {...wrapperProps}\n        >\n            {isLoading && (\n                <Spinner\n                    position=\"absolute\"\n                    top=\"50%\"\n                    left=\"50%\"\n                    transform=\"translate(-50%, -50%)\"\n                />\n            )}\n            <Box\n                mb=\"3\"\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                flexWrap={{ base: \"wrap\", md: \"nowrap\" }}\n                gap=\"3\"\n                {...headerProps}\n            >\n                <Box minW={200}>\n                    {typeof breadcrumb !== \"undefined\" ? (\n                        <>{breadcrumb}</> ?? undefined\n                    ) : (\n                        <Breadcrumb />\n                    )}\n                    <HStack>\n                        {buttonBack}\n                        {renderTitle()}\n                    </HStack>\n                </Box>\n                <Box\n                    display=\"flex\"\n                    flexWrap=\"wrap\"\n                    justifyContent={{ base: \"flex-start\", md: \"flex-end\" }}\n                    gap=\"2\"\n                    {...headerButtonProps}\n                >\n                    {headerButtons}\n                </Box>\n            </Box>\n            <Box opacity={isLoading ? 0.5 : undefined} {...contentProps}>\n                {children}\n            </Box>\n            <Box\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap=\"2\"\n                mt={8}\n                {...footerButtonProps}\n            >\n                {footerButtons}\n            </Box>\n        </Box>\n    );\n};\n","import React from \"react\";\n\nimport {\n    useMutationMode,\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useRouterType,\n    useBack,\n    useResource,\n    useGo,\n    useToPath,\n} from \"@refinedev/core\";\n\nimport { Box, Heading, HStack, IconButton, Spinner } from \"@chakra-ui/react\";\n\n// We use @tabler/icons for icons but you can use any icon library you want.\nimport { IconArrowLeft } from \"@tabler/icons\";\n\nimport {\n    DeleteButton,\n    ListButton,\n    RefreshButton,\n    SaveButton,\n    Breadcrumb,\n    ListButtonProps,\n    RefreshButtonProps,\n    DeleteButtonProps,\n    SaveButtonProps,\n    AutoSaveIndicator,\n} from \"@components\";\nimport { EditProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\nexport const Edit: React.FC<EditProps> = (props) => {\n    const {\n        children,\n        resource: resourceFromProps,\n        recordItemId,\n        deleteButtonProps: deleteButtonPropsFromProps,\n        mutationMode: mutationModeFromProps,\n        saveButtonProps: saveButtonPropsFromProps,\n        canDelete,\n        dataProviderName,\n        isLoading,\n        footerButtons: footerButtonsFromProps,\n        footerButtonProps,\n        headerButtons: headerButtonsFromProps,\n        headerButtonProps,\n        wrapperProps,\n        contentProps,\n        headerProps,\n        goBack: goBackFromProps,\n        breadcrumb: breadcrumbFromProps,\n        title,\n        autoSaveProps,\n    } = props;\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n    const { mutationMode: mutationModeContext } = useMutationMode();\n    const mutationMode = mutationModeFromProps ?? mutationModeContext;\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const go = useGo();\n    const { goBack, list: legacyGoList } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const {\n        resource,\n        action,\n        id: idFromParams,\n        identifier,\n    } = useResource(resourceFromProps);\n\n    const goListPath = useToPath({\n        resource,\n        action: \"list\",\n    });\n\n    const id = recordItemId ?? idFromParams;\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const hasList = resource?.list && !recordItemId;\n    const isDeleteButtonVisible =\n        canDelete ??\n        ((resource?.meta?.canDelete ?? resource?.canDelete) ||\n            deleteButtonPropsFromProps);\n\n    const listButtonProps: ListButtonProps | undefined = hasList\n        ? {\n              ...(isLoading ? { disabled: true } : {}),\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n          }\n        : undefined;\n\n    const refreshButtonProps: RefreshButtonProps | undefined = {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        recordItemId: id,\n        dataProviderName,\n    };\n\n    const deleteButtonProps: DeleteButtonProps | undefined =\n        isDeleteButtonVisible\n            ? ({\n                  ...(isLoading ? { disabled: true } : {}),\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  mutationMode,\n                  onSuccess: () => {\n                      if (routerType === \"legacy\") {\n                          legacyGoList(resource?.route ?? resource?.name ?? \"\");\n                      } else {\n                          go({ to: goListPath });\n                      }\n                  },\n                  recordItemId: id,\n                  dataProviderName,\n                  ...deleteButtonPropsFromProps,\n              } as const)\n            : undefined;\n\n    const saveButtonProps: SaveButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        ...saveButtonPropsFromProps,\n    };\n\n    const defaultHeaderButtons = (\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\" gap=\"2\">\n            {autoSaveProps && <AutoSaveIndicator {...autoSaveProps} />}\n            {hasList && <ListButton {...listButtonProps} />}\n            <RefreshButton {...refreshButtonProps} />\n        </Box>\n    );\n\n    const defaultFooterButtons = (\n        <>\n            {isDeleteButtonVisible && <DeleteButton {...deleteButtonProps} />}\n            <SaveButton {...saveButtonProps} />\n        </>\n    );\n\n    const buttonBack =\n        goBackFromProps === (false || null) ? null : (\n            <IconButton\n                aria-label=\"back\"\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={\n                    action !== \"list\" && typeof action !== \"undefined\"\n                        ? routerType === \"legacy\"\n                            ? goBack\n                            : back\n                        : undefined\n                }\n            >\n                {typeof goBackFromProps !== \"undefined\" ? (\n                    goBackFromProps\n                ) : (\n                    <IconArrowLeft />\n                )}\n            </IconButton>\n        );\n\n    const headerButtons = headerButtonsFromProps\n        ? typeof headerButtonsFromProps === \"function\"\n            ? headerButtonsFromProps({\n                  defaultButtons: defaultHeaderButtons,\n                  listButtonProps,\n                  refreshButtonProps,\n              })\n            : headerButtonsFromProps\n        : defaultHeaderButtons;\n\n    const footerButtons = footerButtonsFromProps\n        ? typeof footerButtonsFromProps === \"function\"\n            ? footerButtonsFromProps({\n                  defaultButtons: defaultFooterButtons,\n                  deleteButtonProps,\n                  saveButtonProps,\n              })\n            : footerButtonsFromProps\n        : defaultFooterButtons;\n\n    const renderTitle = () => {\n        if (title === false) return null;\n\n        if (title) {\n            if (typeof title === \"string\" || typeof title === \"number\") {\n                return (\n                    <Heading\n                        as=\"h3\"\n                        size=\"lg\"\n                        className={RefinePageHeaderClassNames.Title}\n                    >\n                        {title}\n                    </Heading>\n                );\n            }\n\n            return title;\n        }\n\n        return (\n            <Heading\n                as=\"h3\"\n                size=\"lg\"\n                className={RefinePageHeaderClassNames.Title}\n            >\n                {translate(\n                    `${identifier}.titles.edit`,\n                    `Edit ${getUserFriendlyName(\n                        resource?.meta?.label ??\n                            resource?.options?.label ??\n                            resource?.label ??\n                            identifier,\n                        \"singular\",\n                    )}`,\n                )}\n            </Heading>\n        );\n    };\n\n    return (\n        <Box\n            position=\"relative\"\n            bg=\"chakra-body-bg\"\n            borderRadius=\"md\"\n            px=\"4\"\n            py=\"3\"\n            {...wrapperProps}\n        >\n            {isLoading && (\n                <Spinner\n                    position=\"absolute\"\n                    top=\"50%\"\n                    left=\"50%\"\n                    transform=\"translate(-50%, -50%)\"\n                />\n            )}\n            <Box\n                mb=\"3\"\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                flexWrap={{ base: \"wrap\", md: \"nowrap\" }}\n                gap=\"3\"\n                {...headerProps}\n            >\n                <Box minW={200}>\n                    {typeof breadcrumb !== \"undefined\" ? (\n                        <>{breadcrumb}</> ?? undefined\n                    ) : (\n                        <Breadcrumb />\n                    )}\n                    <HStack spacing={2}>\n                        {buttonBack}\n                        {renderTitle()}\n                    </HStack>\n                </Box>\n                <Box\n                    display=\"flex\"\n                    flexWrap=\"wrap\"\n                    justifyContent={{ base: \"flex-start\", md: \"flex-end\" }}\n                    gap=\"2\"\n                    {...headerButtonProps}\n                >\n                    {headerButtons}\n                </Box>\n            </Box>\n            <Box opacity={isLoading ? 0.5 : undefined} {...contentProps}>\n                {children}\n            </Box>\n            <Box\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap=\"2\"\n                mt={8}\n                {...footerButtonProps}\n            >\n                {footerButtons}\n            </Box>\n        </Box>\n    );\n};\n","import React from \"react\";\nimport {\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useRouterType,\n    useResource,\n    useBack,\n} from \"@refinedev/core\";\nimport { Box, Heading, HStack, IconButton, Spinner } from \"@chakra-ui/react\";\n\n// We use @tabler/icons for icons but you can use any icon library you want.\nimport { IconArrowLeft } from \"@tabler/icons\";\n\nimport { Breadcrumb, SaveButton, SaveButtonProps } from \"@components\";\nimport { CreateProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\nexport const Create: React.FC<CreateProps> = (props) => {\n    const {\n        children,\n        saveButtonProps: saveButtonPropsFromProps,\n        isLoading,\n        resource: resourceFromProps,\n        footerButtons: footerButtonsFromProps,\n        footerButtonProps,\n        headerButtons: headerButtonsFromProps,\n        headerButtonProps,\n        wrapperProps,\n        contentProps,\n        headerProps,\n        goBack: goBackFromProps,\n        breadcrumb: breadcrumbFromProps,\n        title,\n    } = props;\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const { goBack } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const { resource, action, identifier } = useResource(resourceFromProps);\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const saveButtonProps: SaveButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        ...saveButtonPropsFromProps,\n    };\n\n    const defaultFooterButtons = <SaveButton {...saveButtonProps} />;\n\n    const buttonBack =\n        goBackFromProps === (false || null) ? null : (\n            <IconButton\n                aria-label=\"back\"\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={\n                    action !== \"list\" || typeof action !== \"undefined\"\n                        ? routerType === \"legacy\"\n                            ? goBack\n                            : back\n                        : undefined\n                }\n            >\n                {typeof goBackFromProps !== \"undefined\" ? (\n                    goBackFromProps\n                ) : (\n                    <IconArrowLeft />\n                )}\n            </IconButton>\n        );\n\n    const headerButtons = headerButtonsFromProps\n        ? typeof headerButtonsFromProps === \"function\"\n            ? headerButtonsFromProps({\n                  defaultButtons: null,\n              })\n            : headerButtonsFromProps\n        : null;\n\n    const footerButtons = footerButtonsFromProps\n        ? typeof footerButtonsFromProps === \"function\"\n            ? footerButtonsFromProps({\n                  defaultButtons: defaultFooterButtons,\n                  saveButtonProps,\n              })\n            : footerButtonsFromProps\n        : defaultFooterButtons;\n\n    const renderTitle = () => {\n        if (title === false) return null;\n\n        if (title) {\n            if (typeof title === \"string\" || typeof title === \"number\") {\n                return (\n                    <Heading\n                        as=\"h3\"\n                        size=\"lg\"\n                        className={RefinePageHeaderClassNames.Title}\n                    >\n                        {title}\n                    </Heading>\n                );\n            }\n\n            return title;\n        }\n\n        return (\n            <Heading\n                as=\"h3\"\n                size=\"lg\"\n                className={RefinePageHeaderClassNames.Title}\n            >\n                {translate(\n                    `${identifier}.titles.create`,\n                    `Create ${getUserFriendlyName(\n                        resource?.meta?.label ??\n                            resource?.options?.label ??\n                            resource?.label ??\n                            identifier,\n                        \"singular\",\n                    )}`,\n                )}\n            </Heading>\n        );\n    };\n\n    return (\n        <Box\n            position=\"relative\"\n            bg=\"chakra-body-bg\"\n            borderRadius=\"md\"\n            px=\"4\"\n            py=\"3\"\n            {...wrapperProps}\n        >\n            {isLoading && (\n                <Spinner\n                    position=\"absolute\"\n                    top=\"50%\"\n                    left=\"50%\"\n                    transform=\"translate(-50%, -50%)\"\n                />\n            )}\n            <Box\n                mb=\"3\"\n                display=\"flex\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                flexWrap={{ base: \"wrap\", md: \"nowrap\" }}\n                gap=\"3\"\n                {...headerProps}\n            >\n                <Box minW={200}>\n                    {typeof breadcrumb !== \"undefined\" ? (\n                        <>{breadcrumb}</>\n                    ) : (\n                        <Breadcrumb />\n                    )}\n                    <HStack>\n                        {buttonBack}\n                        {renderTitle()}\n                    </HStack>\n                </Box>\n                <Box\n                    display=\"flex\"\n                    flexWrap=\"wrap\"\n                    justifyContent={{ base: \"flex-start\", md: \"flex-end\" }}\n                    gap=\"2\"\n                    {...headerButtonProps}\n                >\n                    {headerButtons}\n                </Box>\n            </Box>\n            <Box opacity={isLoading ? 0.5 : undefined} {...contentProps}>\n                {children}\n            </Box>\n            <Box\n                display=\"flex\"\n                justifyContent=\"flex-end\"\n                gap=\"2\"\n                mt=\"8\"\n                {...footerButtonProps}\n            >\n                {footerButtons}\n            </Box>\n        </Box>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useNavigation,\n    useTranslate,\n    useCan,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { Button, IconButton } from \"@chakra-ui/react\";\nimport { IconSquarePlus } from \"@tabler/icons\";\n\nimport { CreateButtonProps } from \"../types\";\n\nexport const CreateButton: React.FC<CreateButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { createUrl: generateCreateUrl } = useNavigation();\n\n    const { resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"create\",\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n        params: {\n            resource,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const createUrl = resource ? generateCreateUrl(resource, meta) : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={createUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            {hideText ? (\n                <IconButton\n                    colorScheme=\"brand\"\n                    variant=\"outline\"\n                    aria-label={translate(\"buttons.create\", \"Create\")}\n                    title={disabledTitle()}\n                    isDisabled={data?.can === false}\n                    data-testid={RefineButtonTestIds.CreateButton}\n                    className={RefineButtonClassNames.CreateButton}\n                    {...rest}\n                >\n                    <IconSquarePlus size={20} {...svgIconProps} />\n                </IconButton>\n            ) : (\n                <Button\n                    colorScheme=\"brand\"\n                    isDisabled={data?.can === false}\n                    leftIcon={<IconSquarePlus size={20} />}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.CreateButton}\n                    className={RefineButtonClassNames.CreateButton}\n                    {...rest}\n                >\n                    {children ?? translate(\"buttons.create\", \"Create\")}\n                </Button>\n            )}\n        </ActiveLink>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { IconPencil } from \"@tabler/icons\";\nimport { Button, IconButton } from \"@chakra-ui/react\";\n\nimport { EditButtonProps } from \"../types\";\n\n/**\n * `<EditButton>` uses Chakra UI {@link https://chakra-ui.com/docs/components/button `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#edit `edit`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the edit page with the record id route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/buttons/edit-button} for more details.\n */\nexport const EditButton: React.FC<EditButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const translate = useTranslate();\n\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { editUrl: generateEditUrl } = useNavigation();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"edit\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const editUrl =\n        resource && (recordItemId ?? id)\n            ? generateEditUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={editUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            {hideText ? (\n                <IconButton\n                    variant=\"outline\"\n                    aria-label={translate(\"buttons.edit\", \"Edit\")}\n                    title={disabledTitle()}\n                    isDisabled={data?.can === false}\n                    data-testid={RefineButtonTestIds.EditButton}\n                    className={RefineButtonClassNames.EditButton}\n                    {...rest}\n                >\n                    <IconPencil size={20} {...svgIconProps} />\n                </IconButton>\n            ) : (\n                <Button\n                    variant=\"outline\"\n                    isDisabled={data?.can === false}\n                    leftIcon={<IconPencil size={20} {...svgIconProps} />}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.EditButton}\n                    className={RefineButtonClassNames.EditButton}\n                    {...rest}\n                >\n                    {children ?? translate(\"buttons.edit\", \"Edit\")}\n                </Button>\n            )}\n        </ActiveLink>\n    );\n};\n","import React, { useContext, useState } from \"react\";\nimport {\n    useDelete,\n    useTranslate,\n    useMutationMode,\n    useCan,\n    useResource,\n    pickNotDeprecated,\n    useWarnAboutChange,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport {\n    Button,\n    HStack,\n    IconButton,\n    Popover,\n    PopoverArrow,\n    PopoverBody,\n    PopoverContent,\n    PopoverHeader,\n    PopoverTrigger,\n} from \"@chakra-ui/react\";\nimport { IconTrash } from \"@tabler/icons\";\n\nimport { DeleteButtonProps } from \"../types\";\n\n/**\n * `<DeleteButton>` uses Chakra UI {@link https://chakra-ui.com/docs/components/button `<Button>`} and {@link https://chakra-ui.com/docs/components/popover `<Popover>`} components.\n * When you try to delete something, a dialog modal shows up and asks for confirmation. When confirmed it executes the `useDelete` method provided by your `dataProvider`.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/buttons/delete-button} for more details.\n */\nexport const DeleteButton: React.FC<DeleteButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    onSuccess,\n    mutationMode: mutationModeProp,\n    children,\n    successNotification,\n    errorNotification,\n    hideText = false,\n    accessControl,\n    meta,\n    metaData,\n    dataProviderName,\n    confirmTitle,\n    confirmOkText,\n    confirmCancelText,\n    svgIconProps,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const translate = useTranslate();\n\n    const { id, resource, identifier } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { mutationMode: mutationModeContext } = useMutationMode();\n\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const { mutate, isLoading, variables } = useDelete();\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"delete\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const [opened, setOpened] = useState(false);\n\n    const onConfirm = () => {\n        if (identifier && (recordItemId ?? id)) {\n            setWarnWhen(false);\n            setOpened(false);\n            mutate(\n                {\n                    id: recordItemId ?? id ?? \"\",\n                    resource: identifier,\n                    mutationMode,\n                    successNotification,\n                    errorNotification,\n                    meta: pickNotDeprecated(meta, metaData),\n                    metaData: pickNotDeprecated(meta, metaData),\n                    dataProviderName,\n                },\n                {\n                    onSuccess: (value) => {\n                        onSuccess && onSuccess(value);\n                    },\n                },\n            );\n        }\n    };\n\n    const { setWarnWhen } = useWarnAboutChange();\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <Popover isOpen={opened} isLazy>\n            <PopoverTrigger>\n                {hideText ? (\n                    <IconButton\n                        colorScheme=\"red\"\n                        variant=\"outline\"\n                        aria-label={translate(\"buttons.edit\", \"Edit\")}\n                        onClick={() => setOpened((o) => !o)}\n                        isDisabled={isLoading || data?.can === false}\n                        isLoading={\n                            (recordItemId ?? id) === variables?.id && isLoading\n                        }\n                        data-testid={RefineButtonTestIds.DeleteButton}\n                        className={RefineButtonClassNames.DeleteButton}\n                        {...rest}\n                    >\n                        <IconTrash size={20} {...svgIconProps} />\n                    </IconButton>\n                ) : (\n                    <Button\n                        colorScheme=\"red\"\n                        variant=\"outline\"\n                        onClick={() => setOpened((o) => !o)}\n                        isDisabled={isLoading || data?.can === false}\n                        isLoading={id === variables?.id && isLoading}\n                        leftIcon={<IconTrash size={20} {...svgIconProps} />}\n                        title={disabledTitle()}\n                        data-testid={RefineButtonTestIds.DeleteButton}\n                        className={RefineButtonClassNames.DeleteButton}\n                        {...rest}\n                    >\n                        {children ?? translate(\"buttons.delete\", \"Delete\")}\n                    </Button>\n                )}\n            </PopoverTrigger>\n            <PopoverContent>\n                <PopoverArrow />\n                <PopoverHeader textAlign=\"center\">\n                    {confirmTitle ??\n                        translate(\"buttons.confirm\", \"Are you sure?\")}\n                </PopoverHeader>\n                <PopoverBody display=\"flex\" justifyContent=\"center\">\n                    <HStack>\n                        <Button onClick={() => setOpened(false)} size=\"sm\">\n                            {confirmCancelText ??\n                                translate(\"buttons.cancel\", \"Cancel\")}\n                        </Button>\n                        <Button\n                            colorScheme=\"red\"\n                            onClick={onConfirm}\n                            autoFocus\n                            size=\"sm\"\n                        >\n                            {confirmOkText ??\n                                translate(\"buttons.delete\", \"Delete\")}\n                        </Button>\n                    </HStack>\n                </PopoverBody>\n            </PopoverContent>\n        </Popover>\n    );\n};\n","import React from \"react\";\nimport {\n    useTranslate,\n    useResource,\n    useInvalidate,\n    queryKeys,\n    pickDataProvider,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { IconButton, Button } from \"@chakra-ui/react\";\nimport { IconRefresh } from \"@tabler/icons\";\n\nimport { RefreshButtonProps } from \"../types\";\n\nimport { useQueryClient } from \"@tanstack/react-query\";\n\n/**\n * `<RefreshButton>` uses Chakra UI {@link https://chakra-ui.com/docs/components/button `<Button> `} component.\n * to update the data shown on the page via the {@link https://refine.dev/docs/api-reference/core/hooks/invalidate/useInvalidate `useInvalidate`} hook.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/buttons/refresh-button} for more details.\n */\nexport const RefreshButton: React.FC<RefreshButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    dataProviderName,\n    svgIconProps,\n    children,\n    onClick,\n    meta: _meta,\n    metaData: _metaData,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const queryClient = useQueryClient();\n    const invalidates = useInvalidate();\n\n    const { resources, identifier, id } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const isInvalidating = !!queryClient.isFetching({\n        queryKey: queryKeys(\n            identifier,\n            pickDataProvider(identifier, dataProviderName, resources),\n        ).detail(recordItemId ?? id),\n    });\n\n    const handleInvalidate = () => {\n        invalidates({\n            id: recordItemId ?? id,\n            invalidates: [\"detail\"],\n            dataProviderName,\n            resource: identifier,\n        });\n    };\n\n    return hideText ? (\n        <IconButton\n            variant=\"outline\"\n            aria-label={translate(\"buttons.refresh\", \"Refresh\")}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                onClick ? onClick(e) : handleInvalidate();\n            }}\n            isLoading={isInvalidating}\n            data-testid={RefineButtonTestIds.RefreshButton}\n            className={RefineButtonClassNames.RefreshButton}\n            {...rest}\n        >\n            <IconRefresh size={20} {...svgIconProps} />\n        </IconButton>\n    ) : (\n        <Button\n            variant=\"outline\"\n            leftIcon={<IconRefresh size={20} {...svgIconProps} />}\n            isLoading={isInvalidating}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                onClick ? onClick(e) : handleInvalidate();\n            }}\n            data-testid={RefineButtonTestIds.RefreshButton}\n            className={RefineButtonClassNames.RefreshButton}\n            {...rest}\n        >\n            {children ?? translate(\"buttons.refresh\", \"Refresh\")}\n        </Button>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { IconButton, Button } from \"@chakra-ui/react\";\nimport { IconEye } from \"@tabler/icons\";\n\nimport { ShowButtonProps } from \"../types\";\n\n/**\n * `<ShowButton>` uses Chakra UI {@link https://chakra-ui.com/docs/components/button `<Button> `} component.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#show `show`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when red sirecting the app to the show page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/buttons/show-button} for more details.\n */\nexport const ShowButton: React.FC<ShowButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const { showUrl: generateShowUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"show\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const showUrl =\n        resource && (recordItemId || id)\n            ? generateShowUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={showUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            {hideText ? (\n                <IconButton\n                    variant=\"outline\"\n                    aria-label={translate(\"buttons.show\", \"Show\")}\n                    isDisabled={data?.can === false}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.ShowButton}\n                    className={RefineButtonClassNames.ShowButton}\n                    {...rest}\n                >\n                    <IconEye size={20} {...svgIconProps} />\n                </IconButton>\n            ) : (\n                <Button\n                    variant=\"outline\"\n                    isDisabled={data?.can === false}\n                    leftIcon={<IconEye size={20} {...svgIconProps} />}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.ShowButton}\n                    className={RefineButtonClassNames.ShowButton}\n                    {...rest}\n                >\n                    {children ?? translate(\"buttons.show\", \"Show\")}\n                </Button>\n            )}\n        </ActiveLink>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    pickNotDeprecated,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { IconButton, Button } from \"@chakra-ui/react\";\nimport { IconList } from \"@tabler/icons\";\n\nimport { ListButtonProps } from \"../types\";\n\n/**\n * `<ListButton>` is using uses Chakra UI {@link https://chakra-ui.com/docs/components/button `<Button> `} component.\n * It uses the  {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#list `list`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the list page route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/buttons/list-button} for more details.\n **/\nexport const ListButton: React.FC<ListButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const { listUrl: generateListUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { resource, identifier } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"list\",\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n        params: {\n            resource,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const listUrl = resource ? generateListUrl(resource, meta) : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={listUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            {hideText ? (\n                <IconButton\n                    variant=\"outline\"\n                    aria-label={translate(\n                        `${identifier}.titles.list`,\n                        getUserFriendlyName(\n                            resource?.meta?.label ??\n                                resource?.label ??\n                                identifier ??\n                                resourceNameOrRouteName,\n                            \"plural\",\n                        ),\n                    )}\n                    isDisabled={data?.can === false}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.ListButton}\n                    className={RefineButtonClassNames.ListButton}\n                    {...rest}\n                >\n                    <IconList size={20} {...svgIconProps} />\n                </IconButton>\n            ) : (\n                <Button\n                    variant=\"outline\"\n                    isDisabled={data?.can === false}\n                    leftIcon={<IconList size={20} {...svgIconProps} />}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.ListButton}\n                    className={RefineButtonClassNames.ListButton}\n                    {...rest}\n                >\n                    {children ??\n                        translate(\n                            `${\n                                identifier ??\n                                resourceNameFromProps ??\n                                resourceNameOrRouteName\n                            }.titles.list`,\n                            getUserFriendlyName(\n                                resource?.meta?.label ??\n                                    resource?.label ??\n                                    identifier ??\n                                    pickNotDeprecated(\n                                        resourceNameFromProps,\n                                        resourceNameOrRouteName,\n                                    ),\n                                \"plural\",\n                            ),\n                        )}\n                </Button>\n            )}\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { IconButton, Button } from \"@chakra-ui/react\";\nimport { IconFileExport } from \"@tabler/icons\";\n\nimport { ExportButtonProps } from \"../types\";\n\n/**\n * `<ExportButton>` uses Chakra UI {@link https://chakra-ui.com/docs/components/button `<Button> `} component with a default export icon and a default text with \"Export\".\n * It only has presentational value.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/buttons/export-button} for more details.\n */\nexport const ExportButton: React.FC<ExportButtonProps> = ({\n    hideText = false,\n    children,\n    loading = false,\n    svgIconProps,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    return hideText ? (\n        <IconButton\n            variant=\"outline\"\n            aria-label={translate(\"buttons.export\", \"Export\")}\n            isLoading={loading}\n            data-testid={RefineButtonTestIds.ExportButton}\n            className={RefineButtonClassNames.ExportButton}\n            {...rest}\n        >\n            <IconFileExport size={20} {...svgIconProps} />\n        </IconButton>\n    ) : (\n        <Button\n            variant=\"outline\"\n            isLoading={loading}\n            leftIcon={<IconFileExport size={20} {...svgIconProps} />}\n            data-testid={RefineButtonTestIds.ExportButton}\n            className={RefineButtonClassNames.ExportButton}\n            {...rest}\n        >\n            {children ?? translate(\"buttons.export\", \"Export\")}\n        </Button>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { IconButton, Button } from \"@chakra-ui/react\";\nimport { IconDeviceFloppy } from \"@tabler/icons\";\n\nimport { SaveButtonProps } from \"../types\";\n\n/**\n * `<SaveButton>` uses Chakra UI {@link https://chakra-ui.com/docs/components/button `<Button> `}.\n * It uses it for presantation purposes only. Some of the hooks that refine has adds features to this button.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/buttons/save-button} for more details.\n */\nexport const SaveButton: React.FC<SaveButtonProps> = ({\n    hideText = false,\n    svgIconProps,\n    children,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    return hideText ? (\n        <IconButton\n            colorScheme=\"green\"\n            aria-label={translate(\"buttons.save\", \"Save\")}\n            data-testid={RefineButtonTestIds.SaveButton}\n            className={RefineButtonClassNames.SaveButton}\n            {...rest}\n        >\n            <IconDeviceFloppy size={20} {...svgIconProps} />\n        </IconButton>\n    ) : (\n        <Button\n            colorScheme=\"green\"\n            leftIcon={<IconDeviceFloppy size={20} {...svgIconProps} />}\n            data-testid={RefineButtonTestIds.SaveButton}\n            className={RefineButtonClassNames.SaveButton}\n            {...rest}\n        >\n            {children ?? translate(\"buttons.save\", \"Save\")}\n        </Button>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { Button, IconButton } from \"@chakra-ui/react\";\nimport { IconSquarePlus } from \"@tabler/icons\";\n\nimport { CloneButtonProps } from \"../types\";\n\n/**\n * `<CloneButton>` uses Chakra UI {@link https://chakra-ui.com/docs/components/button `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#clone `clone`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation useNavigation} under the hood.\n * It can be useful when redirecting the app to the create page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/buttons/clone-button} for more details.\n *\n */\nexport const CloneButton: React.FC<CloneButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const { cloneUrl: generateCloneUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const translate = useTranslate();\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"create\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const cloneUrl =\n        resource && (recordItemId || id)\n            ? generateCloneUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={cloneUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            {hideText ? (\n                <IconButton\n                    variant=\"outline\"\n                    aria-label={translate(\"buttons.clone\", \"Clone\")}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.CloneButton}\n                    className={RefineButtonClassNames.CloneButton}\n                    {...rest}\n                >\n                    <IconSquarePlus size={20} {...svgIconProps} />\n                </IconButton>\n            ) : (\n                <Button\n                    variant=\"outline\"\n                    isDisabled={data?.can === false}\n                    leftIcon={<IconSquarePlus size={20} {...svgIconProps} />}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.CloneButton}\n                    className={RefineButtonClassNames.CloneButton}\n                    {...rest}\n                >\n                    {children ?? translate(\"buttons.clone\", \"Clone\")}\n                </Button>\n            )}\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { IconButton, Button } from \"@chakra-ui/react\";\nimport { IconFileImport } from \"@tabler/icons\";\n\nimport { ImportButtonProps } from \"../types\";\n\n/**\n * `<ImportButton>` is compatible with the {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useImport/ `useImport`} core hook.\n * It uses uses Chakra UI {@link https://chakra-ui.com/docs/components/button `<Button> component`} and native html {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input  `<input>`} element.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/buttons/import-button} for more details.\n */\nexport const ImportButton: React.FC<ImportButtonProps> = ({\n    inputProps,\n    hideText = false,\n    loading = false,\n    svgIconProps,\n    children,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    return (\n        <label htmlFor=\"contained-button-file\">\n            <input {...inputProps} id=\"contained-button-file\" multiple hidden />\n            {hideText ? (\n                <IconButton\n                    variant=\"outline\"\n                    as=\"span\"\n                    aria-label={translate(\"buttons.import\", \"Import\")}\n                    isLoading={loading}\n                    data-testid={RefineButtonTestIds.ImportButton}\n                    className={RefineButtonClassNames.ImportButton}\n                    {...rest}\n                >\n                    <IconFileImport size={20} {...svgIconProps} />\n                </IconButton>\n            ) : (\n                <Button\n                    variant=\"outline\"\n                    as=\"span\"\n                    leftIcon={<IconFileImport size={20} {...svgIconProps} />}\n                    isLoading={loading}\n                    data-testid={RefineButtonTestIds.ImportButton}\n                    className={RefineButtonClassNames.ImportButton}\n                    {...rest}\n                >\n                    {children ?? translate(\"buttons.import\", \"Import\")}\n                </Button>\n            )}\n        </label>\n    );\n};\n","import React from \"react\";\nimport { Text } from \"@chakra-ui/react\";\n\nimport { TextFieldProps } from \"../types\";\n\n/**\n * This field lets you show basic text. It uses Chakra UI {@link https://chakra-ui.com/docs/components/text  `<Text>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/fields/text} for more details.\n */\nexport const TextField: React.FC<TextFieldProps> = ({ value, ...rest }) => {\n    return <Text {...rest}>{value}</Text>;\n};\n","import React from \"react\";\nimport { Tag } from \"@chakra-ui/react\";\n\nimport { TagFieldProps } from \"../types\";\n\n/**\n * This field lets you display a value in a tag. It uses Chakra UI {@link https://chakra-ui.com/docs/components/tag `<Tag>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/fields/tag} for more details.\n */\nexport const TagField: React.FC<TagFieldProps> = ({ value, ...rest }) => {\n    return <Tag {...rest}>{value?.toString()}</Tag>;\n};\n","import React from \"react\";\nimport { Link } from \"@chakra-ui/react\";\n\nimport { EmailFieldProps } from \"../types\";\n\n/**\n * This field is used to display email values. It uses the {@link https://chakra-ui.com/docs/components/text  `<Text>` }\n * and {@link https://chakra-ui.com/docs/components/link/usage <Link>`} components from Chakra UI.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/fields/email} for more details.\n */\nexport const EmailField: React.FC<EmailFieldProps> = ({ value, ...rest }) => {\n    return (\n        <Link href={`mailto:${value}`} {...rest}>\n            {value}\n        </Link>\n    );\n};\n","import React from \"react\";\nimport { Tooltip } from \"@chakra-ui/react\";\nimport { IconMinus, IconCheck } from \"@tabler/icons\";\n\nimport { BooleanFieldProps } from \"../types\";\n\n/**\n * This field is used to display boolean values. It uses the {@link https://chakra-ui.com/docs/components/tooltip `<Tooltip>`} values from Chakra UI.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/fields/boolean} for more details.\n */\nexport const BooleanField: React.FC<BooleanFieldProps> = ({\n    value,\n    valueLabelTrue = \"true\",\n    valueLabelFalse = \"false\",\n    trueIcon,\n    falseIcon,\n    svgIconProps,\n    ...rest\n}) => {\n    return (\n        <Tooltip label={value ? valueLabelTrue : valueLabelFalse} {...rest}>\n            <span>\n                {value\n                    ? trueIcon ?? <IconCheck size={20} {...svgIconProps} />\n                    : falseIcon ?? <IconMinus size={20} {...svgIconProps} />}\n            </span>\n        </Tooltip>\n    );\n};\n","import React from \"react\";\n\nimport dayjs from \"dayjs\";\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\n\nimport { Text } from \"@chakra-ui/react\";\n\ndayjs.extend(LocalizedFormat);\n\nconst defaultLocale = dayjs.locale();\n\nimport { DateFieldProps } from \"../types\";\n\n/**\n * This field is used to display dates. It uses {@link https://day.js.org/docs/en/display/format `Day.js`} to display date format and\n * Chakra UI {@link https://chakra-ui.com/docs/components/text `<Text>`} component\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/fields/date} for more details.\n */\nexport const DateField: React.FC<DateFieldProps> = ({\n    value,\n    locales,\n    format: dateFormat = \"L\",\n    ...rest\n}) => {\n    return (\n        <Text {...rest}>\n            {dayjs(value)\n                .locale(locales || defaultLocale)\n                .format(dateFormat)}\n        </Text>\n    );\n};\n","import React from \"react\";\n\nimport { UrlField } from \"@components\";\n\nimport { FileFieldProps } from \"../types\";\n\nexport const FileField: React.FC<FileFieldProps> = ({\n    title,\n    src,\n    ...rest\n}) => {\n    return (\n        <UrlField value={src} title={title} {...rest}>\n            {title ?? src}\n        </UrlField>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"@chakra-ui/react\";\n\nimport { UrlFieldProps } from \"../types\";\n\n/**\n * This field is used to display email values. It uses the {@link https://chakra-ui.com/docs/components/text  `<Text>` } component from Chakra UI.\n * You can pass a URL in its `value` property and you can show a text in its place by passing any `children`.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/fields/url} for more details.\n */\nexport const UrlField: React.FC<UrlFieldProps> = ({\n    children,\n    value,\n    title,\n    ...rest\n}) => {\n    return (\n        <Link href={value} title={title} {...rest}>\n            {children ?? value}\n        </Link>\n    );\n};\n","import React from \"react\";\nimport { Text } from \"@chakra-ui/react\";\n\nimport { NumberFieldProps } from \"../types\";\n\nfunction toLocaleStringSupportsOptions() {\n    return !!(\n        typeof Intl == \"object\" &&\n        Intl &&\n        typeof Intl.NumberFormat == \"function\"\n    );\n}\n/**\n * This field is used to display a number formatted according to the browser locale, right aligned. and uses {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl `Intl`} to display date format\n * and Chakra UI {@link https://chakra-ui.com/docs/components/text  `<Text>`} component.\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/fields/number} for more details.\n */\nexport const NumberField: React.FC<NumberFieldProps> = ({\n    value,\n    locale,\n    options,\n    ...rest\n}) => {\n    const number = Number(value);\n\n    return (\n        <Text {...rest}>\n            {toLocaleStringSupportsOptions()\n                ? number.toLocaleString(locale, options)\n                : number}\n        </Text>\n    );\n};\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\n\nimport { MarkdownFieldProps } from \"../types\";\n\n/**\n * This field lets you display markdown content. It supports {@link https://github.github.com/gfm/ GitHub Flavored Markdown}.\n *\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/fields/markdown} for more details.\n */\nexport const MarkdownField: React.FC<MarkdownFieldProps> = ({ value = \"\" }) => {\n    return <ReactMarkdown plugins={[gfm]}>{value}</ReactMarkdown>;\n};\n","import * as React from \"react\";\nimport { RefineReadyPageProps } from \"@refinedev/ui-types\";\nimport {\n    Box,\n    Code,\n    Heading,\n    Text,\n    Button,\n    Link,\n    Image,\n} from \"@chakra-ui/react\";\n\n/**\n * @deprecated `ReadyPage` is deprecated and will be removed in the next major release.\n */\nexport const ReadyPage: React.FC<RefineReadyPageProps> = () => {\n    return (\n        <Box\n            p=\"4\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            minH=\"100vh\"\n            bg=\"sider.background\"\n            bgImage=\"https://refine.ams3.cdn.digitaloceanspaces.com/login-background/background.png\"\n        >\n            <Image\n                mb=\"8\"\n                src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                alt=\"Refine Logo\"\n            />\n\n            <Heading mb=\"6\" as=\"h1\" size=\"3xl\" color=\"white\" textAlign=\"center\">\n                Welcome on board\n            </Heading>\n            <Heading as=\"h3\" size=\"md\" color=\"white\" mb=\"6\" textAlign=\"center\">\n                Your configuration is completed.\n            </Heading>\n            <Text mb=\"8\" fontSize=\"xl\" color=\"white\" textAlign=\"center\">\n                Now you can get started by adding your resources to the{\" \"}\n                <Code>resources</Code> property of <Code>Refine</Code>\n            </Text>\n\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\" gap=\"3\">\n                <Button\n                    as={Link}\n                    href=\"https://refine.dev\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    colorScheme=\"white\"\n                    color=\"white\"\n                    variant=\"outline\"\n                    minW=\"150px\"\n                >\n                    Documentation\n                </Button>\n                <Button\n                    as={Link}\n                    href=\"https://refine.dev/examples\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    colorScheme=\"white\"\n                    color=\"white\"\n                    variant=\"outline\"\n                    minW=\"150px\"\n                >\n                    Examples\n                </Button>\n                <Button\n                    as={Link}\n                    href=\"https://discord.gg/refine\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    colorScheme=\"white\"\n                    color=\"white\"\n                    variant=\"outline\"\n                    minW=\"150px\"\n                >\n                    Community\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n","import React from \"react\";\nimport { WelcomePage as WelcomePageFromCore } from \"@refinedev/core\";\n\n/**\n * It is a page that welcomes you after the configuration is completed.\n * @deprecated `WelcomePage` is deprecated. Use `WelcomePage` from `@refinedev/core` instead.\n */\nexport const WelcomePage: React.FC = () => {\n    return <WelcomePageFromCore />;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { RefineErrorPageProps } from \"@refinedev/ui-types\";\nimport {\n    useGo,\n    useResource,\n    useRouterType,\n    useTranslate,\n    useNavigation,\n} from \"@refinedev/core\";\nimport {\n    Box,\n    Heading,\n    Text,\n    Tooltip,\n    IconButton,\n    Button,\n    useColorModeValue,\n    Stack,\n} from \"@chakra-ui/react\";\nimport { IconInfoCircle } from \"@tabler/icons\";\n\nexport const ErrorComponent: React.FC<RefineErrorPageProps> = () => {\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const translate = useTranslate();\n    const { push } = useNavigation();\n    const go = useGo();\n    const routerType = useRouterType();\n\n    const { resource, action } = useResource();\n\n    useEffect(() => {\n        if (resource && action) {\n            setErrorMessage(\n                translate(\n                    \"pages.error.info\",\n                    {\n                        action,\n                        resource: resource?.name,\n                    },\n                    `You may have forgotten to add the \"${action}\" component to \"${resource?.name}\" resource.`,\n                ),\n            );\n        }\n    }, [resource, action]);\n\n    const color = useColorModeValue(\"gray.500\", \"gray.400\");\n\n    return (\n        <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            minH=\"calc(100vh - 150px)\"\n        >\n            <Heading fontWeight={900} fontSize={[120, 160, 220]} color={color}>\n                404\n            </Heading>\n            <Stack\n                direction={[\"column\", \"row\"]}\n                alignItems=\"center\"\n                spacing={2}\n            >\n                <Text color={color} fontSize=\"xl\" align=\"center\">\n                    {translate(\n                        \"pages.error.404\",\n                        \"Sorry, the page you visited does not exist.\",\n                    )}\n                </Text>\n                {errorMessage && (\n                    <Tooltip openDelay={0} label={errorMessage}>\n                        <IconButton\n                            aria-label=\"info\"\n                            color={color}\n                            data-testid=\"error-component-tooltip\"\n                        >\n                            <IconInfoCircle />\n                        </IconButton>\n                    </Tooltip>\n                )}\n            </Stack>\n            <Button\n                mt={6}\n                variant=\"outline\"\n                onClick={() => {\n                    if (routerType === \"legacy\") {\n                        push(\"/\");\n                    } else {\n                        go({ to: \"/\" });\n                    }\n                }}\n            >\n                {translate(\"pages.error.backHome\", \"Back Home\")}\n            </Button>\n        </Box>\n    );\n};\n","import React from \"react\";\nimport { AuthPageProps } from \"@refinedev/core\";\nimport {\n    LoginPage,\n    RegisterPage,\n    ForgotPasswordPage,\n    UpdatePasswordPage,\n} from \"./components\";\nimport { BoxProps } from \"@chakra-ui/react\";\nimport { UseFormProps } from \"@refinedev/react-hook-form\";\n\nexport interface FormPropsType<TFormType> extends UseFormProps {\n    onSubmit?: (values: TFormType) => void;\n}\n\nexport type AuthProps = AuthPageProps<BoxProps, BoxProps, FormPropsType<any>>;\n\n/**\n * **refine** has a default auth page form which is served on `/login` route when the `authProvider` configuration is provided.\n * @param title is not implemented yet.\n * @see {@link https://refine.dev/docs/api-reference/chakra-ui/components/chakra-auth-page/} for more details.\n */\nexport const AuthPage: React.FC<AuthProps> = (props) => {\n    const { type } = props;\n    const renderView = () => {\n        switch (type) {\n            case \"register\":\n                return <RegisterPage {...props} />;\n            case \"forgotPassword\":\n                return <ForgotPasswordPage {...props} />;\n            case \"updatePassword\":\n                return <UpdatePasswordPage {...props} />;\n            default:\n                return <LoginPage {...props} />;\n        }\n    };\n\n    return <>{renderView()}</>;\n};\n","import React from \"react\";\nimport {\n    LoginPageProps,\n    LoginFormTypes,\n    useRouterType,\n    useLink,\n    useRouterContext,\n    useLogin,\n    useTranslate,\n    BaseRecord,\n    HttpError,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport {\n    Box,\n    Heading,\n    BoxProps,\n    VStack,\n    Button,\n    Divider,\n    FormControl,\n    FormLabel,\n    Input,\n    Link as ChakraLink,\n    FormErrorMessage,\n    HStack,\n    Checkbox,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useForm } from \"@refinedev/react-hook-form\";\nimport { FormProvider } from \"react-hook-form\";\n\nimport { layoutProps, cardProps } from \"../styles\";\nimport { FormPropsType } from \"../..\";\nimport { ThemedTitle } from \"@components\";\n\ntype LoginProps = LoginPageProps<\n    BoxProps,\n    BoxProps,\n    FormPropsType<LoginFormTypes>\n>;\n\nexport const LoginPage: React.FC<LoginProps> = ({\n    providers,\n    registerLink,\n    forgotPasswordLink,\n    rememberMe,\n    contentProps,\n    wrapperProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login } = useLogin<LoginFormTypes>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n    const methods = useForm<BaseRecord, HttpError, LoginFormTypes>({\n        ...useFormProps,\n    });\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = methods;\n\n    const renderProviders = () => {\n        if (providers && providers.length > 0) {\n            return (\n                <>\n                    <VStack>\n                        {providers.map((provider) => (\n                            <Button\n                                key={provider.name}\n                                variant=\"outline\"\n                                width=\"full\"\n                                leftIcon={<>{provider?.icon}</>}\n                                fontSize=\"sm\"\n                                onClick={() =>\n                                    login({\n                                        providerName: provider.name,\n                                    })\n                                }\n                            >\n                                {provider.label ?? (\n                                    <label>{provider.label}</label>\n                                )}\n                            </Button>\n                        ))}\n                    </VStack>\n                    <Divider my=\"6\" />\n                </>\n            );\n        }\n        return null;\n    };\n\n    const importantTextColor = useColorModeValue(\"brand.500\", \"brand.200\");\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? <ThemedTitle collapsed={false} />}\n            </div>\n        );\n\n    const allContentProps = { ...cardProps, ...contentProps };\n    const content = (\n        <Box\n            bg=\"chakra-body-bg\"\n            borderWidth=\"1px\"\n            borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n            backgroundColor={useColorModeValue(\"white\", \"gray.800\")}\n            {...allContentProps}\n        >\n            <Heading\n                mb=\"8\"\n                textAlign=\"center\"\n                fontSize=\"2xl\"\n                color={importantTextColor}\n            >\n                {translate(\"pages.login.title\", \"Sign in to your account\")}\n            </Heading>\n            {renderProviders()}\n            <form\n                onSubmit={handleSubmit((data) => {\n                    if (onSubmit) {\n                        return onSubmit(data);\n                    }\n\n                    return login(data);\n                })}\n            >\n                <FormControl mt=\"6\" isInvalid={!!errors?.email}>\n                    <FormLabel htmlFor=\"email\">\n                        {translate(\"pages.login.fields.email\", \"Email\")}\n                    </FormLabel>\n                    <Input\n                        id=\"email\"\n                        placeholder=\"Email\"\n                        type=\"text\"\n                        {...register(\"email\", {\n                            required: true,\n                            pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                message: translate(\n                                    \"pages.login.errors.validEmail\",\n                                    \"Invalid email address\",\n                                ),\n                            },\n                        })}\n                    />\n                    <FormErrorMessage>\n                        {`${errors.email?.message}`}\n                    </FormErrorMessage>\n                </FormControl>\n\n                <FormControl mt=\"6\" isInvalid={!!errors?.password}>\n                    <FormLabel htmlFor=\"password\">\n                        {translate(\"pages.login.fields.password\", \"Password\")}\n                    </FormLabel>\n                    <Input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        {...register(\"password\", {\n                            required: true,\n                        })}\n                    />\n                    <FormErrorMessage>\n                        {`${errors.password?.message}`}\n                    </FormErrorMessage>\n                </FormControl>\n\n                {rememberMe ?? (\n                    <Checkbox {...register(\"remember\")} mt=\"6\">\n                        {translate(\n                            \"pages.login.buttons.rememberMe\",\n                            \"Remember me\",\n                        )}\n                    </Checkbox>\n                )}\n\n                <Button mt=\"6\" type=\"submit\" width=\"full\" colorScheme=\"brand\">\n                    {translate(\"pages.login.signin\", \"Sign in\")}\n                </Button>\n\n                <Box mt=\"6\">\n                    <HStack justifyContent=\"space-between\" fontSize=\"12px\">\n                        {forgotPasswordLink ?? (\n                            <ChakraLink\n                                as={Link}\n                                color={importantTextColor}\n                                to=\"/forgot-password\"\n                            >\n                                {translate(\n                                    \"pages.login.buttons.forgotPassword\",\n                                    \"Forgot password?\",\n                                )}\n                            </ChakraLink>\n                        )}\n                        {registerLink ?? (\n                            <Box>\n                                <span>\n                                    {translate(\n                                        \"pages.login.buttons.noAccount\",\n                                        \"Don’t have an account?\",\n                                    )}\n                                </span>\n                                <ChakraLink\n                                    color={importantTextColor}\n                                    ml=\"1\"\n                                    as={Link}\n                                    fontWeight=\"bold\"\n                                    to=\"/register\"\n                                >\n                                    {translate(\n                                        \"pages.login.register\",\n                                        \"Sign up\",\n                                    )}\n                                </ChakraLink>\n                            </Box>\n                        )}\n                    </HStack>\n                </Box>\n            </form>\n        </Box>\n    );\n\n    const allWrapperProps = { ...layoutProps, ...wrapperProps };\n    return (\n        <FormProvider {...methods}>\n            <Box {...allWrapperProps}>\n                {renderContent ? (\n                    renderContent(content, PageTitle)\n                ) : (\n                    <>\n                        {PageTitle}\n                        {content}\n                    </>\n                )}\n            </Box>\n        </FormProvider>\n    );\n};\n","import { BoxProps } from \"@chakra-ui/react\";\n\nexport const layoutProps: BoxProps = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundSize: \"cover\",\n    minHeight: \"100vh\",\n};\n\nexport const cardProps: BoxProps = {\n    width: \"400px\",\n    borderRadius: \"12px\",\n    padding: \"32px\",\n};\n\nexport const titleProps: BoxProps = {\n    textAlign: \"center\",\n    fontSize: \"24px\",\n};\n","import React from \"react\";\nimport {\n    useTranslate,\n    useRouterType,\n    useLink,\n    useRouterContext,\n    useRegister,\n    RegisterPageProps,\n    RegisterFormTypes,\n    BaseRecord,\n    HttpError,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport {\n    Box,\n    BoxProps,\n    Button,\n    Divider,\n    FormControl,\n    FormErrorMessage,\n    FormLabel,\n    Heading,\n    Input,\n    VStack,\n    Link as ChakraLink,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useForm } from \"@refinedev/react-hook-form\";\n\nimport { layoutProps, cardProps } from \"../styles\";\nimport { FormPropsType } from \"../..\";\nimport { ThemedTitle } from \"@components\";\n\ntype RegisterProps = RegisterPageProps<\n    BoxProps,\n    BoxProps,\n    FormPropsType<RegisterFormTypes>\n>;\n\nexport const RegisterPage: React.FC<RegisterProps> = ({\n    providers,\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate } = useRegister({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, RegisterFormTypes>({\n        ...useFormProps,\n    });\n\n    const renderProviders = () => {\n        if (providers && providers.length > 0) {\n            return (\n                <>\n                    <VStack>\n                        {providers.map((provider) => (\n                            <Button\n                                key={provider.name}\n                                variant=\"outline\"\n                                fontSize=\"sm\"\n                                width=\"full\"\n                                leftIcon={<>{provider?.icon}</>}\n                                onClick={() =>\n                                    mutate({\n                                        providerName: provider.name,\n                                    })\n                                }\n                            >\n                                {provider.label ?? (\n                                    <label>{provider.label}</label>\n                                )}\n                            </Button>\n                        ))}\n                    </VStack>\n                    <Divider my=\"6\" />\n                </>\n            );\n        }\n        return null;\n    };\n\n    const importantTextColor = useColorModeValue(\"brand.500\", \"brand.200\");\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? <ThemedTitle collapsed={false} />}\n            </div>\n        );\n\n    const allContentProps = { ...cardProps, ...contentProps };\n    const content = (\n        <Box\n            bg=\"chakra-body-bg\"\n            borderWidth=\"1px\"\n            borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n            backgroundColor={useColorModeValue(\"white\", \"gray.800\")}\n            {...allContentProps}\n        >\n            <Heading\n                mb=\"8\"\n                textAlign=\"center\"\n                fontSize=\"2xl\"\n                color={importantTextColor}\n            >\n                {translate(\"pages.register.title\", \"Sign up for your account\")}\n            </Heading>\n            {renderProviders()}\n            <form\n                onSubmit={handleSubmit((data) => {\n                    if (onSubmit) {\n                        return onSubmit(data);\n                    }\n\n                    return mutate(data);\n                })}\n            >\n                <FormControl mt=\"6\" isInvalid={!!errors?.email}>\n                    <FormLabel htmlFor=\"email\">\n                        {translate(\"pages.register.fields.email\", \"Email\")}\n                    </FormLabel>\n                    <Input\n                        id=\"email\"\n                        type=\"text\"\n                        placeholder=\"Email\"\n                        {...register(\"email\", {\n                            required: true,\n                            pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                message: translate(\n                                    \"pages.register.errors.validEmail\",\n                                    \"Invalid email address\",\n                                ),\n                            },\n                        })}\n                    />\n                    <FormErrorMessage>\n                        {`${errors.email?.message}`}\n                    </FormErrorMessage>\n                </FormControl>\n\n                <FormControl mt=\"6\" isInvalid={!!errors?.password}>\n                    <FormLabel htmlFor=\"password\">\n                        {translate(\n                            \"pages.register.fields.password\",\n                            \"Password\",\n                        )}\n                    </FormLabel>\n                    <Input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        {...register(\"password\", {\n                            required: true,\n                        })}\n                    />\n                    <FormErrorMessage>\n                        {`${errors.password?.message}`}\n                    </FormErrorMessage>\n                </FormControl>\n\n                <Button mt=\"6\" type=\"submit\" width=\"full\" colorScheme=\"brand\">\n                    {translate(\"pages.register.buttons.submit\", \"Sign up\")}\n                </Button>\n\n                {loginLink ?? (\n                    <Box\n                        display=\"flex\"\n                        justifyContent=\"flex-end\"\n                        mt=\"6\"\n                        fontSize=\"12px\"\n                    >\n                        <span>\n                            {translate(\n                                \"pages.login.buttons.haveAccount\",\n                                \"Have an account?\",\n                            )}\n                        </span>\n                        <ChakraLink\n                            color={importantTextColor}\n                            ml=\"1\"\n                            fontWeight=\"bold\"\n                            as={Link}\n                            to=\"/login\"\n                        >\n                            {translate(\"pages.login.signin\", \"Sign in\")}\n                        </ChakraLink>\n                    </Box>\n                )}\n            </form>\n        </Box>\n    );\n\n    const allWrapperProps = { ...layoutProps, ...wrapperProps };\n    return (\n        <Box {...allWrapperProps}>\n            {renderContent ? (\n                renderContent(content, PageTitle)\n            ) : (\n                <>\n                    {PageTitle}\n                    {content}\n                </>\n            )}\n        </Box>\n    );\n};\n","import React from \"react\";\nimport {\n    useTranslate,\n    useLink,\n    useRouterType,\n    useRouterContext,\n    useForgotPassword,\n    ForgotPasswordFormTypes,\n    ForgotPasswordPageProps,\n    BaseRecord,\n    HttpError,\n} from \"@refinedev/core\";\nimport {\n    Box,\n    BoxProps,\n    Button,\n    FormControl,\n    FormErrorMessage,\n    FormLabel,\n    Heading,\n    Input,\n    Link as ChakraLink,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useForm } from \"@refinedev/react-hook-form\";\n\nimport { layoutProps, cardProps } from \"../styles\";\nimport { FormPropsType } from \"../..\";\nimport { ThemedTitle } from \"@components\";\n\ntype ForgotPasswordProps = ForgotPasswordPageProps<\n    BoxProps,\n    BoxProps,\n    FormPropsType<ForgotPasswordFormTypes>\n>;\n\nexport const ForgotPasswordPage: React.FC<ForgotPasswordProps> = ({\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const { mutate } = useForgotPassword<ForgotPasswordFormTypes>();\n    const translate = useTranslate();\n\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n\n    const {\n        handleSubmit,\n        register,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, ForgotPasswordFormTypes>({\n        ...useFormProps,\n    });\n\n    const importantTextColor = useColorModeValue(\"brand.500\", \"brand.200\");\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? <ThemedTitle collapsed={false} />}\n            </div>\n        );\n\n    const allContentProps = { ...cardProps, ...contentProps };\n    const content = (\n        <Box\n            bg=\"chakra-body-bg\"\n            borderWidth=\"1px\"\n            borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n            backgroundColor={useColorModeValue(\"white\", \"gray.800\")}\n            {...allContentProps}\n        >\n            <Heading\n                mb=\"8\"\n                textAlign=\"center\"\n                fontSize=\"2xl\"\n                color={importantTextColor}\n            >\n                {translate(\n                    \"pages.forgotPassword.title\",\n                    \"Forgot your password?\",\n                )}\n            </Heading>\n\n            <form\n                onSubmit={handleSubmit((data) => {\n                    if (onSubmit) {\n                        return onSubmit(data);\n                    }\n\n                    return mutate(data);\n                })}\n            >\n                <FormControl mb=\"3\" isInvalid={!!errors?.email}>\n                    <FormLabel htmlFor=\"email\">\n                        {translate(\n                            \"pages.forgotPassword.fields.email\",\n                            \"Email\",\n                        )}\n                    </FormLabel>\n                    <Input\n                        id=\"email\"\n                        type=\"text\"\n                        {...register(\"email\", {\n                            required: true,\n                            pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                message: translate(\n                                    \"pages.login.errors.validEmail\",\n                                    \"Invalid email address\",\n                                ),\n                            },\n                        })}\n                    />\n                    <FormErrorMessage>\n                        {`${errors.email?.message}`}\n                    </FormErrorMessage>\n                </FormControl>\n\n                {loginLink ?? (\n                    <Box my=\"6\" display=\"flex\" justifyContent=\"flex-end\">\n                        <span>\n                            {translate(\n                                \"pages.register.buttons.haveAccount\",\n                                \"Have an account?\",\n                            )}\n                        </span>\n                        <ChakraLink\n                            color={importantTextColor}\n                            ml=\"1\"\n                            as={Link}\n                            to=\"/login\"\n                        >\n                            {translate(\"pages.login.signin\", \"Sign in\")}\n                        </ChakraLink>\n                    </Box>\n                )}\n\n                <Button mb=\"3\" type=\"submit\" width=\"full\" colorScheme=\"brand\">\n                    {translate(\n                        \"pages.forgotPassword.buttons.submit\",\n                        \"Send reset instructions\",\n                    )}\n                </Button>\n            </form>\n        </Box>\n    );\n\n    const allWrapperProps = { ...layoutProps, ...wrapperProps };\n    return (\n        <Box {...allWrapperProps}>\n            {renderContent ? (\n                renderContent(content, PageTitle)\n            ) : (\n                <>\n                    {PageTitle}\n                    {content}\n                </>\n            )}\n        </Box>\n    );\n};\n","import React from \"react\";\nimport {\n    useTranslate,\n    useUpdatePassword,\n    UpdatePasswordFormTypes,\n    UpdatePasswordPageProps,\n    BaseRecord,\n    HttpError,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport {\n    Box,\n    BoxProps,\n    Button,\n    FormControl,\n    FormErrorMessage,\n    FormLabel,\n    Heading,\n    Input,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useForm } from \"@refinedev/react-hook-form\";\n\nimport { layoutProps, cardProps } from \"../styles\";\nimport { FormPropsType } from \"../..\";\nimport { ThemedTitle } from \"@components\";\n\ntype UpdatePasswordProps = UpdatePasswordPageProps<\n    BoxProps,\n    BoxProps,\n    FormPropsType<UpdatePasswordFormTypes>\n>;\n\nexport const UpdatePasswordPage: React.FC<UpdatePasswordProps> = ({\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate } = useUpdatePassword<UpdatePasswordFormTypes>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const {\n        register,\n        watch,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, UpdatePasswordFormTypes>({\n        ...useFormProps,\n    });\n\n    const importantTextColor = useColorModeValue(\"brand.500\", \"brand.200\");\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? <ThemedTitle collapsed={false} />}\n            </div>\n        );\n\n    const allContentProps = { ...cardProps, ...contentProps };\n    const content = (\n        <Box\n            bg=\"chakra-body-bg\"\n            borderWidth=\"1px\"\n            borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n            backgroundColor={useColorModeValue(\"white\", \"gray.800\")}\n            {...allContentProps}\n        >\n            <Heading\n                mb=\"8\"\n                textAlign=\"center\"\n                fontSize=\"2xl\"\n                color={importantTextColor}\n            >\n                {translate(\"pages.updatePassword.title\", \"Set New Password\")}\n            </Heading>\n            <form\n                onSubmit={handleSubmit((data) => {\n                    if (onSubmit) {\n                        return onSubmit(data);\n                    }\n\n                    return mutate(data);\n                })}\n            >\n                <FormControl mb=\"3\" isInvalid={!!errors?.password}>\n                    <FormLabel htmlFor=\"password\">\n                        {translate(\n                            \"pages.updatePassword.fields.password\",\n                            \"New Password\",\n                        )}\n                    </FormLabel>\n                    <Input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        {...register(\"password\", {\n                            required: true,\n                        })}\n                    />\n                    <FormErrorMessage>\n                        {`${errors.password?.message}`}\n                    </FormErrorMessage>\n                </FormControl>\n\n                <FormControl mb=\"3\" isInvalid={!!errors?.confirmPassword}>\n                    <FormLabel htmlFor=\"confirmPassword\">\n                        {translate(\n                            \"pages.updatePassword.fields.confirmPassword\",\n                            \"Confirm New Password\",\n                        )}\n                    </FormLabel>\n                    <Input\n                        id=\"confirmPassword\"\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        {...register(\"confirmPassword\", {\n                            required: true,\n                            validate: (val: any) => {\n                                if (watch(\"password\") != val) {\n                                    return translate(\n                                        \"pages.updatePassword.errors.confirmPasswordNotMatch\",\n                                        \"Passwords do not match\",\n                                    );\n                                }\n                                return;\n                            },\n                        })}\n                    />\n                    <FormErrorMessage>\n                        {`${errors.confirmPassword?.message}`}\n                    </FormErrorMessage>\n                </FormControl>\n\n                <Button mt=\"6\" type=\"submit\" width=\"full\" colorScheme=\"brand\">\n                    {translate(\"pages.updatePassword.buttons.submit\", \"Update\")}\n                </Button>\n            </form>\n        </Box>\n    );\n\n    const allWrapperProps = { ...layoutProps, ...wrapperProps };\n    return (\n        <Box {...allWrapperProps}>\n            {renderContent ? (\n                renderContent(content, PageTitle)\n            ) : (\n                <>\n                    {PageTitle}\n                    {content}\n                </>\n            )}\n        </Box>\n    );\n};\n","import React from \"react\";\nimport {\n    matchResourceFromRoute,\n    useBreadcrumb,\n    useLink,\n    useRefineContext,\n    useResource,\n    useRouterContext,\n    useRouterType,\n} from \"@refinedev/core\";\nimport { RefineBreadcrumbProps } from \"@refinedev/ui-types\";\nimport {\n    Breadcrumb as ChakraBreadcrumb,\n    BreadcrumbProps as ChakraBreadcrumbProps,\n    BreadcrumbItem,\n    BreadcrumbLink,\n} from \"@chakra-ui/react\";\nimport { IconHome } from \"@tabler/icons\";\n\nexport type BreadcrumbProps = RefineBreadcrumbProps<ChakraBreadcrumbProps>;\n\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({\n    breadcrumbProps,\n    showHome = true,\n    hideIcons = false,\n    meta,\n}) => {\n    const routerType = useRouterType();\n    const { breadcrumbs } = useBreadcrumb({ meta });\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const { hasDashboard } = useRefineContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    if (breadcrumbs.length === 1) {\n        return null;\n    }\n\n    const { resources } = useResource();\n\n    const rootRouteResource = matchResourceFromRoute(\"/\", resources);\n\n    return (\n        <ChakraBreadcrumb mb=\"3\" {...breadcrumbProps}>\n            {showHome && (hasDashboard || rootRouteResource?.found) && (\n                <BreadcrumbItem>\n                    <ActiveLink to=\"/\">\n                        {rootRouteResource?.resource?.meta?.icon ?? (\n                            <IconHome size={20} />\n                        )}\n                    </ActiveLink>\n                </BreadcrumbItem>\n            )}\n            {breadcrumbs.map(({ label, icon, href }) => {\n                return (\n                    <BreadcrumbItem key={label}>\n                        {!hideIcons && icon}\n                        {href ? (\n                            <BreadcrumbLink\n                                ml={2}\n                                as={ActiveLink}\n                                to={href}\n                                href={href}\n                            >\n                                {label}\n                            </BreadcrumbLink>\n                        ) : (\n                            <BreadcrumbLink ml={2}>{label}</BreadcrumbLink>\n                        )}\n                    </BreadcrumbItem>\n                );\n            })}\n        </ChakraBreadcrumb>\n    );\n};\n","import React from \"react\";\nimport { OpenNotificationParams } from \"@refinedev/core\";\nimport {\n    Box,\n    CircularProgress,\n    CircularProgressLabel,\n    IconButton,\n    Text,\n    useToast,\n} from \"@chakra-ui/react\";\nimport { IconRotate2 } from \"@tabler/icons\";\n\nexport type UndoableNotificationProps = {\n    notificationKey: OpenNotificationParams[\"key\"];\n    message: OpenNotificationParams[\"message\"];\n    cancelMutation: OpenNotificationParams[\"cancelMutation\"];\n    undoableTimeout: OpenNotificationParams[\"undoableTimeout\"];\n};\n\nexport const UndoableNotification: React.FC<UndoableNotificationProps> = ({\n    notificationKey = \"\",\n    message,\n    cancelMutation,\n    undoableTimeout = 0,\n}) => {\n    const toast = useToast();\n\n    return (\n        <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n            gap={2}\n            bg=\"chakra-body-bg\"\n            shadow=\"md\"\n            minW={320}\n            p={2}\n        >\n            <CircularProgress value={undoableTimeout * 20} color=\"green\">\n                <CircularProgressLabel>{undoableTimeout}</CircularProgressLabel>\n            </CircularProgress>\n            <Text>{message}</Text>\n            <IconButton\n                aria-label=\"undo\"\n                variant=\"outline\"\n                onClick={() => {\n                    cancelMutation?.();\n                    toast.close(notificationKey);\n                }}\n            >\n                <IconRotate2 size={18} />\n            </IconButton>\n        </Box>\n    );\n};\n","import React from \"react\";\nimport {\n    AutoSaveIndicatorProps,\n    useTranslate,\n    AutoSaveIndicator as AutoSaveIndicatorCore,\n} from \"@refinedev/core\";\nimport { Text } from \"@chakra-ui/react\";\nimport {\n    IconDots,\n    IconRefresh,\n    IconCircleCheck,\n    IconExclamationCircle,\n} from \"@tabler/icons\";\n\nexport const AutoSaveIndicator: React.FC<AutoSaveIndicatorProps> = ({\n    status,\n    elements: {\n        success = (\n            <Message\n                key=\"autoSave.success\"\n                defaultMessage=\"saved\"\n                icon={<IconCircleCheck size=\"18px\" />}\n            />\n        ),\n        error = (\n            <Message\n                key=\"autoSave.error\"\n                defaultMessage=\"auto save failure\"\n                icon={<IconExclamationCircle size=\"18px\" />}\n            />\n        ),\n        loading = (\n            <Message\n                key=\"autoSave.loading\"\n                defaultMessage=\"saving...\"\n                icon={<IconRefresh size=\"18px\" />}\n            />\n        ),\n        idle = (\n            <Message\n                key=\"autoSave.idle\"\n                defaultMessage=\"waiting for changes\"\n                icon={<IconDots size=\"18px\" />}\n            />\n        ),\n    } = {},\n}) => {\n    return (\n        <AutoSaveIndicatorCore\n            status={status}\n            elements={{\n                success,\n                error,\n                loading,\n                idle,\n            }}\n        />\n    );\n};\n\nconst Message = ({\n    key,\n    defaultMessage,\n    icon,\n}: {\n    key: string;\n    defaultMessage: string;\n    icon: React.ReactNode;\n}) => {\n    const translate = useTranslate();\n\n    return (\n        <Text\n            display=\"flex\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n            color=\"gray.700\"\n            marginRight=\"2\"\n            fontSize=\"sm\"\n        >\n            {translate(key, defaultMessage)}\n            <span style={{ marginLeft: \"3px\" }}>{icon}</span>\n        </Text>\n    );\n};\n","import {\n    extendTheme,\n    baseTheme,\n    Theme,\n    StyleFunctionProps,\n} from \"@chakra-ui/react\";\nimport { mode } from \"@chakra-ui/theme-tools\";\n\nexport const refineTheme = extendTheme({\n    config: {\n        initialColorMode: \"system\",\n    },\n    fonts: {\n        heading:\n            \"Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'\",\n        body: \"Montserrat, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'\",\n    },\n    styles: {\n        global: () => ({\n            \"html, body\": {\n                fontSize: \"14px\",\n            },\n        }),\n    },\n    colors: {\n        brand: {\n            50: \"#E6FFFA\",\n            100: \"#B2F5EA\",\n            200: \"#81E6D9\",\n            300: \"#4FD1C5\",\n            400: \"#38B2AC\",\n            500: \"#319795\",\n            600: \"#2C7A7B\",\n            700: \"#285E61\",\n            800: \"#234E52\",\n            900: \"#1D4044\",\n        },\n        sider: {\n            background: \"#2A132E\",\n            collapseButton: \"#150A17\",\n        },\n    },\n});\n\nconst refineCustomColors = {\n    header: {\n        bg: {\n            light: baseTheme.colors.white,\n            dark: baseTheme.colors.gray[800],\n        },\n    },\n    sider: {\n        bg: {\n            light: baseTheme.colors.white,\n            dark: baseTheme.colors.gray[800],\n        },\n        header: {\n            light: baseTheme.colors.white,\n            dark: baseTheme.colors.gray[800],\n        },\n    },\n} as const;\n\nconst refineCustomThemes = {\n    Blue: baseTheme.colors.blue,\n    Purple: baseTheme.colors.purple,\n    Magenta: baseTheme.colors.pink,\n    Red: baseTheme.colors.red,\n    Orange: baseTheme.colors.orange,\n    Yellow: baseTheme.colors.yellow,\n    Green: baseTheme.colors.green,\n};\n\nexport interface RefineTheme extends Omit<Theme, \"colors\"> {\n    colors: Theme[\"colors\"] & {\n        brand: {\n            50: string;\n            100: string;\n            200: string;\n            300: string;\n            400: string;\n            500: string;\n            600: string;\n            700: string;\n            800: string;\n            900: string;\n        };\n        refine: typeof refineCustomColors;\n    };\n}\n\nexport const RefineThemes = Object.keys(refineCustomThemes).reduce(\n    (acc, key) => {\n        const themeName = key as keyof typeof refineCustomThemes;\n        return {\n            ...acc,\n            [key]: extendTheme({\n                config: {\n                    initialColorMode: \"system\",\n                },\n\n                styles: {\n                    global: (props: StyleFunctionProps) => {\n                        const bgLight = props.theme.colors.gray[50];\n                        const bgDark = props.theme.colors.gray[900];\n                        return {\n                            \"html, body\": {\n                                background: mode(bgLight, bgDark)(props),\n                            },\n                        };\n                    },\n                },\n\n                colors: {\n                    brand: refineCustomThemes[themeName],\n                    refine: {\n                        ...refineCustomColors,\n                    },\n                },\n            }),\n        };\n    },\n    {},\n) as Record<keyof typeof refineCustomThemes, RefineTheme>;\n","import React from \"react\";\nimport { NotificationProvider } from \"@refinedev/core\";\nimport { useToast } from \"@chakra-ui/react\";\n\nimport { UndoableNotification } from \"@components/undoableNotification\";\n\nexport const notificationProvider = (): NotificationProvider => {\n    const toast = useToast({\n        position: \"top-right\",\n        isClosable: true,\n    });\n\n    return {\n        open: ({\n            key,\n            message,\n            type,\n            description,\n            undoableTimeout,\n            cancelMutation,\n        }) => {\n            if (type === \"progress\") {\n                if (key && toast.isActive(key)) {\n                    toast.update(key, {\n                        render: () => (\n                            <UndoableNotification\n                                notificationKey={key}\n                                message={message}\n                                cancelMutation={cancelMutation}\n                                undoableTimeout={undoableTimeout}\n                            />\n                        ),\n                    });\n                } else {\n                    toast({\n                        id: key,\n                        render: () => (\n                            <UndoableNotification\n                                notificationKey={key}\n                                message={message}\n                                cancelMutation={cancelMutation}\n                                undoableTimeout={undoableTimeout}\n                            />\n                        ),\n                    });\n                }\n            } else {\n                if (key && toast.isActive(key)) {\n                    toast.update(key, {\n                        title: message,\n                        status: type,\n                        description,\n                    });\n                } else {\n                    toast({\n                        id: key,\n                        title: message,\n                        description,\n                        status: type,\n                    });\n                }\n            }\n        },\n        close: (key) => toast.close(key),\n    };\n};\n"],"mappings":"qnBAAA,IAAAA,GAAA,GAAAC,GAAAD,GAAA,cAAAE,GAAA,sBAAAC,GAAA,iBAAAC,GAAA,eAAAC,GAAA,gBAAAC,GAAA,WAAAC,GAAA,iBAAAC,GAAA,cAAAC,GAAA,iBAAAC,GAAA,SAAAC,GAAA,eAAAC,GAAA,eAAAC,GAAA,mBAAAC,GAAA,iBAAAC,GAAA,cAAAC,GAAA,kBAAAC,GAAA,WAAAC,GAAA,iBAAAC,GAAA,WAAAC,GAAA,SAAAC,GAAA,eAAAC,GAAA,kBAAAC,GAAA,gBAAAC,GAAA,cAAAC,GAAA,iBAAAC,GAAA,kBAAAC,GAAA,eAAAC,GAAA,SAAAC,GAAA,eAAAC,GAAA,UAAAC,GAAA,aAAAC,GAAA,cAAAC,GAAA,iBAAAC,GAAA,mBAAAC,GAAA,iBAAAC,GAAA,wBAAAC,GAAA,gCAAAC,GAAA,mBAAAC,GAAA,gBAAAC,GAAA,kBAAAC,GAAA,gBAAAC,GAAA,kBAAAC,GAAA,UAAAC,GAAA,yBAAAC,GAAA,aAAAC,GAAA,gBAAAC,GAAA,yBAAAC,GAAA,gBAAAC,GAAA,kBAAAC,GAAA,oBAAAC,GAAA,2BAAAC,KAAA,eAAAC,GAAArD,ICAA,IAAAsD,GAAkB,oBAClBA,GAAuC,4BCDvC,IAAAC,EAAgC,oBAChCC,EAcO,2BACPD,EAeO,4BACPE,GAOO,yBAKA,IAAMC,GAA0CC,EAAA,CAAC,CACpD,MAAOC,EACP,OAAAC,EACA,KAAAC,CACJ,IAAM,CACF,GAAM,CAACC,EAAWC,CAAY,KAAI,YAAS,EAAK,EAC1C,CAACC,EAAQC,CAAS,KAAI,YAAS,EAAK,EAEpCC,KAAa,iBAAc,EAC3BC,KAAU,WAAQ,EAClB,CAAE,KAAMC,CAAW,KAAI,oBAAiB,EACxCC,EAAOH,IAAe,SAAWE,EAAaD,EAC9C,CAAE,UAAAG,EAAW,YAAAC,EAAa,gBAAAC,CAAgB,KAAI,WAAQ,CAAE,KAAAX,CAAK,CAAC,EAC9DY,KAAmB,YAAS,EAC5BC,KAAwB,4BAAyB,EACjDC,KAAI,gBAAa,EACjB,CAAE,aAAAC,CAAa,KAAI,oBAAiB,EACpCC,KAAe,yBAAsB,EACrC,CAAE,SAAAC,EAAU,YAAAC,CAAY,KAAI,sBAAmB,EAC/C,CAAE,OAAQC,CAAa,KAAI,aAAU,CACvC,+BAAgC,GAAQH,GAAA,MAAAA,EAAc,SAC1D,CAAC,EAEKI,EAAgBtB,GAAkBc,GAAoBS,GAEtDC,EAAazB,EAAA,IACXI,EAAkB,OACf,QAFQ,cAKbsB,EAAqD,CACvD,UAAW,QACX,SAAU,GACV,WAAY,CAACtB,GAAaE,CAC9B,EAEMqB,EAAiB3B,EAAC4B,GACbA,EAAK,IAAKC,GAAS,CACtB,GAAM,CAAE,MAAAC,GAAO,MAAAC,GAAO,KAAAC,GAAM,KAAAC,GAAM,SAAAC,EAAS,EAAIL,EAEzCM,GAAaN,EAAK,MAAQhB,EAC1BuB,GAAWF,GAAS,OAAS,EAE7BG,GAAaD,GAKb,OAJA,CACI,GAAIzB,EACJ,GAAIoB,EACR,EAGN,OACI,EAAAO,QAAA,cAAC,aACG,IAAKT,EAAK,IACV,SAAUG,GAAK,YAAY,EAC3B,OAAO,OACP,OAAQ,CACJ,SAAUH,CACd,GAEA,EAAAS,QAAA,cAAC,aACG,aACIxB,EAAgB,SAASe,EAAK,KAAO,EAAE,EAAI,EAAI,GAEnD,MAAM,OACN,YAAW,IAEX,EAAAS,QAAA,cAAC,iBAAc,OAAO,QAClB,EAAAA,QAAA,cAAC,WAAQ,MAAOR,GAAQ,GAAGJ,GACvB,EAAAY,QAAA,cAAC,mBACG,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAG,MACH,MAAM,QAEN,EAAAA,QAAA,cAAC,UACG,MAAM,OACN,QAAQ,OACR,MAAM,QACN,WAAW,SACX,SACIL,IAEI,EAAAK,QAAA,gBAAAA,QAAA,cACI,EAAAA,QAAA,cAAC,aAAS,KAAM,GAAI,CACxB,EAGR,UACIF,GACI,EAAAE,QAAA,cAAC,oBAAc,EACf,OAER,QAAS,CACL,MAAO,OACP,WAAYF,GACN,SACA,MACV,EACA,OAAQ,CAAE,eAAgB,MAAO,EACjC,SAAUD,GACT,GAAGE,KAEF,CAACjC,GAAaE,IACZ,EAAAgC,QAAA,cAAC,OAAI,SAAU,EAAG,UAAU,QACvBR,EACL,CAER,CACJ,CACJ,EAECM,IACG,EAAAE,QAAA,cAAC,kBACG,EAAG,EACH,GAAIlC,GAAa,CAACE,EAAS,EAAI,GAE/B,EAAAgC,QAAA,cAAC,aAAU,MAAM,OAAO,YAAW,IAC9BX,EAAeO,EAAQ,CAC5B,CACJ,CAER,CACJ,CACJ,CAER,CAAC,EA3FkB,kBA8FjBK,EAAQZ,EAAef,CAAS,EAEhC4B,EAAYtB,EACd,EAAAoB,QAAA,cAAC,aAAU,SAAS,YAAY,OAAO,QACnC,EAAAA,QAAA,cAAC,WACG,MAAOrB,EAAE,kBAAmB,WAAW,EACtC,GAAGS,GAEJ,EAAAY,QAAA,cAAC,UACG,MAAM,OACN,eACIlC,GAAa,CAACE,EAAS,SAAW,aAEtC,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,WAAW,SACX,SAAU,EAAAgC,QAAA,cAAC,kBAAc,KAAM,GAAI,EACnC,QAAQ,OACR,MAAM,QACN,SAAUzB,IAAgB,IAC1B,QAAS,CAAE,MAAO,OAAQ,WAAY,MAAO,EAC7C,OAAQ,CAAE,eAAgB,MAAO,EACjC,GAAIF,EACJ,GAAG,MAED,CAACP,GAAaE,IACZW,EAAE,kBAAmB,WAAW,CACxC,CACJ,CACJ,EACA,KAEEwB,EAAezC,EAAA,IAAM,CACnBoB,EACgB,OAAO,QACnBH,EACI,yBACA,2DACJ,CACJ,IAGII,EAAY,EAAK,EACjBC,EAAa,GAGjBA,EAAa,CAErB,EAhBqB,gBAkBfoB,EAAS1B,GACX,EAAAsB,QAAA,cAAC,WAAQ,MAAOrB,EAAE,iBAAkB,QAAQ,EAAI,GAAGS,GAC/C,EAAAY,QAAA,cAAC,UACG,MAAM,OACN,eAAgBlC,GAAa,CAACE,EAAS,SAAW,aAClD,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,WAAW,SACX,SAAU,EAAAgC,QAAA,cAAC,eAAW,KAAM,GAAI,EAChC,QAAQ,OACR,QAAS,CAAE,MAAO,MAAO,EACzB,OAAQ,CAAE,eAAgB,MAAO,EACjC,MAAM,QACN,QAASG,IAEP,CAACrC,GAAaE,IAAWW,EAAE,iBAAkB,QAAQ,CAC3D,CACJ,EAGE0B,EAAc3C,EAAA,IACZE,EACOA,EAAO,CACV,UAAAsC,EACA,OAAAE,EACA,MAAAH,EACA,UAAW,EACf,CAAC,EAGD,EAAAD,QAAA,gBAAAA,QAAA,cACKE,EACAD,EACAG,CACL,EAdY,eAkBpB,OACI,EAAAJ,QAAA,gBAAAA,QAAA,cACI,EAAAA,QAAA,cAAC,OACG,SAAS,QACT,IAAK,GACL,KAAM,EACN,OAAQ,KACR,QAAS,CAAC,QAAS,QAAS,OAAQ,OAAQ,MAAM,GAElD,EAAAA,QAAA,cAAC,cACG,iBAAkB,EAClB,GAAG,mBACH,MAAM,QACN,OAAQ,CAAE,GAAI,kBAAmB,EACjC,QAAS,CACL,GAAI,mBACJ,UAAW,iBACf,EACA,aAAW,YACX,QAAS,IAAM/B,EAAWqC,GAAS,CAACA,CAAI,GAExC,EAAAN,QAAA,cAAC,iBAAU,CACf,CACJ,EACA,EAAAA,QAAA,cAAC,UACG,UAAU,OACV,OAAQhC,EACR,QAAS,IAAMC,EAAU,EAAK,GAE9B,EAAA+B,QAAA,cAAC,oBAAc,EACf,EAAAA,QAAA,cAAC,iBAAc,EAAE,QAAQ,KAAK,QAAQ,GAAG,oBACrC,EAAAA,QAAA,cAAC,OAAI,QAAQ,OAAO,eAAe,SAAS,GAAI,GAC5C,EAAAA,QAAA,cAACf,EAAA,CAAc,UAAW,GAAO,CACrC,EACA,EAAAe,QAAA,cAAC,UACG,GAAI,EACJ,MAAM,QACN,WAAW,QACX,SAAU,GAEV,EAAAA,QAAA,cAAC,OAAI,MAAM,QAAQK,EAAY,CAAE,CACrC,CACJ,CACJ,EAEA,EAAAL,QAAA,cAAC,OACG,QAAS,CAAC,OAAQ,OAAQ,MAAM,EAChC,MAAOb,EAAW,EAClB,WAAW,yCACX,WAAY,EAChB,EACA,EAAAa,QAAA,cAAC,OACG,GAAG,mBACH,SAAS,QACT,MAAOb,EAAW,EAClB,IAAK,EACL,EAAE,QACF,QAAS,CAAC,OAAQ,OAAQ,MAAM,EAChC,cAAc,SACd,WAAW,0CAEX,EAAAa,QAAA,cAAC,OAAI,QAAQ,OAAO,eAAe,SAAS,GAAI,GAC5C,EAAAA,QAAA,cAACf,EAAA,CAAc,UAAWnB,EAAW,CACzC,EACA,EAAAkC,QAAA,cAAC,UAAO,GAAI,EAAG,MAAM,QAAQ,WAAW,QAAQ,SAAU,GACtD,EAAAA,QAAA,cAAC,OAAI,MAAM,QAAQK,EAAY,CAAE,CACrC,EACA,EAAAL,QAAA,cAAC,UACG,QAAS,IAAMjC,EAAcuC,GAAS,CAACA,CAAI,EAC3C,MAAM,QACN,GAAG,uBACH,aAAc,EACd,OAAQ,CAAE,GAAI,sBAAuB,EACrC,QAAS,CACL,GAAI,uBACJ,UAAW,iBACf,GAECxC,EAAY,EAAAkC,QAAA,cAAC,wBAAiB,EAAK,EAAAA,QAAA,cAAC,uBAAgB,CACzD,CACJ,CACJ,CAER,EAjTuD,SC5CvD,IAAAO,GAAkB,oBAClBC,GAAsD,2BACtDD,GAA0C,4BAInC,IAAME,GAA4CC,EAAA,IAAM,CAC3D,IAAMC,KAAe,0BAAsB,EACrC,CAAE,KAAMC,CAAK,KAAI,mBAAe,CAClC,+BAAgC,GAAQD,GAAA,MAAAA,EAAc,SAC1D,CAAC,EAID,OAF2BC,IAASA,EAAK,MAAQA,EAAK,QAGlD,GAAAC,QAAA,cAAC,QACG,GAAG,IACH,GAAG,IACH,QAAQ,OACR,eAAe,WACf,EAAE,OACF,GAAG,kBAEH,GAAAA,QAAA,cAAC,eACG,GAAAA,QAAA,cAAC,SAAK,KAAK,KAAK,WAAW,QACtBD,GAAA,YAAAA,EAAM,IACX,EACA,GAAAC,QAAA,cAAC,WAAO,KAAK,KAAK,KAAMD,GAAA,YAAAA,EAAM,KAAM,IAAKA,GAAA,YAAAA,EAAM,OAAQ,CAC3D,CACJ,EACA,IACR,EAzByD,UFKlD,IAAME,GAA4CC,EAAA,CAAC,CACtD,MAAAC,EACA,OAAAC,EACA,MAAAC,EACA,OAAAC,EACA,cAAAC,EACA,SAAAC,CACJ,IAAM,CACF,IAAMC,EAAgBN,GAASA,GACzBO,EAAiBN,GAAUA,GAE3BO,KAAK,sBAAkB,WAAY,UAAU,EAEnD,OACI,GAAAC,QAAA,cAAC,QAAI,QAAQ,OAAO,GAAID,GACpB,GAAAC,QAAA,cAACH,EAAA,CAAc,MAAOJ,EAAO,EAC7B,GAAAO,QAAA,cAAC,QACG,QAAQ,OACR,cAAc,SACd,KAAM,EACN,SAAS,SACT,KAAK,SAEL,GAAAA,QAAA,cAACF,EAAA,IAAe,EAChB,GAAAE,QAAA,cAAC,QAAI,EAAG,CAAC,EAAG,CAAC,GAAIJ,CAAS,EACzBF,GAAU,GAAAM,QAAA,cAACN,EAAA,IAAO,CACvB,EACCC,GAAiB,GAAAK,QAAA,cAACL,EAAA,IAAc,CACrC,CAER,EA9ByD,UGXzD,IAAAM,GAAkB,oBAClBC,GAKO,2BACPD,GAAmC,4BAE5B,IAAME,GAA8BC,EAAA,CAAC,CAAE,UAAAC,CAAU,IAAM,CAC1D,IAAMC,KAAa,kBAAc,EAC3BC,KAAO,YAAQ,EACf,CAAE,KAAMC,CAAW,KAAI,qBAAiB,EAI9C,OACI,GAAAC,QAAA,cAAC,GAAAC,KAAA,CAAW,GAHGJ,IAAe,SAAWE,EAAaD,EAG1B,GAAG,KAC1BF,EACG,GAAAI,QAAA,cAAC,OACG,IAAI,sEACJ,IAAI,SACJ,MAAO,CAAE,UAAW,MAAO,EAC/B,EAEA,GAAAA,QAAA,cAAC,OACG,IAAI,iEACJ,IAAI,SACJ,MAAM,QACN,MAAO,CAAE,UAAW,MAAO,EAC/B,CAER,CAER,EAzB2C,SCT3C,IAAAE,GAAgC,oBAChCA,GAAoB,4BCDpB,IAAAC,EAAgC,oBAChCC,EAcO,2BACPD,EAgBO,4BACPE,GAA8D,yBAQvD,IAAMC,GAAsDC,EAAA,CAAC,CAChE,MAAOC,EACP,OAAAC,EACA,KAAAC,EACA,YAAAC,CACJ,IAAM,CACF,GAAM,CAACC,EAAQC,CAAS,KAAI,YAAS,EAAK,EAEpCC,KAAa,iBAAc,EAC3BC,KAAU,WAAQ,EAClB,CAAE,KAAMC,CAAW,KAAI,oBAAiB,EACxCC,EAAOH,IAAe,SAAWE,EAAaD,EAC9C,CAAE,UAAAG,EAAW,YAAAC,EAAa,gBAAAC,CAAgB,KAAI,WAAQ,CAAE,KAAAV,CAAK,CAAC,EAC9DW,KAAmB,YAAS,EAC5BC,KAAwB,4BAAyB,EACjDC,KAAI,gBAAa,EACjB,CAAE,aAAAC,CAAa,KAAI,oBAAiB,EACpCC,KAAe,yBAAsB,EACrC,CAAE,SAAAC,EAAU,YAAAC,CAAY,KAAI,sBAAmB,EAC/C,CAAE,OAAQC,CAAa,KAAI,aAAU,CACvC,+BAAgC,GAAQH,GAAA,MAAAA,EAAc,SAC1D,CAAC,EAEKI,EAAgBrB,GAAkBa,GAAoBS,GAEtDC,EAAaxB,EAAA,IACVI,EACE,QADkB,OADV,cAKbqB,EAAqD,CACvD,UAAW,QACX,SAAU,GACV,WAAYrB,GAAeC,CAC/B,EAEMqB,EAAiB1B,EAAC2B,GACbA,EAAK,IAAKC,GAAS,CACtB,GAAM,CAAE,MAAAC,EAAO,MAAAC,GAAO,KAAAC,GAAM,KAAAC,GAAM,SAAAC,EAAS,EAAIL,EAEzCM,GAAaN,EAAK,MAAQhB,EAC1BuB,GAAWF,GAAS,OAAS,EAE7BG,GAAaD,GAKb,OAJA,CACI,GAAIzB,EACJ,GAAIoB,EACR,EAGN,OACI,EAAAO,QAAA,cAAC,aACG,IAAKT,EAAK,IACV,SAAUG,GAAK,YAAY,EAC3B,OAAO,OACP,OAAQ,CACJ,SAAUH,CACd,GAEA,EAAAS,QAAA,cAAC,aACG,aACIxB,EAAgB,SAASe,EAAK,KAAO,EAAE,EAAI,EAAI,GAEnD,MAAM,OACN,GAAI,EACJ,YAAW,IAEX,EAAAS,QAAA,cAAC,iBAAc,OAAO,QAClB,EAAAA,QAAA,cAAC,WAAQ,MAAOR,EAAQ,GAAGJ,GACvB,EAAAY,QAAA,cAAC,mBACG,GAAI,EACJ,GAAI,EACJ,GAAG,MACH,MAAM,OACN,OAAQ,CACJ,gBAAiB,aACrB,GAEA,EAAAA,QAAA,cAAC,UACG,YACIH,GAAa,QAAU,OAE3B,aAAc,EACd,GAAI,CAAC9B,GAAe,CAACC,EAAS,EAAI,EAClC,MAAM,OACN,QAAQ,QACR,WAAW,SACX,SACI2B,IAEI,EAAAK,QAAA,gBAAAA,QAAA,cACI,EAAAA,QAAA,cAAC,aAAS,KAAM,GAAI,CACxB,EAGR,UACIF,GACI,EAAAE,QAAA,cAAC,iBAAc,MAAM,YAAY,EACjC,OAER,QAAS,CACL,QAAS,CACL,QAAS,KACT,WAAS,qBACL,YACA,WACJ,EACA,QAAS,IACT,SAAU,WACV,IAAK,EACL,OAAQ,EACR,KAAM,EACN,MAAO,EACP,MAAO,OACP,OAAQ,MACZ,EACA,YAAa,MACb,iBAAkB,WACtB,EACA,SAAUH,GACT,GAAGE,KAEFhC,GAAeC,IACb,EAAAgC,QAAA,cAAC,OAAI,SAAU,EAAG,UAAU,QACvBR,CACL,CAER,CACJ,CACJ,EAECM,IACG,EAAAE,QAAA,cAAC,kBACG,EAAG,EACH,GAAI,CAACjC,GAAe,CAACC,EAAS,EAAI,GAElC,EAAAgC,QAAA,cAAC,aAAU,MAAM,OAAO,YAAW,IAC9BX,EAAeO,EAAQ,CAC5B,CACJ,CAER,CACJ,CACJ,CAER,CAAC,EA7GkB,kBAgHjBK,EAAQZ,EAAef,CAAS,EAEhC4B,EAAYtB,EACd,EAAAoB,QAAA,cAAC,aAAU,SAAS,YAAY,OAAO,QACnC,EAAAA,QAAA,cAAC,WACG,MAAOrB,EAAE,kBAAmB,WAAW,EACtC,GAAGS,GAEJ,EAAAY,QAAA,cAAC,UACG,MAAM,OACN,eACI,CAACjC,GAAe,CAACC,EAAS,SAAW,aAEzC,WAAW,SACX,SAAU,EAAAgC,QAAA,cAAC,kBAAc,KAAM,GAAI,EACnC,QAAQ,QACR,SAAUzB,IAAgB,IAC1B,QAAS,CACL,MAAO,YACP,gBAAiB,WACrB,EACA,GAAIF,EACJ,GAAG,MAEDN,GAAeC,IACbW,EAAE,kBAAmB,WAAW,CACxC,CACJ,CACJ,EACA,KAEEwB,EAAexC,EAAA,IAAM,CACnBmB,EACgB,OAAO,QACnBH,EACI,yBACA,2DACJ,CACJ,IAGII,EAAY,EAAK,EACjBC,EAAa,GAGjBA,EAAa,CAErB,EAhBqB,gBAkBfoB,EAAS1B,GACX,EAAAsB,QAAA,cAAC,WAAQ,MAAOrB,EAAE,iBAAkB,QAAQ,EAAI,GAAGS,GAC/C,EAAAY,QAAA,cAAC,OAAI,EAAG,GACJ,EAAAA,QAAA,cAAC,UACG,aAAc,EACd,MAAM,OACN,eACI,CAACjC,GAAe,CAACC,EAAS,SAAW,aAEzC,GAAI,CAACD,GAAe,CAACC,EAAS,EAAI,EAClC,WAAW,SACX,SAAU,EAAAgC,QAAA,cAAC,cAAU,KAAM,GAAI,EAC/B,QAAQ,QACR,QAAS,CACL,MAAO,YACP,gBAAiB,WACrB,EACA,QAASG,IAEPpC,GAAeC,IAAWW,EAAE,iBAAkB,QAAQ,CAC5D,CACJ,CACJ,EAGE0B,EAAc1C,EAAA,IACZE,EACOA,EAAO,CACV,UAAAqC,EACA,OAAAE,EACA,MAAAH,EACA,UAAW,EACf,CAAC,EAGD,EAAAD,QAAA,gBAAAA,QAAA,cACKE,EACAD,EACAG,CACL,EAdY,eAkBpB,OACI,EAAAJ,QAAA,gBAAAA,QAAA,cACI,EAAAA,QAAA,cAAC,OACG,SAAS,QACT,IAAK,EACL,KAAM,EACN,OAAQ,KACR,QAAS,CAAC,QAAS,QAAS,OAAQ,OAAQ,MAAM,GAElD,EAAAA,QAAA,cAAC,cACG,iBAAkB,EAClB,aAAW,YACX,QAAS,IAAM/B,EAAWqC,GAAS,CAACA,CAAI,GAExC,EAAAN,QAAA,cAAC,iBAAU,CACf,CACJ,EACA,EAAAA,QAAA,cAAC,UACG,UAAU,OACV,OAAQhC,EACR,QAAS,IAAMC,EAAU,EAAK,GAE9B,EAAA+B,QAAA,cAAC,oBAAc,EACf,EAAAA,QAAA,cAAC,iBAAc,EAAE,QAAQ,KAAK,SAC1B,EAAAA,QAAA,cAAC,OACG,QAAQ,OACR,GAAI,EACJ,WAAW,SACX,OAAO,OACP,SAAS,OACT,MAAI,qBACA,4BACA,0BACJ,GAEA,EAAAA,QAAA,cAACf,EAAA,CAAc,UAAW,GAAO,CACrC,EACA,EAAAe,QAAA,cAAC,UACG,WAAW,QACX,SAAU,EACV,MAAI,qBACA,wBACA,sBACJ,GAEA,EAAAA,QAAA,cAAC,OAAI,MAAM,QAAQK,EAAY,CAAE,CACrC,CACJ,CACJ,EAEA,EAAAL,QAAA,cAAC,OACG,QAAS,CAAC,OAAQ,OAAQ,MAAM,EAChC,MAAOb,EAAW,EAClB,WAAW,yCACX,WAAY,EAChB,EACA,EAAAa,QAAA,cAAC,OACG,SAAS,QACT,MAAOb,EAAW,EAClB,IAAK,EACL,EAAE,QACF,QAAS,CAAC,OAAQ,OAAQ,MAAM,EAChC,cAAc,SACd,WAAW,0CAEX,EAAAa,QAAA,cAAC,OACG,QAAQ,OACR,GAAKjC,EAAkB,EAAJ,EACnB,eAAiBA,EAAyB,aAAX,SAC/B,WAAW,SACX,SAAS,OACT,OAAO,OACP,YAAY,MACZ,oBAAkB,qBAAkB,WAAY,UAAU,EAC1D,MAAI,qBACA,4BACA,0BACJ,GAEA,EAAAiC,QAAA,cAACf,EAAA,CAAc,UAAW,CAAClB,EAAa,CAC5C,EACA,EAAAiC,QAAA,cAAC,UACG,WAAW,QACX,WAAY,EACZ,SAAU,EACV,YAAY,MACZ,oBAAkB,qBAAkB,WAAY,UAAU,EAC1D,MAAI,qBACA,wBACA,sBACJ,GAEA,EAAAA,QAAA,cAAC,OAAI,MAAM,QAAQK,EAAY,CAAE,CACrC,CACJ,CACJ,CAER,EAjVmE,eCzCnE,IAAAE,GAAkB,oBAClBC,GAAsD,2BACtDD,GAQO,4BAEPE,GAGO,yBAKA,IAAMC,GAAwDC,EAAA,CAAC,CAClE,YAAAC,EACA,mBAAAC,EACA,gBAAiBC,CACrB,IAAM,CACF,IAAMC,KAAe,0BAAsB,EACrC,CAAE,KAAMC,CAAK,KAAI,mBAAe,CAClC,+BAAgC,GAAQD,GAAA,MAAAA,EAAc,SAC1D,CAAC,EAEKE,KAAU,sBACZ,yBACA,uBACJ,EAEMC,EAAmB,EAAQL,EAEjC,OACI,GAAAM,QAAA,cAAC,QACG,GAAG,IACH,GAAG,IACH,GAAG,IACH,QAAQ,OACR,WAAW,SACX,eACID,EACM,CAAE,KAAM,WAAY,GAAI,eAAgB,EACxC,WAEV,EAAE,OACF,OAAO,OACP,GAAID,EACJ,aAAa,MACb,qBAAmB,sBAAkB,WAAY,UAAU,GAE1DC,GACG,GAAAC,QAAA,cAAC,eACG,QAAS,CAAE,KAAM,OAAQ,GAAI,MAAO,EACpC,gBAAgB,cAChB,aAAW,iBACX,QAAS,IAAMN,GAAA,YAAAA,MAEdC,GAAA,YAAAA,EAA2B,EAAQF,MAC/BA,EACG,GAAAO,QAAA,cAAC,SACG,GAAI,iCACJ,QAAS,OACb,EAEA,GAAAA,QAAA,cAAC,SACG,GAAI,+BACJ,QAAS,OACb,EAEZ,EAGJ,GAAAA,QAAA,cAAC,gBACIH,GAAA,YAAAA,EAAM,OACH,GAAAG,QAAA,cAAC,SAAK,KAAK,KAAK,WAAW,QACtBH,EAAK,IACV,GAEHA,GAAA,YAAAA,EAAM,SACH,GAAAG,QAAA,cAAC,WACG,KAAK,KACL,MAAMH,GAAA,YAAAA,EAAM,OAAQ,gBACpB,IAAKA,EAAK,OACd,CAER,CACJ,CAER,EAzEqE,gBFV9D,IAAMI,GAAkDC,EAAA,CAAC,CAC5D,MAAAC,EACA,OAAAC,EACA,MAAAC,EACA,OAAAC,EACA,cAAAC,EACA,SAAAC,CACJ,IAAM,CACF,GAAM,CAACC,EAAaC,CAAc,KAAI,aAAS,EAAI,EAKnD,OACI,GAAAC,QAAA,cAAC,QAAI,QAAQ,QACT,GAAAA,QAAA,cALcR,GAASS,GAKtB,CAAc,MAAOP,EAAO,YAAaI,EAAa,EACvD,GAAAE,QAAA,cAAC,QACG,QAAQ,OACR,cAAc,SACd,KAAM,EACN,SAAS,SACT,KAAK,SAEL,GAAAA,QAAA,cAZWP,GAAUS,GAYpB,CACG,YAAaJ,EACb,mBAAoB,IACTC,EAAgBI,GAAc,CAACA,CAAS,EAEvD,EACA,GAAAH,QAAA,cAAC,QAAI,EAAG,CAAC,EAAG,CAAC,GAAIH,CAAS,EACzBF,GAAU,GAAAK,QAAA,cAACL,EAAA,IAAO,CACvB,EACCC,GAAiB,GAAAI,QAAA,cAACJ,EAAA,IAAc,CACrC,CAER,EAnC+D,gBGV/D,IAAAQ,GAAkB,oBAClBC,GAAyD,2BACzDD,GAA0D,4BAG1D,IAAME,GAAc,iBAEdC,GACF,GAAAC,QAAA,cAAC,OACG,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,MAAM,6BACN,cAAY,eAEZ,GAAAA,QAAA,cAAC,QACG,EAAE,8GACF,KAAK,eACT,EACA,GAAAA,QAAA,cAAC,QACG,SAAS,UACT,SAAS,UACT,EAAE,uOACF,KAAK,eACT,CACJ,EAMSC,GAAsDC,EAAA,CAAC,CAChE,UAAAC,EACA,KAAAC,EAAOL,GACP,KAAAM,EAAOP,GACP,cAAAQ,CACJ,IAAM,CACF,IAAMC,KAAa,kBAAc,EAC3BC,KAAO,YAAQ,EACf,CAAE,KAAMC,CAAW,KAAI,qBAAiB,EAI9C,OACI,GAAAT,QAAA,cAAC,GAAAU,KAAA,CACG,GAJWH,IAAe,SAAWE,EAAaD,EAKlD,GAAG,IACH,SAAS,UACT,eAAe,OACf,OAAQ,CACJ,eAAgB,MACpB,GAEA,GAAAR,QAAA,cAAC,WACG,QAAQ,MACR,eAAe,SACf,WAAW,SACX,SAAS,UACT,MAAO,CACH,GAAGM,CACP,GAEA,GAAAN,QAAA,cAAC,SAAK,OAAO,OAAO,MAAM,OAAO,MAAM,aAClCI,CACL,EAEC,CAACD,GACE,GAAAH,QAAA,cAAC,YAAQ,GAAG,KAAK,WAAY,IAAK,SAAS,WACtCK,CACL,CAER,CACJ,CAER,EA3CmE,eChCnE,IAAAM,GAAkB,oBAClBA,GAAoB,4BCDpB,IAAAC,EAAqC,oBACrCC,EAcO,2BACPD,EAeO,4BACPE,GAAmD,yBChCnD,IAAAC,GAAkB,oBAClBC,GAAyD,2BACzDD,GAA0D,4BAG1D,IAAME,GAAc,iBAEdC,GACF,GAAAC,QAAA,cAAC,OACG,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,MAAM,6BACN,cAAY,eAEZ,GAAAA,QAAA,cAAC,QACG,EAAE,8GACF,KAAK,eACT,EACA,GAAAA,QAAA,cAAC,QACG,SAAS,UACT,SAAS,UACT,EAAE,uOACF,KAAK,eACT,CACJ,EAGSC,GAAwDC,EAAA,CAAC,CAClE,UAAAC,EACA,KAAAC,EAAOL,GACP,KAAAM,EAAOP,GACP,cAAAQ,CACJ,IAAM,CACF,IAAMC,KAAa,kBAAc,EAC3BC,KAAO,YAAQ,EACf,CAAE,KAAMC,CAAW,KAAI,qBAAiB,EAI9C,OACI,GAAAT,QAAA,cAAC,GAAAU,KAAA,CACG,GAJWH,IAAe,SAAWE,EAAaD,EAKlD,GAAG,IACH,SAAS,UACT,eAAe,OACf,OAAQ,CACJ,eAAgB,MACpB,GAEA,GAAAR,QAAA,cAAC,WACG,QAAQ,MACR,eAAe,SACf,WAAW,SACX,SAAS,UACT,MAAO,CACH,GAAGM,CACP,GAEA,GAAAN,QAAA,cAAC,SAAK,OAAO,OAAO,MAAM,OAAO,MAAM,aAClCI,CACL,EAEC,CAACD,GACE,GAAAH,QAAA,cAAC,YAAQ,GAAG,KAAK,WAAY,IAAK,SAAS,WACtCK,CACL,CAER,CACJ,CAER,EA3CqE,iBCzB9D,IAAMM,GAAgBC,EACzBC,GAMC,CACD,GAAM,CAAE,QAAAC,EAAS,UAAAC,CAAU,EAAIF,EAEzBG,EAAOF,IAAY,EAAI,OAAYA,EAAU,EAC/CG,EAAOH,IAAYC,EAAY,OAAYD,EAAU,EACrDI,EAA2B,CAAC,CAAC,EAEjC,GAAIJ,IAAY,GAAKC,IAAc,EAAG,MAAO,CAAE,QAAAD,EAAS,KAAAE,EAAM,KAAAC,EAAM,MAAAC,CAAM,EACtEJ,EAAU,GAAGI,EAAM,KAAK,QAAG,EAE/B,IAAMC,EAAI,EACNC,EAAKN,EAAUK,EACfE,EAAKP,EAAUK,EAEnB,QAASG,EAAIF,EAAK,EAAIA,EAAK,EAAGE,GAAK,KAAK,IAAIP,EAAWM,CAAE,EAAGC,IACxDJ,EAAM,KAAKI,CAAC,EAEhB,OAAID,EAAK,EAAIN,GAAWG,EAAM,KAAK,QAAG,EAClCG,EAAKN,GAAWG,EAAM,KAAKH,CAAS,EAEjC,CAAE,QAAAD,EAAS,KAAAE,EAAM,KAAAC,EAAM,MAAAC,CAAM,CACxC,EA5B6B,iBCJ7B,IAAAK,GAA2B,iBCA3B,IAAAC,GAA2C,oBAIpC,IAAMC,GAAsB,GAAAC,QAAM,cAAoC,CACzE,eAAgB,GAChB,gBAAiB,GACjB,kBAAmB,IAAG,GACtB,mBAAoB,IAAG,EAC3B,CAAC,EAEYC,GAGRC,EAAA,CAAC,CAAE,SAAAC,EAAU,sBAAAC,CAAsB,IAAM,CAC1C,GAAM,CAACC,EAAgBC,CAAiB,KAAI,aACxCF,GAAyB,EAC7B,EACM,CAACG,EAAiBC,CAAkB,KAAI,aAAS,EAAK,EAE5D,OACI,GAAAR,QAAA,cAACD,GAAoB,SAApB,CACG,MAAO,CACH,eAAAM,EACA,gBAAAE,EACA,kBAAAD,EACA,mBAAAE,CACJ,GAECL,CACL,CAER,EAlBK,+BDAE,IAAMM,GAAkBC,EAAA,IAA2B,CACtD,GAAM,CACF,gBAAAC,EACA,eAAAC,EACA,mBAAAC,EACA,kBAAAC,CACJ,KAAI,eAAWC,EAAmB,EAElC,MAAO,CACH,aAAcJ,EACd,gBAAiBE,EACjB,mBAAoB,CAACD,EACrB,sBAAwBI,GAAYF,EAAkB,CAACE,CAAO,CAClE,CACJ,EAd+B,mBEd/B,IAAAC,GAA2B,iBAOpB,IAAMC,GAAyBC,EAAA,IAAkC,CACpE,GAAM,CACF,gBAAAC,EACA,eAAAC,EACA,mBAAAC,EACA,kBAAAC,CACJ,KAAI,eAAWC,EAAmB,EAElC,MAAO,CACH,gBAAAJ,EACA,eAAAC,EACA,mBAAAC,EACA,kBAAAC,CACJ,CACJ,EAdsC,0BL+B/B,IAAME,GAA0DC,EAAA,CAAC,CACpE,MAAOC,EACP,OAAAC,EACA,KAAAC,EACA,mBAAAC,EAAqB,EACzB,IAAM,CACF,GAAM,CAAE,eAAAC,EAAgB,gBAAAC,EAAiB,mBAAAC,CAAmB,EACxDC,GAAuB,EAErBC,KAAa,iBAAc,EAC3BC,KAAU,WAAQ,EAClB,CAAE,KAAMC,CAAW,KAAI,oBAAiB,EACxCC,EAAOH,IAAe,SAAWE,EAAaD,EAC9C,CAAE,UAAAG,EAAW,YAAAC,EAAa,gBAAAC,CAAgB,KAAI,WAAQ,CAAE,KAAAZ,CAAK,CAAC,EAC9Da,KAAmB,YAAS,EAC5BC,KAAwB,4BAAyB,EACjDC,KAAI,gBAAa,EACjB,CAAE,aAAAC,CAAa,KAAI,oBAAiB,EACpCC,KAAe,yBAAsB,EACrC,CAAE,SAAAC,EAAU,YAAAC,CAAY,KAAI,sBAAmB,EAC/C,CAAE,OAAQC,CAAa,KAAI,aAAU,CACvC,+BAAgC,GAAQH,GAAA,MAAAA,EAAc,SAC1D,CAAC,EAEKI,EAAgBvB,GAAkBe,GAAoBS,GAEtDC,EAAa1B,EAAA,IACXK,EAAuB,OACpB,QAFQ,cAKbsB,EAAqD,CACvD,UAAW,QACX,SAAU,GACV,WAAY,CAACtB,GAAkBC,CACnC,EAEMsB,EAAiB5B,EAAC6B,GACbA,EAAK,IAAKC,GAAS,CACtB,GAAM,CAAE,MAAAC,GAAO,MAAAC,GAAO,KAAAC,GAAM,KAAAC,GAAM,SAAAC,EAAS,EAAIL,EAEzCM,GAAaN,EAAK,MAAQhB,EAC1BuB,GAAWF,GAAS,OAAS,EAE7BG,GAAaD,GAKb,OAJA,CACI,GAAIzB,EACJ,GAAIoB,EACR,EAGAO,GACFnC,GAAsBgC,GAChB,CAAE,cAAe,MAAO,EACxB,CAAC,EAEX,OACI,EAAAI,QAAA,cAAC,aACG,IAAKV,EAAK,IACV,SAAUG,GAAK,YAAY,EAC3B,OAAO,OACP,OAAQ,CACJ,SAAUH,CACd,GAEA,EAAAU,QAAA,cAAC,aACG,aACIzB,EAAgB,SAASe,EAAK,KAAO,EAAE,EAAI,EAAI,GAEnD,MAAM,OACN,GAAI,EACJ,YAAW,IAEX,EAAAU,QAAA,cAAC,iBAAc,OAAO,QAClB,EAAAA,QAAA,cAAC,WAAQ,MAAOT,GAAQ,GAAGJ,GACvB,EAAAa,QAAA,cAAC,mBACG,GAAI,EACJ,GAAI,EACJ,GAAG,MACH,MAAM,OACN,OAAQ,CACJ,gBAAiB,aACrB,GAEA,EAAAA,QAAA,cAAC,UACG,YACIJ,GAAa,QAAU,OAE3B,aAAc,EACd,GACI/B,GAAkB,CAACC,EACb,EACA,EAEV,MAAM,OACN,QAAQ,QACR,WAAW,SACX,SACI4B,IAEI,EAAAM,QAAA,gBAAAA,QAAA,cACI,EAAAA,QAAA,cAAC,aAAS,KAAM,GAAI,CACxB,EAGR,UACIH,GACI,EAAAG,QAAA,cAAC,iBAAc,MAAM,YAAY,EACjC,OAER,QAAS,CACL,QAAS,CACL,QAAS,KACT,WAAS,qBACL,YACA,WACJ,EACA,QAAS,IACT,SAAU,WACV,IAAK,EACL,OAAQ,EACR,KAAM,EACN,MAAO,EACP,MAAO,OACP,OAAQ,MACZ,EACA,YAAa,MACb,iBAAkB,WACtB,EACA,SAAUJ,GACV,MAAOG,GACN,GAAGD,KAEFhC,GACE,CAACD,IACD,EAAAmC,QAAA,cAAC,OAAI,SAAU,EAAG,UAAU,QACvBT,EACL,CAER,CACJ,CACJ,EAECM,IACG,EAAAG,QAAA,cAAC,kBACG,EAAG,EACH,GACInC,GAAkB,CAACC,EACb,EACA,GAGV,EAAAkC,QAAA,cAAC,aAAU,MAAM,OAAO,YAAW,IAC9BZ,EAAeO,EAAQ,CAC5B,CACJ,CAER,CACJ,CACJ,CAER,CAAC,EA5HkB,kBA+HjBM,EAAQb,EAAef,CAAS,EAEhC6B,EAAYvB,EACd,EAAAqB,QAAA,cAAC,aAAU,SAAS,YAAY,OAAO,QACnC,EAAAA,QAAA,cAAC,WACG,MAAOtB,EAAE,kBAAmB,WAAW,EACtC,GAAGS,GAEJ,EAAAa,QAAA,cAAC,UACG,MAAM,OACN,eACI,CAAClC,GAAmBD,EACd,SACA,aAEV,WAAW,SACX,SAAU,EAAAmC,QAAA,cAAC,kBAAc,KAAM,GAAI,EACnC,QAAQ,QACR,SAAU1B,IAAgB,IAC1B,QAAS,CACL,MAAO,YACP,gBAAiB,WACrB,EACA,GAAIF,EACJ,GAAG,MAEDN,GAAmB,CAACD,IAClBa,EAAE,kBAAmB,WAAW,CACxC,CACJ,CACJ,EACA,KAEEyB,EAAe3C,EAAA,IAAM,CACnBqB,EACgB,OAAO,QACnBH,EACI,yBACA,2DACJ,CACJ,IAGII,EAAY,EAAK,EACjBC,EAAa,GAGjBA,EAAa,CAErB,EAhBqB,gBAkBfqB,EAAS3B,GACX,EAAAuB,QAAA,cAAC,WAAQ,MAAOtB,EAAE,iBAAkB,QAAQ,EAAI,GAAGS,GAC/C,EAAAa,QAAA,cAAC,OAAI,EAAG,GACJ,EAAAA,QAAA,cAAC,UACG,aAAc,EACd,MAAM,OACN,eACI,CAAClC,GAAmBD,EACd,SACA,aAEV,GAAI,CAACC,GAAmBD,EAAiB,EAAI,EAC7C,WAAW,SACX,SAAU,EAAAmC,QAAA,cAAC,cAAU,KAAM,GAAI,EAC/B,QAAQ,QACR,QAAS,CACL,MAAO,YACP,gBAAiB,WACrB,EACA,QAASG,IAEPrC,GAAmB,CAACD,IAClBa,EAAE,iBAAkB,QAAQ,CACpC,CACJ,CACJ,EAGE2B,EAAc7C,EAAA,IACZE,EACOA,EAAO,CACV,UAAAwC,EACA,OAAAE,EACA,MAAAH,EACA,UAAW,EACf,CAAC,EAGD,EAAAD,QAAA,gBAAAA,QAAA,cACKE,EACAD,EACAG,CACL,EAdY,eAkBpB,OACI,EAAAJ,QAAA,gBAAAA,QAAA,cACI,EAAAA,QAAA,cAAC,UACG,UAAU,OACV,OAAQlC,EACR,QAAS,IAAMC,EAAmB,CAACD,CAAe,GAElD,EAAAkC,QAAA,cAAC,oBAAc,EACf,EAAAA,QAAA,cAAC,iBAAc,EAAE,QAAQ,KAAK,SAC1B,EAAAA,QAAA,cAAC,OACG,QAAQ,OACR,WAAY,EACZ,GAAI,EACJ,WAAW,SACX,OAAO,OACP,SAAS,OACT,MAAI,qBACA,4BACA,0BACJ,EACA,aAAa,MACb,qBAAmB,qBACf,WACA,UACJ,GAEA,EAAAA,QAAA,cAAChB,EAAA,CAAc,UAAW,GAAO,CACrC,EACA,EAAAgB,QAAA,cAAC,UACG,WAAW,QACX,SAAU,EACV,MAAI,qBACA,wBACA,sBACJ,EACA,SAAS,QAET,EAAAA,QAAA,cAAC,OAAI,MAAM,QAAQK,EAAY,CAAE,CACrC,CACJ,CACJ,EAEA,EAAAL,QAAA,cAAC,OACG,QAAS,CAAC,OAAQ,OAAQ,MAAM,EAChC,MAAOd,EAAW,EAClB,WAAW,yCACX,WAAY,EAChB,EACA,EAAAc,QAAA,cAAC,OACG,SAAS,QACT,MAAOd,EAAW,EAClB,IAAK,EACL,EAAE,QACF,QAAS,CAAC,OAAQ,OAAQ,MAAM,EAChC,cAAc,SACd,WAAW,0CAEX,EAAAc,QAAA,cAAC,OACG,QAAQ,OACR,WAAY,EACZ,GAAInC,EAAiB,EAAI,EACzB,eAAgBA,EAAiB,SAAW,aAC5C,WAAW,SACX,SAAS,OACT,OAAO,OACP,YAAY,MACZ,oBAAkB,qBAAkB,WAAY,UAAU,EAC1D,aAAa,MACb,qBAAmB,qBACf,WACA,UACJ,EACA,MAAI,qBACA,4BACA,0BACJ,GAEA,EAAAmC,QAAA,cAAChB,EAAA,CAAc,UAAWnB,EAAgB,CAC9C,EACA,EAAAmC,QAAA,cAAC,UACG,WAAW,QACX,SAAU,EACV,OAAO,OACP,SAAU,EACV,YAAY,MACZ,oBAAkB,qBAAkB,WAAY,UAAU,EAC1D,MAAI,qBACA,wBACA,sBACJ,GAEA,EAAAA,QAAA,cAAC,OAAI,MAAM,OAAO,SAAS,QACtBK,EAAY,CACjB,CACJ,CACJ,CACJ,CAER,EAvWuE,iBMtCvE,IAAAC,GAAkB,oBAClBC,GAIO,2BACPD,GAOO,4BCbP,IAAAE,GAAkB,oBAClBA,GAA4C,4BAC5CC,GAIO,yBAIP,IAAMC,GAAgBC,EAACC,GACnB,GAAAC,QAAA,cAAC,eAAW,QAAQ,QAAQ,KAAK,KAAM,GAAGD,EAAO,EAD/B,iBAITE,GAA0BH,EAAA,IAAM,CACzC,GAAM,CACF,eAAAI,EACA,kBAAAC,EACA,gBAAAC,EACA,mBAAAC,CACJ,EAAIC,GAAuB,EAE3B,OACI,GAAAN,QAAA,iBAAAA,QAAA,cACI,GAAAA,QAAA,cAACH,GAAA,CACG,QAAS,CAAE,KAAM,OAAQ,GAAI,MAAO,EACpC,aAAW,wBACX,KACIK,EACI,GAAAF,QAAA,cAAC,mCAA4B,EAE7B,GAAAA,QAAA,cAAC,qCAA8B,EAGvC,QAAS,IAAMG,EAAkB,CAACD,CAAc,EACpD,EACA,GAAAF,QAAA,cAACH,GAAA,CACG,QAAS,CAAE,KAAM,OAAQ,GAAI,MAAO,EACpC,aAAW,iBACX,KAAM,GAAAG,QAAA,cAAC,iBAAU,EACjB,QAAS,IAAMK,EAAmB,CAACD,CAAe,EACtD,CACJ,CAER,EA9BuC,iBDGhC,IAAMG,GAA4DC,EAAA,CAAC,CACtE,SAAAC,EACA,OAAAC,CACJ,IAAM,CACF,IAAMC,KAAe,0BAAsB,EACrC,CAAE,KAAMC,CAAK,KAAI,mBAAe,CAClC,+BAAgC,GAAQD,GAAA,MAAAA,EAAc,SAC1D,CAAC,EAEKE,KAAU,sBACZ,yBACA,uBACJ,EAEIC,EAAwB,CAAC,EAC7B,SAAI,sBAAkBJ,EAAQD,CAAQ,IAClCK,EAAc,CACV,SAAU,SACV,IAAK,EACL,OAAQ,CACZ,GAIA,GAAAC,QAAA,cAAC,QACG,GAAG,IACH,GAAG,IACH,QAAQ,OACR,WAAW,SACX,EAAE,OACF,OAAO,OACP,GAAIF,EACJ,aAAa,MACb,qBAAmB,sBAAkB,WAAY,UAAU,EAC1D,GAAGC,GAEJ,GAAAC,QAAA,cAAC,QACG,EAAE,OACF,QAAQ,OACR,eAAe,gBACf,WAAW,UAEX,GAAAA,QAAA,cAACC,GAAA,IAAc,EACf,GAAAD,QAAA,cAAC,gBACIH,GAAA,YAAAA,EAAM,OACH,GAAAG,QAAA,cAAC,SACG,KAAK,KACL,WAAW,OACX,cAAY,oBAEXH,EAAK,IACV,GAEHA,GAAA,YAAAA,EAAM,SACH,GAAAG,QAAA,cAAC,WACG,KAAK,KACL,MAAMH,GAAA,YAAAA,EAAM,OAAQ,gBACpB,IAAKA,EAAK,OACd,CAER,CACJ,CACJ,CAER,EAhEyE,kBPTlE,IAAMK,GAAsDC,EAAA,CAAC,CAChE,MAAAC,EACA,OAAAC,EACA,MAAAC,EACA,OAAAC,EACA,cAAAC,EACA,SAAAC,EACA,sBAAAC,CACJ,IAKQ,GAAAC,QAAA,cAACC,GAAA,CACG,sBAAuBF,GAEvB,GAAAC,QAAA,cAAC,QAAI,QAAQ,QACT,GAAAA,QAAA,cARUP,GAASS,GAQlB,CAAc,MAAOP,EAAO,EAC7B,GAAAK,QAAA,cAAC,QACG,QAAQ,OACR,cAAc,SACd,KAAM,EACN,KAAK,QACL,SAAS,QAET,GAAAA,QAAA,cAfON,GAAUS,GAehB,IAAe,EAChB,GAAAH,QAAA,cAAC,QAAI,EAAG,CAAC,EAAG,CAAC,GAAIF,CAAS,EACzBF,GAAU,GAAAI,QAAA,cAACJ,EAAA,IAAO,CACvB,EACCC,GAAiB,GAAAG,QAAA,cAACH,EAAA,IAAc,CACrC,CACJ,EA/B2D,kBSRnE,IAAAO,GAAkB,oBAClBC,GAMO,2BAEPD,GAA6B,4BAI7B,IAAAE,GAA2C,+BAEpC,IAAMC,GAA4BC,EAACC,GAAU,CAChD,GAAM,CACF,UAAAC,EACA,SAAAC,EACA,kBAAmBC,EACnB,SAAUC,EACV,aAAAC,EACA,aAAAC,EACA,YAAAC,EACA,kBAAAC,EACA,cAAeC,EACf,WAAYC,EACZ,MAAAC,CACJ,EAAIX,EACEY,KAAY,iBAAa,EACzB,CAAE,QAAS,CAAE,WAAYC,CAAiB,EAAI,CAAC,CAAE,KACnD,qBAAiB,EAEfC,KAAa,kBAAc,EAC3BC,KAAsB,wBAAoB,EAE1C,CAAE,SAAAC,EAAU,WAAAC,CAAW,KAAI,gBAAYb,CAAiB,EAExDc,EACFjB,MACEe,GAAA,YAAAA,EAAU,YAAa,CAAC,EAACA,GAAA,MAAAA,EAAU,UACjCb,GAEFgB,EACF,OAAOT,EAAwB,IACzBG,EACAH,EAEJU,EACFF,EACM,CACI,SACIJ,IAAe,SAAWE,GAAA,YAAAA,EAAU,MAAQC,EAChD,GAAGd,CACP,EACA,OAEJkB,EAAuBH,EACzB,GAAAI,QAAA,cAACC,GAAA,CAAc,GAAGH,EAAmB,EACrC,KAEEI,EAAgBf,EAChB,OAAOA,GAA2B,WAC9BA,EAAuB,CACnB,eAAgBY,EAChB,kBAAAD,CACJ,CAAC,EACDX,EACJY,EAEAI,EAAc1B,EAAA,IAAM,CAtE9B,IAAA2B,EAAAC,EAuEQ,OAAIhB,IAAU,GAAc,KAExBA,EACI,OAAOA,GAAU,UAAY,OAAOA,GAAU,SAE1C,GAAAW,QAAA,cAAC,YACG,GAAG,KACH,KAAK,KACL,UAAW,8BAA2B,OAErCX,CACL,EAIDA,EAIP,GAAAW,QAAA,cAAC,YACG,GAAG,KACH,KAAK,KACL,UAAW,8BAA2B,OAErCV,EACG,GAAGK,gBACHF,IACIW,EAAAV,GAAA,YAAAA,EAAU,OAAV,YAAAU,EAAgB,UACZC,EAAAX,GAAA,YAAAA,EAAU,UAAV,YAAAW,EAAmB,SACnBX,GAAA,YAAAA,EAAU,QACVC,EACJ,QACJ,CACJ,CACJ,CAER,EArCoB,eAuCpB,OACI,GAAAK,QAAA,cAAC,QACG,GAAG,iBACH,aAAa,KACb,GAAG,IACH,GAAG,IACF,GAAGjB,GAEJ,GAAAiB,QAAA,cAAC,QACG,GAAG,IACH,QAAQ,OACR,eAAe,gBACf,WAAW,SACX,SAAU,CAAE,KAAM,OAAQ,GAAI,QAAS,EACvC,IAAI,IACH,GAAGf,GAEJ,GAAAe,QAAA,cAAC,QAAI,KAAM,KACN,OAAOH,EAAe,IACnB,GAAAG,QAAA,iBAAAA,QAAA,cAAGH,CAAW,GAAO,OAErB,GAAAG,QAAA,cAACM,GAAA,IAAW,EAEfH,EAAY,CACjB,EACA,GAAAH,QAAA,cAAC,QACG,QAAQ,OACR,SAAS,OACT,eAAgB,CAAE,KAAM,aAAc,GAAI,UAAW,EACrD,IAAI,IACH,GAAGd,GAEHgB,CACL,CACJ,EACA,GAAAF,QAAA,cAAC,QAAK,GAAGhB,GAAeJ,CAAS,CACrC,CAER,EApIyC,QCfzC,IAAA2B,EAAkB,oBAClBC,GAUO,2BACPD,GAA0D,4BAG1DE,GAA8B,yBAc9B,IAAAC,GAA2C,+BAEpC,IAAMC,GAA4BC,EAACC,GAAU,CA/BpD,IAAAC,GAgCI,GAAM,CACF,SAAAC,EACA,SAAUC,EACV,aAAAC,EACA,UAAAC,EACA,QAAAC,EACA,iBAAAC,EACA,UAAAC,EACA,cAAeC,EACf,kBAAAC,EACA,cAAeC,EACf,kBAAAC,EACA,aAAAC,EACA,aAAAC,EACA,YAAAC,EACA,OAAQC,EACR,WAAYC,EACZ,MAAAC,CACJ,EAAIlB,EACEmB,KAAY,iBAAa,EACzB,CAAE,QAAS,CAAE,WAAYC,CAAiB,EAAI,CAAC,CAAE,KACnD,qBAAiB,EAEfC,KAAa,kBAAc,EAC3BC,KAAO,YAAQ,EACfC,KAAK,UAAM,EACX,CAAE,OAAAC,EAAQ,KAAMC,CAAa,KAAI,kBAAc,EAC/CC,KAAsB,wBAAoB,EAE1C,CACF,SAAAC,EACA,OAAAC,EACA,GAAIC,EACJ,WAAAC,CACJ,KAAI,gBAAY3B,CAAiB,EAE3B4B,KAAa,cAAU,CACzB,SAAAJ,EACA,OAAQ,MACZ,CAAC,EAEKK,EAAK5B,GAAgByB,EAErBI,EACF,OAAOhB,EAAwB,IACzBG,EACAH,EAEJiB,IAAUP,GAAA,YAAAA,EAAU,OAAQ,CAACvB,EAC7B+B,GACF9B,KAAaJ,GAAA0B,GAAA,YAAAA,EAAU,OAAV,YAAA1B,GAAgB,aAAa0B,GAAA,YAAAA,EAAU,WAClDS,GACF9B,IAAWqB,GAAA,YAAAA,EAAU,UAAW,CAAC,EAACA,GAAA,MAAAA,EAAU,MAE1CU,GAA+CH,GAC/C,CACI,GAAI1B,EAAY,CAAE,SAAU,EAAK,EAAI,CAAC,EACtC,SAAUa,IAAe,SAAWM,GAAA,YAAAA,EAAU,MAAQG,CAC1D,EACA,OACAQ,GAA+CF,GAC/C,CACI,YAAa,QACb,GAAI5B,EAAY,CAAE,SAAU,EAAK,EAAI,CAAC,EACtC,SAAUa,IAAe,SAAWM,GAAA,YAAAA,EAAU,MAAQG,EACtD,aAAcE,CAClB,EACA,OACAO,GACFJ,GACM,CACI,GAAI3B,EAAY,CAAE,SAAU,EAAK,EAAI,CAAC,EACtC,SACIa,IAAe,SAAWM,GAAA,YAAAA,EAAU,MAAQG,EAChD,aAAcE,EACd,UAAW,IAAM,CACTX,IAAe,SACfI,GAAaE,GAAA,YAAAA,EAAU,SAASA,GAAA,YAAAA,EAAU,OAAQ,EAAE,EAEpDJ,EAAG,CAAE,GAAIQ,CAAW,CAAC,CAE7B,EACA,iBAAAxB,CACJ,EACA,OACJiC,GAAyC,CAC3C,GAAIhC,EAAY,CAAE,SAAU,EAAK,EAAI,CAAC,EACtC,SAAUa,IAAe,SAAWM,GAAA,YAAAA,EAAU,MAAQG,EACtD,aAAcE,EACd,iBAAAzB,CACJ,EAEMkC,GACF,EAAAC,QAAA,gBAAAA,QAAA,cACKL,IAAmB,EAAAK,QAAA,cAACC,GAAA,CAAY,GAAGN,GAAiB,EACpDD,IACG,EAAAM,QAAA,cAACE,GAAA,CAAW,YAAY,QAAS,GAAGN,GAAiB,EAExDH,IAAyB,EAAAO,QAAA,cAACG,GAAA,CAAc,GAAGN,GAAmB,EAC/D,EAAAG,QAAA,cAACI,GAAA,CAAe,GAAGN,GAAoB,CAC3C,EAGEO,GACF/B,IAA8B,KAAQ,KAClC,EAAA0B,QAAA,cAAC,eACG,aAAW,OACX,QAAQ,QACR,KAAK,KACL,QACId,IAAW,QAAU,OAAOA,EAAW,IACjCP,IAAe,SACXG,EACAF,EACJ,QAGT,OAAON,EAAoB,IACxBA,EAEA,EAAA0B,QAAA,cAAC,qBAAc,CAEvB,EAGFM,GAAgBrC,EAChB,OAAOA,GAA2B,WAC9BA,EAAuB,CACnB,eAAgB8B,GAChB,kBAAAF,GACA,gBAAAD,GACA,gBAAAD,GACA,mBAAAG,EACJ,CAAC,EACD7B,EACJ8B,GAEAQ,GAAgBxC,EAChB,OAAOA,GAA2B,WAC9BA,EAAuB,CAAE,eAAgB,IAAK,CAAC,EAC/CA,EACJ,KAEAyC,GAAcnD,EAAA,IAAM,CA/K9B,IAAAE,GAAAkD,GAgLQ,OAAIjC,IAAU,GAAc,KAExBA,EACI,OAAOA,GAAU,UAAY,OAAOA,GAAU,SAE1C,EAAAwB,QAAA,cAAC,YACG,GAAG,KACH,KAAK,KACL,UAAW,8BAA2B,OAErCxB,CACL,EAIDA,EAIP,EAAAwB,QAAA,cAAC,YACG,GAAG,KACH,KAAK,KACL,UAAW,8BAA2B,OAErCvB,EACG,GAAGW,gBACH,QAAQJ,IACJzB,GAAA0B,GAAA,YAAAA,EAAU,OAAV,YAAA1B,GAAgB,UACZkD,GAAAxB,GAAA,YAAAA,EAAU,UAAV,YAAAwB,GAAmB,SACnBxB,GAAA,YAAAA,EAAU,QACVG,EACJ,UACJ,GACJ,CACJ,CAER,EArCoB,eAuCpB,OACI,EAAAY,QAAA,cAAC,QACG,SAAS,WACT,GAAG,iBACH,aAAa,KACb,GAAG,IACH,GAAG,IACF,GAAG7B,GAEHL,GACG,EAAAkC,QAAA,cAAC,YACG,SAAS,WACT,IAAI,MACJ,KAAK,MACL,UAAU,wBACd,EAEJ,EAAAA,QAAA,cAAC,QACG,GAAG,IACH,QAAQ,OACR,eAAe,gBACf,WAAW,SACX,SAAU,CAAE,KAAM,OAAQ,GAAI,QAAS,EACvC,IAAI,IACH,GAAG3B,GAEJ,EAAA2B,QAAA,cAAC,QAAI,KAAM,KACN,OAAOT,EAAe,IACnB,EAAAS,QAAA,gBAAAA,QAAA,cAAGT,CAAW,GAAO,OAErB,EAAAS,QAAA,cAACU,GAAA,IAAW,EAEhB,EAAAV,QAAA,cAAC,eACIK,GACAG,GAAY,CACjB,CACJ,EACA,EAAAR,QAAA,cAAC,QACG,QAAQ,OACR,SAAS,OACT,eAAgB,CAAE,KAAM,aAAc,GAAI,UAAW,EACrD,IAAI,IACH,GAAG9B,GAEHoC,EACL,CACJ,EACA,EAAAN,QAAA,cAAC,QAAI,QAASlC,EAAY,GAAM,OAAY,GAAGM,GAC1CZ,CACL,EACA,EAAAwC,QAAA,cAAC,QACG,QAAQ,OACR,eAAe,WACf,IAAI,IACJ,GAAI,EACH,GAAGhC,GAEHuC,EACL,CACJ,CAER,EApPyC,QC/BzC,IAAAI,EAAkB,oBAElBC,EAWO,2BAEPD,GAA0D,4BAG1DE,GAA8B,yBAe9B,IAAAC,GAA2C,+BAEpC,IAAMC,GAA4BC,EAACC,GAAU,CAnCpD,IAAAC,GAoCI,GAAM,CACF,SAAAC,EACA,SAAUC,EACV,aAAAC,EACA,kBAAmBC,EACnB,aAAcC,EACd,gBAAiBC,EACjB,UAAAC,EACA,iBAAAC,EACA,UAAAC,EACA,cAAeC,EACf,kBAAAC,EACA,cAAeC,EACf,kBAAAC,EACA,aAAAC,EACA,aAAAC,EACA,YAAAC,EACA,OAAQC,EACR,WAAYC,EACZ,MAAAC,EACA,cAAAC,CACJ,EAAIrB,EACEsB,KAAY,gBAAa,EACzB,CAAE,QAAS,CAAE,WAAYC,CAAiB,EAAI,CAAC,CAAE,KACnD,oBAAiB,EACf,CAAE,aAAcC,CAAoB,KAAI,mBAAgB,EACxDC,EAAenB,GAAyBkB,EAExCE,KAAa,iBAAc,EAC3BC,KAAO,WAAQ,EACfC,KAAK,SAAM,EACX,CAAE,OAAAC,EAAQ,KAAMC,CAAa,KAAI,iBAAc,EAC/CC,KAAsB,uBAAoB,EAE1C,CACF,SAAAC,EACA,OAAAC,EACA,GAAIC,GACJ,WAAAC,EACJ,KAAI,eAAYhC,CAAiB,EAE3BiC,MAAa,aAAU,CACzB,SAAAJ,EACA,OAAQ,MACZ,CAAC,EAEKK,GAAKjC,GAAgB8B,GAErBI,GACF,OAAOnB,EAAwB,IACzBI,EACAJ,EAEJoB,IAAUP,GAAA,YAAAA,EAAU,OAAQ,CAAC5B,EAC7BoC,GACFhC,OACEP,GAAA+B,GAAA,YAAAA,EAAU,OAAV,YAAA/B,GAAgB,aAAa+B,GAAA,YAAAA,EAAU,aACrC3B,GAEFoC,GAA+CF,GAC/C,CACI,GAAI7B,EAAY,CAAE,SAAU,EAAK,EAAI,CAAC,EACtC,SAAUgB,IAAe,SAAWM,GAAA,YAAAA,EAAU,MAAQG,EAC1D,EACA,OAEAO,GAAqD,CACvD,GAAIhC,EAAY,CAAE,SAAU,EAAK,EAAI,CAAC,EACtC,SAAUgB,IAAe,SAAWM,GAAA,YAAAA,EAAU,MAAQG,GACtD,aAAcE,GACd,iBAAA5B,CACJ,EAEMkC,GACFH,GACO,CACG,GAAI9B,EAAY,CAAE,SAAU,EAAK,EAAI,CAAC,EACtC,SACIgB,IAAe,SAAWM,GAAA,YAAAA,EAAU,MAAQG,GAChD,aAAAV,EACA,UAAW,IAAM,CACTC,IAAe,SACfI,GAAaE,GAAA,YAAAA,EAAU,SAASA,GAAA,YAAAA,EAAU,OAAQ,EAAE,EAEpDJ,EAAG,CAAE,GAAIQ,EAAW,CAAC,CAE7B,EACA,aAAcC,GACd,iBAAA5B,EACA,GAAGJ,CACP,EACA,OAEJuC,GAAmC,CACrC,GAAIlC,EAAY,CAAE,SAAU,EAAK,EAAI,CAAC,EACtC,GAAGH,CACP,EAEMsC,GACF,EAAAC,QAAA,cAAC,QAAI,QAAQ,OAAO,cAAc,MAAM,WAAW,SAAS,IAAI,KAC3DzB,GAAiB,EAAAyB,QAAA,cAACC,GAAA,CAAmB,GAAG1B,EAAe,EACvDkB,IAAW,EAAAO,QAAA,cAACE,GAAA,CAAY,GAAGP,GAAiB,EAC7C,EAAAK,QAAA,cAACG,GAAA,CAAe,GAAGP,GAAoB,CAC3C,EAGEQ,GACF,EAAAJ,QAAA,gBAAAA,QAAA,cACKN,IAAyB,EAAAM,QAAA,cAACK,GAAA,CAAc,GAAGR,GAAmB,EAC/D,EAAAG,QAAA,cAACM,GAAA,CAAY,GAAGR,GAAiB,CACrC,EAGES,GACFnC,IAA8B,KAAQ,KAClC,EAAA4B,QAAA,cAAC,eACG,aAAW,OACX,QAAQ,QACR,KAAK,KACL,QACIb,IAAW,QAAU,OAAOA,EAAW,IACjCP,IAAe,SACXG,EACAF,EACJ,QAGT,OAAOT,EAAoB,IACxBA,EAEA,EAAA4B,QAAA,cAAC,qBAAc,CAEvB,EAGFQ,GAAgBzC,EAChB,OAAOA,GAA2B,WAC9BA,EAAuB,CACnB,eAAgBgC,GAChB,gBAAAJ,GACA,mBAAAC,EACJ,CAAC,EACD7B,EACJgC,GAEAU,GAAgB5C,EAChB,OAAOA,GAA2B,WAC9BA,EAAuB,CACnB,eAAgBuC,GAChB,kBAAAP,GACA,gBAAAC,EACJ,CAAC,EACDjC,EACJuC,GAEAM,GAAczD,EAAA,IAAM,CA/L9B,IAAAE,GAAAwD,GAgMQ,OAAIrC,IAAU,GAAc,KAExBA,EACI,OAAOA,GAAU,UAAY,OAAOA,GAAU,SAE1C,EAAA0B,QAAA,cAAC,YACG,GAAG,KACH,KAAK,KACL,UAAW,8BAA2B,OAErC1B,CACL,EAIDA,EAIP,EAAA0B,QAAA,cAAC,YACG,GAAG,KACH,KAAK,KACL,UAAW,8BAA2B,OAErCxB,EACG,GAAGa,iBACH,QAAQJ,IACJ9B,GAAA+B,GAAA,YAAAA,EAAU,OAAV,YAAA/B,GAAgB,UACZwD,GAAAzB,GAAA,YAAAA,EAAU,UAAV,YAAAyB,GAAmB,SACnBzB,GAAA,YAAAA,EAAU,QACVG,GACJ,UACJ,GACJ,CACJ,CAER,EArCoB,eAuCpB,OACI,EAAAW,QAAA,cAAC,QACG,SAAS,WACT,GAAG,iBACH,aAAa,KACb,GAAG,IACH,GAAG,IACF,GAAG/B,GAEHL,GACG,EAAAoC,QAAA,cAAC,YACG,SAAS,WACT,IAAI,MACJ,KAAK,MACL,UAAU,wBACd,EAEJ,EAAAA,QAAA,cAAC,QACG,GAAG,IACH,QAAQ,OACR,eAAe,gBACf,WAAW,SACX,SAAU,CAAE,KAAM,OAAQ,GAAI,QAAS,EACvC,IAAI,IACH,GAAG7B,GAEJ,EAAA6B,QAAA,cAAC,QAAI,KAAM,KACN,OAAOR,GAAe,IACnB,EAAAQ,QAAA,gBAAAA,QAAA,cAAGR,EAAW,GAAO,OAErB,EAAAQ,QAAA,cAACY,GAAA,IAAW,EAEhB,EAAAZ,QAAA,cAAC,WAAO,QAAS,GACZO,GACAG,GAAY,CACjB,CACJ,EACA,EAAAV,QAAA,cAAC,QACG,QAAQ,OACR,SAAS,OACT,eAAgB,CAAE,KAAM,aAAc,GAAI,UAAW,EACrD,IAAI,IACH,GAAGhC,GAEHwC,EACL,CACJ,EACA,EAAAR,QAAA,cAAC,QAAI,QAASpC,EAAY,GAAM,OAAY,GAAGM,GAC1Cd,CACL,EACA,EAAA4C,QAAA,cAAC,QACG,QAAQ,OACR,eAAe,WACf,IAAI,IACJ,GAAI,EACH,GAAGlC,GAEH2C,EACL,CACJ,CAER,EAhQyC,QCnCzC,IAAAI,GAAkB,oBAClBC,GAQO,2BACPD,GAA0D,4BAG1DE,GAA8B,yBAI9B,IAAAC,GAA2C,+BAEpC,IAAMC,GAAgCC,EAACC,GAAU,CACpD,GAAM,CACF,SAAAC,EACA,gBAAiBC,EACjB,UAAAC,EACA,SAAUC,EACV,cAAeC,EACf,kBAAAC,EACA,cAAeC,EACf,kBAAAC,EACA,aAAAC,EACA,aAAAC,EACA,YAAAC,EACA,OAAQC,EACR,WAAYC,EACZ,MAAAC,CACJ,EAAId,EACEe,KAAY,iBAAa,EACzB,CAAE,QAAS,CAAE,WAAYC,CAAiB,EAAI,CAAC,CAAE,KACnD,qBAAiB,EAEfC,KAAa,kBAAc,EAC3BC,KAAO,YAAQ,EACf,CAAE,OAAAC,CAAO,KAAI,kBAAc,EAC3BC,KAAsB,wBAAoB,EAE1C,CAAE,SAAAC,EAAU,OAAAC,EAAQ,WAAAC,CAAW,KAAI,gBAAYnB,CAAiB,EAEhEoB,EACF,OAAOX,EAAwB,IACzBG,EACAH,EAEJY,EAAmC,CACrC,GAAItB,EAAY,CAAE,SAAU,EAAK,EAAI,CAAC,EACtC,GAAGD,CACP,EAEMwB,EAAuB,GAAAC,QAAA,cAACC,GAAA,CAAY,GAAGH,EAAiB,EAExDI,EACFjB,IAA8B,KAAQ,KAClC,GAAAe,QAAA,cAAC,eACG,aAAW,OACX,QAAQ,QACR,KAAK,KACL,QACIL,IAAW,QAAU,OAAOA,EAAW,IACjCL,IAAe,SACXE,EACAD,EACJ,QAGT,OAAON,EAAoB,IACxBA,EAEA,GAAAe,QAAA,cAAC,qBAAc,CAEvB,EAGFG,EAAgBvB,EAChB,OAAOA,GAA2B,WAC9BA,EAAuB,CACnB,eAAgB,IACpB,CAAC,EACDA,EACJ,KAEAwB,EAAgB1B,EAChB,OAAOA,GAA2B,WAC9BA,EAAuB,CACnB,eAAgBqB,EAChB,gBAAAD,CACJ,CAAC,EACDpB,EACJqB,EAEAM,EAAcjC,EAAA,IAAM,CAlG9B,IAAAkC,EAAAC,EAmGQ,OAAIpB,IAAU,GAAc,KAExBA,EACI,OAAOA,GAAU,UAAY,OAAOA,GAAU,SAE1C,GAAAa,QAAA,cAAC,YACG,GAAG,KACH,KAAK,KACL,UAAW,8BAA2B,OAErCb,CACL,EAIDA,EAIP,GAAAa,QAAA,cAAC,YACG,GAAG,KACH,KAAK,KACL,UAAW,8BAA2B,OAErCZ,EACG,GAAGQ,kBACH,UAAUH,IACNa,EAAAZ,GAAA,YAAAA,EAAU,OAAV,YAAAY,EAAgB,UACZC,EAAAb,GAAA,YAAAA,EAAU,UAAV,YAAAa,EAAmB,SACnBb,GAAA,YAAAA,EAAU,QACVE,EACJ,UACJ,GACJ,CACJ,CAER,EArCoB,eAuCpB,OACI,GAAAI,QAAA,cAAC,QACG,SAAS,WACT,GAAG,iBACH,aAAa,KACb,GAAG,IACH,GAAG,IACF,GAAGlB,GAEHN,GACG,GAAAwB,QAAA,cAAC,YACG,SAAS,WACT,IAAI,MACJ,KAAK,MACL,UAAU,wBACd,EAEJ,GAAAA,QAAA,cAAC,QACG,GAAG,IACH,QAAQ,OACR,eAAe,gBACf,WAAW,SACX,SAAU,CAAE,KAAM,OAAQ,GAAI,QAAS,EACvC,IAAI,IACH,GAAGhB,GAEJ,GAAAgB,QAAA,cAAC,QAAI,KAAM,KACN,OAAOH,EAAe,IACnB,GAAAG,QAAA,iBAAAA,QAAA,cAAGH,CAAW,EAEd,GAAAG,QAAA,cAACQ,GAAA,IAAW,EAEhB,GAAAR,QAAA,cAAC,eACIE,EACAG,EAAY,CACjB,CACJ,EACA,GAAAL,QAAA,cAAC,QACG,QAAQ,OACR,SAAS,OACT,eAAgB,CAAE,KAAM,aAAc,GAAI,UAAW,EACrD,IAAI,IACH,GAAGnB,GAEHsB,CACL,CACJ,EACA,GAAAH,QAAA,cAAC,QAAI,QAASxB,EAAY,GAAM,OAAY,GAAGO,GAC1CT,CACL,EACA,GAAA0B,QAAA,cAAC,QACG,QAAQ,OACR,eAAe,WACf,IAAI,IACJ,GAAG,IACF,GAAGrB,GAEHyB,CACL,CACJ,CAER,EAnL6C,UCnB7C,IAAAK,GAAkC,oBAClCC,GASO,2BACPC,GAGO,+BACPF,GAAmC,4BACnCG,GAA+B,yBAIxB,IAAMC,GAA4CC,EAAA,CAAC,CACtD,SAAUC,EACV,wBAAAC,EACA,SAAAC,EAAW,GACX,cAAAC,EACA,aAAAC,EACA,KAAAC,EACA,SAAAC,EACA,QAAAC,EACA,GAAGC,CACP,IAAM,CACF,IAAMC,KAAuB,eAAW,uBAAoB,EAEtDC,GACFP,GAAA,YAAAA,EAAe,UACfM,EAAqB,QAAQ,QAAQ,oBAEnCE,GACFR,GAAA,YAAAA,EAAe,qBACfM,EAAqB,QAAQ,QAAQ,mBAEnCG,KAAY,iBAAa,EACzBC,KAAa,kBAAc,EAC3BC,KAAO,YAAQ,EACf,CAAE,KAAMC,CAAW,KAAI,qBAAiB,EAExCC,EAAaH,IAAe,SAAWE,EAAaD,EAEpD,CAAE,UAAWG,CAAkB,KAAI,kBAAc,EAEjD,CAAE,SAAAC,CAAS,KAAI,gBACjBlB,GAAyBC,CAC7B,EAEM,CAAE,KAAAkB,CAAK,KAAI,WAAO,CACpB,SAAUD,GAAA,YAAAA,EAAU,KACpB,OAAQ,SACR,aAAc,CACV,QAASR,CACb,EACA,OAAQ,CACJ,SAAAQ,CACJ,CACJ,CAAC,EAEKE,EAAgBrB,EAAA,IACdoB,GAAA,MAAAA,EAAM,IAAY,GACbA,GAAA,MAAAA,EAAM,OAAeA,EAAK,OAExBP,EACH,yBACA,qCACJ,EAPc,iBAUhBS,EAAYH,EAAWD,EAAkBC,EAAUb,CAAI,EAAI,GAEjE,OAAIK,GAAwBC,GAAsB,EAACQ,GAAA,MAAAA,EAAM,KAC9C,KAIP,GAAAG,QAAA,cAACN,EAAA,CACG,GAAIK,EACJ,QAAS,GACT,QAAUE,GAA6C,CAC/ChB,IACAgB,EAAE,eAAe,EACjBhB,EAAQgB,CAAC,EAEjB,GAECrB,EACG,GAAAoB,QAAA,cAAC,eACG,YAAY,QACZ,QAAQ,UACR,aAAYV,EAAU,iBAAkB,QAAQ,EAChD,MAAOQ,EAAc,EACrB,YAAYD,GAAA,YAAAA,EAAM,OAAQ,GAC1B,cAAa,uBAAoB,aACjC,UAAW,0BAAuB,aACjC,GAAGX,GAEJ,GAAAc,QAAA,cAAC,mBAAe,KAAM,GAAK,GAAGlB,EAAc,CAChD,EAEA,GAAAkB,QAAA,cAAC,WACG,YAAY,QACZ,YAAYH,GAAA,YAAAA,EAAM,OAAQ,GAC1B,SAAU,GAAAG,QAAA,cAAC,mBAAe,KAAM,GAAI,EACpC,MAAOF,EAAc,EACrB,cAAa,uBAAoB,aACjC,UAAW,0BAAuB,aACjC,GAAGZ,GAEHF,GAAYM,EAAU,iBAAkB,QAAQ,CACrD,CAER,CAER,EApGyD,gBCpBzD,IAAAY,GAAkC,oBAClCC,GASO,2BACPC,GAGO,+BACPC,GAA2B,yBAC3BH,GAAmC,4BAW5B,IAAMI,GAAwCC,EAAA,CAAC,CAClD,SAAUC,EACV,wBAAAC,EACA,aAAAC,EACA,SAAAC,EAAW,GACX,cAAAC,EACA,aAAAC,EACA,KAAAC,EACA,SAAAC,EACA,QAAAC,EACA,GAAGC,CACP,IAAM,CACF,IAAMC,KAAuB,eAAW,uBAAoB,EAEtDC,GACFP,GAAA,YAAAA,EAAe,UACfM,EAAqB,QAAQ,QAAQ,oBAEnCE,GACFR,GAAA,YAAAA,EAAe,qBACfM,EAAqB,QAAQ,QAAQ,mBAEnCG,KAAY,iBAAa,EAEzBC,KAAa,kBAAc,EAC3BC,KAAO,YAAQ,EACf,CAAE,KAAMC,CAAW,KAAI,qBAAiB,EAExCC,EAAaH,IAAe,SAAWE,EAAaD,EAEpD,CAAE,QAASG,CAAgB,KAAI,kBAAc,EAE7C,CAAE,GAAAC,EAAI,SAAAC,CAAS,KAAI,gBACrBpB,GAAyBC,CAC7B,EAEM,CAAE,KAAAoB,CAAK,KAAI,WAAO,CACpB,SAAUD,GAAA,YAAAA,EAAU,KACpB,OAAQ,OACR,OAAQ,CAAE,GAAIlB,GAAgBiB,EAAI,SAAAC,CAAS,EAC3C,aAAc,CACV,QAAST,CACb,CACJ,CAAC,EAEKW,EAAgBvB,EAAA,IACdsB,GAAA,MAAAA,EAAM,IAAY,GACbA,GAAA,MAAAA,EAAM,OAAeA,EAAK,OAExBR,EACH,yBACA,qCACJ,EAPc,iBAUhBU,EACFH,IAAalB,GAAgBiB,GACvBD,EAAgBE,EAAUlB,GAAiBiB,EAAKb,CAAI,EACpD,GAEV,OAAIK,GAAwBC,GAAsB,EAACS,GAAA,MAAAA,EAAM,KAC9C,KAIP,GAAAG,QAAA,cAACP,EAAA,CACG,GAAIM,EACJ,QAAS,GACT,QAAUE,GAA6C,CAC/CjB,IACAiB,EAAE,eAAe,EACjBjB,EAAQiB,CAAC,EAEjB,GAECtB,EACG,GAAAqB,QAAA,cAAC,eACG,QAAQ,UACR,aAAYX,EAAU,eAAgB,MAAM,EAC5C,MAAOS,EAAc,EACrB,YAAYD,GAAA,YAAAA,EAAM,OAAQ,GAC1B,cAAa,uBAAoB,WACjC,UAAW,0BAAuB,WACjC,GAAGZ,GAEJ,GAAAe,QAAA,cAAC,eAAW,KAAM,GAAK,GAAGnB,EAAc,CAC5C,EAEA,GAAAmB,QAAA,cAAC,WACG,QAAQ,UACR,YAAYH,GAAA,YAAAA,EAAM,OAAQ,GAC1B,SAAU,GAAAG,QAAA,cAAC,eAAW,KAAM,GAAK,GAAGnB,EAAc,EAClD,MAAOiB,EAAc,EACrB,cAAa,uBAAoB,WACjC,UAAW,0BAAuB,WACjC,GAAGb,GAEHF,GAAYM,EAAU,eAAgB,MAAM,CACjD,CAER,CAER,EAtGqD,cC3BrD,IAAAa,GAA4C,oBAC5CC,GASO,2BACPC,GAGO,+BAEPF,GAUO,4BACPG,GAA0B,yBAUnB,IAAMC,GAA4CC,EAAA,CAAC,CACtD,SAAUC,EACV,wBAAAC,EACA,aAAAC,EACA,UAAAC,EACA,aAAcC,EACd,SAAAC,EACA,oBAAAC,EACA,kBAAAC,EACA,SAAAC,EAAW,GACX,cAAAC,EACA,KAAAC,EACA,SAAAC,EACA,iBAAAC,EACA,aAAAC,EACA,cAAAC,EACA,kBAAAC,EACA,aAAAC,EACA,GAAGC,CACP,IAAM,CACF,IAAMC,KAAuB,eAAW,uBAAoB,EAEtDC,GACFV,GAAA,YAAAA,EAAe,UACfS,EAAqB,QAAQ,QAAQ,oBAEnCE,GACFX,GAAA,YAAAA,EAAe,qBACfS,EAAqB,QAAQ,QAAQ,mBAEnCG,KAAY,iBAAa,EAEzB,CAAE,GAAAC,EAAI,SAAAC,EAAU,WAAAC,CAAW,KAAI,gBACjCxB,GAAyBC,CAC7B,EAEM,CAAE,aAAcwB,CAAoB,KAAI,oBAAgB,EAExDC,EAAetB,GAAoBqB,EAEnC,CAAE,OAAAE,EAAQ,UAAAC,EAAW,UAAAC,CAAU,KAAI,cAAU,EAE7C,CAAE,KAAAC,CAAK,KAAI,WAAO,CACpB,SAAUP,GAAA,YAAAA,EAAU,KACpB,OAAQ,SACR,OAAQ,CAAE,GAAIrB,GAAgBoB,EAAI,SAAAC,CAAS,EAC3C,aAAc,CACV,QAASJ,CACb,CACJ,CAAC,EAEKY,EAAgBhC,EAAA,IACd+B,GAAA,MAAAA,EAAM,IAAY,GACbA,GAAA,MAAAA,EAAM,OAAeA,EAAK,OAExBT,EACH,yBACA,qCACJ,EAPc,iBAUhB,CAACW,EAAQC,EAAS,KAAI,aAAS,EAAK,EAEpCC,GAAYnC,EAAA,IAAM,CAChByB,IAAetB,GAAgBoB,KAC/Ba,GAAY,EAAK,EACjBF,GAAU,EAAK,EACfN,EACI,CACI,GAAIzB,GAAgBoB,GAAM,GAC1B,SAAUE,EACV,aAAAE,EACA,oBAAApB,EACA,kBAAAC,EACA,QAAM,sBAAkBG,EAAMC,CAAQ,EACtC,YAAU,sBAAkBD,EAAMC,CAAQ,EAC1C,iBAAAC,CACJ,EACA,CACI,UAAYwB,IAAU,CAClBjC,GAAaA,EAAUiC,EAAK,CAChC,CACJ,CACJ,EAER,EAtBkB,aAwBZ,CAAE,YAAAD,EAAY,KAAI,uBAAmB,EAE3C,OAAIhB,GAAwBC,GAAsB,EAACU,GAAA,MAAAA,EAAM,KAC9C,KAIP,GAAAO,QAAA,cAAC,YAAQ,OAAQL,EAAQ,OAAM,IAC3B,GAAAK,QAAA,cAAC,uBACI7B,EACG,GAAA6B,QAAA,cAAC,eACG,YAAY,MACZ,QAAQ,UACR,aAAYhB,EAAU,eAAgB,MAAM,EAC5C,QAAS,IAAMY,GAAWK,IAAM,CAACA,EAAC,EAClC,WAAYV,IAAaE,GAAA,YAAAA,EAAM,OAAQ,GACvC,WACK5B,GAAgBoB,MAAQO,GAAA,YAAAA,EAAW,KAAMD,EAE9C,cAAa,uBAAoB,aACjC,UAAW,0BAAuB,aACjC,GAAGX,GAEJ,GAAAoB,QAAA,cAAC,cAAU,KAAM,GAAK,GAAGrB,EAAc,CAC3C,EAEA,GAAAqB,QAAA,cAAC,WACG,YAAY,MACZ,QAAQ,UACR,QAAS,IAAMJ,GAAWK,IAAM,CAACA,EAAC,EAClC,WAAYV,IAAaE,GAAA,YAAAA,EAAM,OAAQ,GACvC,UAAWR,KAAOO,GAAA,YAAAA,EAAW,KAAMD,EACnC,SAAU,GAAAS,QAAA,cAAC,cAAU,KAAM,GAAK,GAAGrB,EAAc,EACjD,MAAOe,EAAc,EACrB,cAAa,uBAAoB,aACjC,UAAW,0BAAuB,aACjC,GAAGd,GAEHZ,GAAYgB,EAAU,iBAAkB,QAAQ,CACrD,CAER,EACA,GAAAgB,QAAA,cAAC,uBACG,GAAAA,QAAA,cAAC,oBAAa,EACd,GAAAA,QAAA,cAAC,kBAAc,UAAU,UACpBxB,GACGQ,EAAU,kBAAmB,eAAe,CACpD,EACA,GAAAgB,QAAA,cAAC,gBAAY,QAAQ,OAAO,eAAe,UACvC,GAAAA,QAAA,cAAC,eACG,GAAAA,QAAA,cAAC,WAAO,QAAS,IAAMJ,GAAU,EAAK,EAAG,KAAK,MACzClB,GACGM,EAAU,iBAAkB,QAAQ,CAC5C,EACA,GAAAgB,QAAA,cAAC,WACG,YAAY,MACZ,QAASH,GACT,UAAS,GACT,KAAK,MAEJpB,GACGO,EAAU,iBAAkB,QAAQ,CAC5C,CACJ,CACJ,CACJ,CACJ,CAER,EA3JyD,gBCrCzD,IAAAkB,GAAkB,oBAClBC,GAMO,2BACPC,GAGO,+BACPF,GAAmC,4BACnCG,GAA4B,yBAI5BC,GAA+B,iCAQxB,IAAMC,GAA8CC,EAAA,CAAC,CACxD,SAAUC,EACV,wBAAAC,EACA,aAAAC,EACA,SAAAC,EAAW,GACX,iBAAAC,EACA,aAAAC,EACA,SAAAC,EACA,QAAAC,EACA,KAAMC,EACN,SAAUC,EACV,GAAGC,CACP,IAAM,CACF,IAAMC,KAAY,iBAAa,EAEzBC,KAAc,mBAAe,EAC7BC,KAAc,kBAAc,EAE5B,CAAE,UAAAC,EAAW,WAAAC,EAAY,GAAAC,CAAG,KAAI,gBAClChB,GAAyBC,CAC7B,EAEMgB,EAAiB,CAAC,CAACL,EAAY,WAAW,CAC5C,YAAU,cACNG,KACA,qBAAiBA,EAAYX,EAAkBU,CAAS,CAC5D,EAAE,OAAOZ,GAAgBc,CAAE,CAC/B,CAAC,EAEKE,EAAmBnB,EAAA,IAAM,CAC3Bc,EAAY,CACR,GAAIX,GAAgBc,EACpB,YAAa,CAAC,QAAQ,EACtB,iBAAAZ,EACA,SAAUW,CACd,CAAC,CACL,EAPyB,oBASzB,OAAOZ,EACH,GAAAgB,QAAA,cAAC,eACG,QAAQ,UACR,aAAYR,EAAU,kBAAmB,SAAS,EAClD,QAAUS,GAA6C,CACnDb,EAAUA,EAAQa,CAAC,EAAIF,EAAiB,CAC5C,EACA,UAAWD,EACX,cAAa,uBAAoB,cACjC,UAAW,0BAAuB,cACjC,GAAGP,GAEJ,GAAAS,QAAA,cAAC,gBAAY,KAAM,GAAK,GAAGd,EAAc,CAC7C,EAEA,GAAAc,QAAA,cAAC,WACG,QAAQ,UACR,SAAU,GAAAA,QAAA,cAAC,gBAAY,KAAM,GAAK,GAAGd,EAAc,EACnD,UAAWY,EACX,QAAUG,GAA6C,CACnDb,EAAUA,EAAQa,CAAC,EAAIF,EAAiB,CAC5C,EACA,cAAa,uBAAoB,cACjC,UAAW,0BAAuB,cACjC,GAAGR,GAEHJ,GAAYK,EAAU,kBAAmB,SAAS,CACvD,CAER,EAnE2D,iBCzB3D,IAAAU,GAAkC,oBAClCC,GASO,2BACPC,GAGO,+BACPF,GAAmC,4BACnCG,GAAwB,yBAWjB,IAAMC,GAAwCC,EAAA,CAAC,CAClD,SAAUC,EACV,wBAAAC,EACA,aAAAC,EACA,SAAAC,EAAW,GACX,cAAAC,EACA,aAAAC,EACA,KAAAC,EACA,SAAAC,EACA,QAAAC,EACA,GAAGC,CACP,IAAM,CACF,IAAMC,KAAuB,eAAW,uBAAoB,EAEtDC,GACFP,GAAA,YAAAA,EAAe,UACfM,EAAqB,QAAQ,QAAQ,oBAEnCE,GACFR,GAAA,YAAAA,EAAe,qBACfM,EAAqB,QAAQ,QAAQ,mBACnC,CAAE,QAASG,CAAgB,KAAI,kBAAc,EAC7CC,KAAa,kBAAc,EAC3BC,KAAO,YAAQ,EACf,CAAE,KAAMC,CAAW,KAAI,qBAAiB,EAExCC,EAAaH,IAAe,SAAWE,EAAaD,EAEpDG,KAAY,iBAAa,EAEzB,CAAE,GAAAC,EAAI,SAAAC,CAAS,KAAI,gBACrBpB,GAAyBC,CAC7B,EAEM,CAAE,KAAAoB,CAAK,KAAI,WAAO,CACpB,SAAUD,GAAA,YAAAA,EAAU,KACpB,OAAQ,OACR,OAAQ,CAAE,GAAIlB,GAAgBiB,EAAI,SAAAC,CAAS,EAC3C,aAAc,CACV,QAAST,CACb,CACJ,CAAC,EAEKW,EAAgBvB,EAAA,IACdsB,GAAA,MAAAA,EAAM,IAAY,GACbA,GAAA,MAAAA,EAAM,OAAeA,EAAK,OAExBH,EACH,yBACA,qCACJ,EAPc,iBAUhBK,EACFH,IAAalB,GAAgBiB,GACvBN,EAAgBO,EAAUlB,GAAiBiB,EAAKb,CAAI,EACpD,GAEV,OAAIK,GAAwBC,GAAsB,EAACS,GAAA,MAAAA,EAAM,KAC9C,KAIP,GAAAG,QAAA,cAACP,EAAA,CACG,GAAIM,EACJ,QAAS,GACT,QAAUE,GAA6C,CAC/CjB,IACAiB,EAAE,eAAe,EACjBjB,EAAQiB,CAAC,EAEjB,GAECtB,EACG,GAAAqB,QAAA,cAAC,eACG,QAAQ,UACR,aAAYN,EAAU,eAAgB,MAAM,EAC5C,YAAYG,GAAA,YAAAA,EAAM,OAAQ,GAC1B,MAAOC,EAAc,EACrB,cAAa,uBAAoB,WACjC,UAAW,0BAAuB,WACjC,GAAGb,GAEJ,GAAAe,QAAA,cAAC,YAAQ,KAAM,GAAK,GAAGnB,EAAc,CACzC,EAEA,GAAAmB,QAAA,cAAC,WACG,QAAQ,UACR,YAAYH,GAAA,YAAAA,EAAM,OAAQ,GAC1B,SAAU,GAAAG,QAAA,cAAC,YAAQ,KAAM,GAAK,GAAGnB,EAAc,EAC/C,MAAOiB,EAAc,EACrB,cAAa,uBAAoB,WACjC,UAAW,0BAAuB,WACjC,GAAGb,GAEHF,GAAYW,EAAU,eAAgB,MAAM,CACjD,CAER,CAER,EApGqD,cC3BrD,IAAAQ,GAAkC,oBAClCC,GAWO,2BACPC,GAGO,+BACPF,GAAmC,4BACnCG,GAAyB,yBAWlB,IAAMC,GAAwCC,EAAA,CAAC,CAClD,SAAUC,EACV,wBAAAC,EACA,SAAAC,EAAW,GACX,cAAAC,EACA,aAAAC,EACA,KAAAC,EACA,SAAAC,EACA,QAAAC,EACA,GAAGC,CACP,IAAM,CAvCN,IAAAC,EAAAC,EAwCI,IAAMC,KAAuB,eAAW,uBAAoB,EAEtDC,GACFT,GAAA,YAAAA,EAAe,UACfQ,EAAqB,QAAQ,QAAQ,oBAEnCE,GACFV,GAAA,YAAAA,EAAe,qBACfQ,EAAqB,QAAQ,QAAQ,mBACnC,CAAE,QAASG,CAAgB,KAAI,kBAAc,EAC7CC,KAAa,kBAAc,EAC3BC,KAAO,YAAQ,EACf,CAAE,KAAMC,CAAW,KAAI,qBAAiB,EACxCC,KAAsB,wBAAoB,EAE1CC,EAAaJ,IAAe,SAAWE,EAAaD,EAEpDI,KAAY,iBAAa,EAEzB,CAAE,SAAAC,EAAU,WAAAC,CAAW,KAAI,gBAC7BtB,GAAyBC,CAC7B,EAEM,CAAE,KAAAsB,CAAK,KAAI,WAAO,CACpB,SAAUF,GAAA,YAAAA,EAAU,KACpB,OAAQ,OACR,aAAc,CACV,QAAST,CACb,EACA,OAAQ,CACJ,SAAAS,CACJ,CACJ,CAAC,EAEKG,EAAgBzB,EAAA,IACdwB,GAAA,MAAAA,EAAM,IAAY,GACbA,GAAA,MAAAA,EAAM,OAAeA,EAAK,OAExBH,EACH,yBACA,qCACJ,EAPc,iBAUhBK,EAAUJ,EAAWP,EAAgBO,EAAUhB,CAAI,EAAI,GAE7D,OAAIO,GAAwBC,GAAsB,EAACU,GAAA,MAAAA,EAAM,KAC9C,KAIP,GAAAG,QAAA,cAACP,EAAA,CACG,GAAIM,EACJ,QAAS,GACT,QAAUE,GAA6C,CAC/CpB,IACAoB,EAAE,eAAe,EACjBpB,EAAQoB,CAAC,EAEjB,GAECzB,EACG,GAAAwB,QAAA,cAAC,eACG,QAAQ,UACR,aAAYN,EACR,GAAGE,gBACHJ,IACIT,EAAAY,GAAA,YAAAA,EAAU,OAAV,YAAAZ,EAAgB,SACZY,GAAA,YAAAA,EAAU,QACVC,GACArB,EACJ,QACJ,CACJ,EACA,YAAYsB,GAAA,YAAAA,EAAM,OAAQ,GAC1B,MAAOC,EAAc,EACrB,cAAa,uBAAoB,WACjC,UAAW,0BAAuB,WACjC,GAAGhB,GAEJ,GAAAkB,QAAA,cAAC,aAAS,KAAM,GAAK,GAAGtB,EAAc,CAC1C,EAEA,GAAAsB,QAAA,cAAC,WACG,QAAQ,UACR,YAAYH,GAAA,YAAAA,EAAM,OAAQ,GAC1B,SAAU,GAAAG,QAAA,cAAC,aAAS,KAAM,GAAK,GAAGtB,EAAc,EAChD,MAAOoB,EAAc,EACrB,cAAa,uBAAoB,WACjC,UAAW,0BAAuB,WACjC,GAAGhB,GAEHF,GACGc,EACI,GACIE,GACAtB,GACAC,gBAEJiB,IACIR,EAAAW,GAAA,YAAAA,EAAU,OAAV,YAAAX,EAAgB,SACZW,GAAA,YAAAA,EAAU,QACVC,MACA,sBACItB,EACAC,CACJ,EACJ,QACJ,CACJ,CACR,CAER,CAER,EA7HqD,cC7BrD,IAAA2B,GAAkB,oBAClBC,GAA6B,2BAC7BC,GAGO,+BACPF,GAAmC,4BACnCG,GAA+B,yBAUxB,IAAMC,GAA4CC,EAAA,CAAC,CACtD,SAAAC,EAAW,GACX,SAAAC,EACA,QAAAC,EAAU,GACV,aAAAC,EACA,GAAGC,CACP,IAAM,CACF,IAAMC,KAAY,iBAAa,EAE/B,OAAOL,EACH,GAAAM,QAAA,cAAC,eACG,QAAQ,UACR,aAAYD,EAAU,iBAAkB,QAAQ,EAChD,UAAWH,EACX,cAAa,uBAAoB,aACjC,UAAW,0BAAuB,aACjC,GAAGE,GAEJ,GAAAE,QAAA,cAAC,mBAAe,KAAM,GAAK,GAAGH,EAAc,CAChD,EAEA,GAAAG,QAAA,cAAC,WACG,QAAQ,UACR,UAAWJ,EACX,SAAU,GAAAI,QAAA,cAAC,mBAAe,KAAM,GAAK,GAAGH,EAAc,EACtD,cAAa,uBAAoB,aACjC,UAAW,0BAAuB,aACjC,GAAGC,GAEHH,GAAYI,EAAU,iBAAkB,QAAQ,CACrD,CAER,EAhCyD,gBCjBzD,IAAAE,GAAkB,oBAClBC,GAA6B,2BAC7BC,GAGO,+BACPF,GAAmC,4BACnCG,GAAiC,yBAU1B,IAAMC,GAAwCC,EAAA,CAAC,CAClD,SAAAC,EAAW,GACX,aAAAC,EACA,SAAAC,EACA,GAAGC,CACP,IAAM,CACF,IAAMC,KAAY,iBAAa,EAE/B,OAAOJ,EACH,GAAAK,QAAA,cAAC,eACG,YAAY,QACZ,aAAYD,EAAU,eAAgB,MAAM,EAC5C,cAAa,uBAAoB,WACjC,UAAW,0BAAuB,WACjC,GAAGD,GAEJ,GAAAE,QAAA,cAAC,qBAAiB,KAAM,GAAK,GAAGJ,EAAc,CAClD,EAEA,GAAAI,QAAA,cAAC,WACG,YAAY,QACZ,SAAU,GAAAA,QAAA,cAAC,qBAAiB,KAAM,GAAK,GAAGJ,EAAc,EACxD,cAAa,uBAAoB,WACjC,UAAW,0BAAuB,WACjC,GAAGE,GAEHD,GAAYE,EAAU,eAAgB,MAAM,CACjD,CAER,EA7BqD,cCjBrD,IAAAE,GAAkC,oBAClCC,GASO,2BACPC,GAGO,+BACPF,GAAmC,4BACnCG,GAA+B,yBAYxB,IAAMC,GAA0CC,EAAA,CAAC,CACpD,SAAUC,EACV,wBAAAC,EACA,aAAAC,EACA,SAAAC,EAAW,GACX,cAAAC,EACA,aAAAC,EACA,KAAAC,EACA,SAAAC,EACA,QAAAC,EACA,GAAGC,CACP,IAAM,CACF,IAAMC,KAAuB,eAAW,uBAAoB,EAEtDC,GACFP,GAAA,YAAAA,EAAe,UACfM,EAAqB,QAAQ,QAAQ,oBAEnCE,GACFR,GAAA,YAAAA,EAAe,qBACfM,EAAqB,QAAQ,QAAQ,mBAEnC,CAAE,SAAUG,CAAiB,KAAI,kBAAc,EAC/CC,KAAa,kBAAc,EAC3BC,KAAO,YAAQ,EACf,CAAE,KAAMC,CAAW,KAAI,qBAAiB,EAExCC,EAAaH,IAAe,SAAWE,EAAaD,EAEpD,CAAE,GAAAG,EAAI,SAAAC,CAAS,KAAI,gBACrBnB,GAAyBC,CAC7B,EAEMmB,KAAY,iBAAa,EAEzB,CAAE,KAAAC,CAAK,KAAI,WAAO,CACpB,SAAUF,GAAA,YAAAA,EAAU,KACpB,OAAQ,SACR,OAAQ,CAAE,GAAIjB,GAAgBgB,EAAI,SAAAC,CAAS,EAC3C,aAAc,CACV,QAASR,CACb,CACJ,CAAC,EAEKW,EAAgBvB,EAAA,IACdsB,GAAA,MAAAA,EAAM,IAAY,GACbA,GAAA,MAAAA,EAAM,OAAeA,EAAK,OAExBD,EACH,yBACA,qCACJ,EAPc,iBAUhBG,EACFJ,IAAajB,GAAgBgB,GACvBL,EAAiBM,EAAUjB,GAAiBgB,EAAKZ,CAAI,EACrD,GAEV,OAAIK,GAAwBC,GAAsB,EAACS,GAAA,MAAAA,EAAM,KAC9C,KAIP,GAAAG,QAAA,cAACP,EAAA,CACG,GAAIM,EACJ,QAAS,GACT,QAAUE,GAA6C,CAC/CjB,IACAiB,EAAE,eAAe,EACjBjB,EAAQiB,CAAC,EAEjB,GAECtB,EACG,GAAAqB,QAAA,cAAC,eACG,QAAQ,UACR,aAAYJ,EAAU,gBAAiB,OAAO,EAC9C,MAAOE,EAAc,EACrB,cAAa,uBAAoB,YACjC,UAAW,0BAAuB,YACjC,GAAGb,GAEJ,GAAAe,QAAA,cAAC,mBAAe,KAAM,GAAK,GAAGnB,EAAc,CAChD,EAEA,GAAAmB,QAAA,cAAC,WACG,QAAQ,UACR,YAAYH,GAAA,YAAAA,EAAM,OAAQ,GAC1B,SAAU,GAAAG,QAAA,cAAC,mBAAe,KAAM,GAAK,GAAGnB,EAAc,EACtD,MAAOiB,EAAc,EACrB,cAAa,uBAAoB,YACjC,UAAW,0BAAuB,YACjC,GAAGb,GAEHF,GAAYa,EAAU,gBAAiB,OAAO,CACnD,CAER,CAER,EApGuD,eC5BvD,IAAAM,GAAkB,oBAClBC,GAA6B,2BAC7BC,GAGO,+BACPF,GAAmC,4BACnCG,GAA+B,yBAUxB,IAAMC,GAA4CC,EAAA,CAAC,CACtD,WAAAC,EACA,SAAAC,EAAW,GACX,QAAAC,EAAU,GACV,aAAAC,EACA,SAAAC,EACA,GAAGC,CACP,IAAM,CACF,IAAMC,KAAY,iBAAa,EAE/B,OACI,GAAAC,QAAA,cAAC,SAAM,QAAQ,yBACX,GAAAA,QAAA,cAAC,SAAO,GAAGP,EAAY,GAAG,wBAAwB,SAAQ,GAAC,OAAM,GAAC,EACjEC,EACG,GAAAM,QAAA,cAAC,eACG,QAAQ,UACR,GAAG,OACH,aAAYD,EAAU,iBAAkB,QAAQ,EAChD,UAAWJ,EACX,cAAa,uBAAoB,aACjC,UAAW,0BAAuB,aACjC,GAAGG,GAEJ,GAAAE,QAAA,cAAC,mBAAe,KAAM,GAAK,GAAGJ,EAAc,CAChD,EAEA,GAAAI,QAAA,cAAC,WACG,QAAQ,UACR,GAAG,OACH,SAAU,GAAAA,QAAA,cAAC,mBAAe,KAAM,GAAK,GAAGJ,EAAc,EACtD,UAAWD,EACX,cAAa,uBAAoB,aACjC,UAAW,0BAAuB,aACjC,GAAGG,GAEHD,GAAYE,EAAU,iBAAkB,QAAQ,CACrD,CAER,CAER,EAxCyD,gBCjBzD,IAAAE,GAAkB,oBAClBA,GAAqB,4BASd,IAAMC,GAAsCC,EAAA,CAAC,CAAE,MAAAC,EAAO,GAAGC,CAAK,IAC1D,GAAAC,QAAA,cAAC,SAAM,GAAGD,GAAOD,CAAM,EADiB,aCVnD,IAAAG,GAAkB,oBAClBA,GAAoB,4BASb,IAAMC,GAAoCC,EAAA,CAAC,CAAE,MAAAC,EAAO,GAAGC,CAAK,IACxD,GAAAC,QAAA,cAAC,QAAK,GAAGD,GAAOD,GAAA,YAAAA,EAAO,UAAW,EADI,YCVjD,IAAAG,GAAkB,oBAClBA,GAAqB,4BAUd,IAAMC,GAAwCC,EAAA,CAAC,CAAE,MAAAC,EAAO,GAAGC,CAAK,IAE/D,GAAAC,QAAA,cAAC,SAAK,KAAM,UAAUF,IAAU,GAAGC,GAC9BD,CACL,EAJ6C,cCXrD,IAAAG,GAAkB,oBAClBA,GAAwB,4BACxBC,GAAqC,yBAS9B,IAAMC,GAA4CC,EAAA,CAAC,CACtD,MAAAC,EACA,eAAAC,EAAiB,OACjB,gBAAAC,EAAkB,QAClB,SAAAC,EACA,UAAAC,EACA,aAAAC,EACA,GAAGC,CACP,IAEQ,GAAAC,QAAA,cAAC,YAAQ,MAAOP,EAAQC,EAAiBC,EAAkB,GAAGI,GAC1D,GAAAC,QAAA,cAAC,YACIP,EACKG,GAAY,GAAAI,QAAA,cAAC,cAAU,KAAM,GAAK,GAAGF,EAAc,EACnDD,GAAa,GAAAG,QAAA,cAAC,cAAU,KAAM,GAAK,GAAGF,EAAc,CAC9D,CACJ,EAhBiD,gBCXzD,IAAAG,GAAkB,oBAElBC,GAAkB,oBAClBC,GAA4B,2CAE5BF,GAAqB,4BAErB,GAAAG,QAAM,OAAO,GAAAC,OAAe,EAE5B,IAAMC,GAAgB,GAAAF,QAAM,OAAO,EAUtBG,GAAsCC,EAAA,CAAC,CAChD,MAAAC,EACA,QAAAC,EACA,OAAQC,EAAa,IACrB,GAAGC,CACP,IAEQ,GAAAC,QAAA,cAAC,SAAM,GAAGD,MACL,GAAAR,SAAMK,CAAK,EACP,OAAOC,GAAWJ,EAAa,EAC/B,OAAOK,CAAU,CAC1B,EAX2C,aCnBnD,IAAAG,GAAkB,oBAMX,IAAMC,GAAsCC,EAAA,CAAC,CAChD,MAAAC,EACA,IAAAC,EACA,GAAGC,CACP,IAEQ,GAAAC,QAAA,cAACC,GAAA,CAAS,MAAOH,EAAK,MAAOD,EAAQ,GAAGE,GACnCF,GAASC,CACd,EAR2C,aCNnD,IAAAI,GAAkB,oBAClBA,GAAqB,4BAUd,IAAMC,GAAoCC,EAAA,CAAC,CAC9C,SAAAC,EACA,MAAAC,EACA,MAAAC,EACA,GAAGC,CACP,IAEQ,GAAAC,QAAA,cAAC,SAAK,KAAMH,EAAO,MAAOC,EAAQ,GAAGC,GAChCH,GAAYC,CACjB,EATyC,YCXjD,IAAAI,GAAkB,oBAClBA,GAAqB,4BAIrB,SAASC,IAAgC,CACrC,MAAO,CAAC,EACJ,OAAO,MAAQ,UACf,MACA,OAAO,KAAK,cAAgB,WAEpC,CANSC,EAAAD,GAAA,iCAYF,IAAME,GAA0CD,EAAA,CAAC,CACpD,MAAAE,EACA,OAAAC,EACA,QAAAC,EACA,GAAGC,CACP,IAAM,CACF,IAAMC,EAAS,OAAOJ,CAAK,EAE3B,OACI,GAAAK,QAAA,cAAC,SAAM,GAAGF,GACLN,GAA8B,EACzBO,EAAO,eAAeH,EAAQC,CAAO,EACrCE,CACV,CAER,EAfuD,eCjBvD,IAAAE,GAAkB,oBAClBC,GAA0B,6BAC1BC,GAAgB,yBAST,IAAMC,GAA8CC,EAAA,CAAC,CAAE,MAAAC,EAAQ,EAAG,IAC9D,GAAAC,QAAA,cAAC,GAAAC,QAAA,CAAc,QAAS,CAAC,GAAAC,OAAG,GAAIH,CAAM,EADU,iBCX3D,IAAAI,GAAuB,oBAEvBC,EAQO,4BAKA,IAAMC,GAA4CC,EAAA,IAEjD,iBAAC,OACG,EAAE,IACF,QAAQ,OACR,cAAc,SACd,WAAW,SACX,eAAe,SACf,KAAK,QACL,GAAG,mBACH,QAAQ,kFAER,iBAAC,SACG,GAAG,IACH,IAAI,iEACJ,IAAI,cACR,EAEA,iBAAC,WAAQ,GAAG,IAAI,GAAG,KAAK,KAAK,MAAM,MAAM,QAAQ,UAAU,UAAS,kBAEpE,EACA,iBAAC,WAAQ,GAAG,KAAK,KAAK,KAAK,MAAM,QAAQ,GAAG,IAAI,UAAU,UAAS,kCAEnE,EACA,iBAAC,QAAK,GAAG,IAAI,SAAS,KAAK,MAAM,QAAQ,UAAU,UAAS,0DACA,IACxD,iBAAC,YAAK,WAAS,EAAO,gBAAa,iBAAC,YAAK,QAAM,CACnD,EAEA,iBAAC,OAAI,QAAQ,OAAO,SAAS,OAAO,eAAe,SAAS,IAAI,KAC5D,iBAAC,UACG,GAAI,OACJ,KAAK,qBACL,OAAO,SACP,IAAI,aACJ,YAAY,QACZ,MAAM,QACN,QAAQ,UACR,KAAK,SACR,eAED,EACA,iBAAC,UACG,GAAI,OACJ,KAAK,8BACL,OAAO,SACP,IAAI,aACJ,YAAY,QACZ,MAAM,QACN,QAAQ,UACR,KAAK,SACR,UAED,EACA,iBAAC,UACG,GAAI,OACJ,KAAK,4BACL,OAAO,SACP,IAAI,aACJ,YAAY,QACZ,MAAM,QACN,QAAQ,UACR,KAAK,SACR,WAED,CACJ,CACJ,EAnEiD,aCfzD,IAAAC,GAAkB,oBAClBC,GAAmD,2BAM5C,IAAMC,GAAwBC,EAAA,IAC1B,GAAAC,QAAA,cAAC,GAAAC,YAAA,IAAoB,EADK,eCPrC,IAAAC,GAA2C,oBAE3CC,GAMO,2BACPD,GASO,4BACPE,GAA+B,yBAExB,IAAMC,GAAiDC,EAAA,IAAM,CAChE,GAAM,CAACC,EAAcC,CAAe,KAAI,aAAiB,EACnDC,KAAY,iBAAa,EACzB,CAAE,KAAAC,CAAK,KAAI,kBAAc,EACzBC,KAAK,UAAM,EACXC,KAAa,kBAAc,EAE3B,CAAE,SAAAC,EAAU,OAAAC,CAAO,KAAI,gBAAY,KAEzC,cAAU,IAAM,CACRD,GAAYC,GACZN,EACIC,EACI,mBACA,CACI,OAAAK,EACA,SAAUD,GAAA,YAAAA,EAAU,IACxB,EACA,sCAAsCC,oBAAyBD,GAAA,YAAAA,EAAU,iBAC7E,CACJ,CAER,EAAG,CAACA,EAAUC,CAAM,CAAC,EAErB,IAAMC,KAAQ,sBAAkB,WAAY,UAAU,EAEtD,OACI,GAAAC,QAAA,cAAC,QACG,QAAQ,OACR,cAAc,SACd,WAAW,SACX,eAAe,SACf,KAAK,uBAEL,GAAAA,QAAA,cAAC,YAAQ,WAAY,IAAK,SAAU,CAAC,IAAK,IAAK,GAAG,EAAG,MAAOD,GAAO,KAEnE,EACA,GAAAC,QAAA,cAAC,UACG,UAAW,CAAC,SAAU,KAAK,EAC3B,WAAW,SACX,QAAS,GAET,GAAAA,QAAA,cAAC,SAAK,MAAOD,EAAO,SAAS,KAAK,MAAM,UACnCN,EACG,kBACA,6CACJ,CACJ,EACCF,GACG,GAAAS,QAAA,cAAC,YAAQ,UAAW,EAAG,MAAOT,GAC1B,GAAAS,QAAA,cAAC,eACG,aAAW,OACX,MAAOD,EACP,cAAY,2BAEZ,GAAAC,QAAA,cAAC,sBAAe,CACpB,CACJ,CAER,EACA,GAAAA,QAAA,cAAC,WACG,GAAI,EACJ,QAAQ,UACR,QAAS,IAAM,CACPJ,IAAe,SACfF,EAAK,GAAG,EAERC,EAAG,CAAE,GAAI,GAAI,CAAC,CAEtB,GAECF,EAAU,uBAAwB,WAAW,CAClD,CACJ,CAER,EA3E8D,kBCrB9D,IAAAQ,GAAkB,oBCAlB,IAAAC,EAAkB,oBAClBC,GAWO,2BACPD,EAeO,4BACPE,GAAwB,sCACxBA,GAA6B,2BC5BtB,IAAMC,GAAwB,CACjC,QAAS,OACT,cAAe,SACf,WAAY,SACZ,eAAgB,SAChB,eAAgB,QAChB,UAAW,OACf,EAEaC,GAAsB,CAC/B,MAAO,QACP,aAAc,OACd,QAAS,MACb,ED2BO,IAAMC,GAAkCC,EAAA,CAAC,CAC5C,UAAAC,EACA,aAAAC,EACA,mBAAAC,EACA,WAAAC,EACA,aAAAC,EACA,aAAAC,EACA,cAAAC,EACA,UAAAC,EACA,MAAAC,CACJ,IAAM,CApDN,IAAAC,EAAAC,EAqDI,GAAM,CAAE,SAAAC,EAAU,GAAGC,CAAa,EAAIL,GAAa,CAAC,EAE9CM,KAAe,0BAAsB,EACrC,CAAE,OAAQC,CAAM,KAAI,aAAyB,CAC/C,+BAAgC,GAAQD,GAAA,MAAAA,EAAc,SAC1D,CAAC,EACKE,KAAY,iBAAa,EACzBC,KAAa,kBAAc,EAC3BC,KAAU,YAAQ,EAClB,CAAE,KAAMC,CAAW,KAAI,qBAAiB,EACxCC,EAAOH,IAAe,SAAWE,EAAaD,EAC9CG,KAAU,YAA+C,CAC3D,GAAGR,CACP,CAAC,EACK,CACF,SAAAS,EACA,aAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,CACxB,EAAIH,EAEEI,EAAkBzB,EAAA,IAChBC,GAAaA,EAAU,OAAS,EAE5B,EAAAyB,QAAA,gBAAAA,QAAA,cACI,EAAAA,QAAA,cAAC,cACIzB,EAAU,IAAK0B,GACZ,EAAAD,QAAA,cAAC,UACG,IAAKC,EAAS,KACd,QAAQ,UACR,MAAM,OACN,SAAU,EAAAD,QAAA,gBAAAA,QAAA,cAAGC,GAAA,YAAAA,EAAU,IAAK,EAC5B,SAAS,KACT,QAAS,IACLZ,EAAM,CACF,aAAcY,EAAS,IAC3B,CAAC,GAGJA,EAAS,OACN,EAAAD,QAAA,cAAC,aAAOC,EAAS,KAAM,CAE/B,CACH,CACL,EACA,EAAAD,QAAA,cAAC,WAAQ,GAAG,IAAI,CACpB,EAGD,KA5Ba,mBA+BlBE,KAAqB,qBAAkB,YAAa,WAAW,EAE/DC,EACFpB,IAAU,GAAQ,KACd,EAAAiB,QAAA,cAAC,OACG,MAAO,CACH,QAAS,OACT,eAAgB,SAChB,aAAc,OACd,SAAU,MACd,GAECjB,GAAS,EAAAiB,QAAA,cAACI,GAAA,CAAY,UAAW,GAAO,CAC7C,EAGFC,EAAkB,CAAE,GAAGC,GAAW,GAAG3B,CAAa,EAClD4B,EACF,EAAAP,QAAA,cAAC,OACG,GAAG,iBACH,YAAY,MACZ,eAAa,qBAAkB,WAAY,UAAU,EACrD,mBAAiB,qBAAkB,QAAS,UAAU,EACrD,GAAGK,GAEJ,EAAAL,QAAA,cAAC,WACG,GAAG,IACH,UAAU,SACV,SAAS,MACT,MAAOE,GAENZ,EAAU,oBAAqB,yBAAyB,CAC7D,EACCS,EAAgB,EACjB,EAAAC,QAAA,cAAC,QACG,SAAUH,EAAcW,GAChBtB,EACOA,EAASsB,CAAI,EAGjBnB,EAAMmB,CAAI,CACpB,GAED,EAAAR,QAAA,cAAC,eAAY,GAAG,IAAI,UAAW,CAAC,EAACF,GAAA,MAAAA,EAAQ,QACrC,EAAAE,QAAA,cAAC,aAAU,QAAQ,SACdV,EAAU,2BAA4B,OAAO,CAClD,EACA,EAAAU,QAAA,cAAC,SACG,GAAG,QACH,YAAY,QACZ,KAAK,OACJ,GAAGJ,EAAS,QAAS,CAClB,SAAU,GACV,QAAS,CACL,MAAO,2CACP,QAASN,EACL,gCACA,uBACJ,CACJ,CACJ,CAAC,EACL,EACA,EAAAU,QAAA,cAAC,wBACI,IAAGhB,EAAAc,EAAO,QAAP,YAAAd,EAAc,SACtB,CACJ,EAEA,EAAAgB,QAAA,cAAC,eAAY,GAAG,IAAI,UAAW,CAAC,EAACF,GAAA,MAAAA,EAAQ,WACrC,EAAAE,QAAA,cAAC,aAAU,QAAQ,YACdV,EAAU,8BAA+B,UAAU,CACxD,EACA,EAAAU,QAAA,cAAC,SACG,GAAG,WACH,KAAK,WACL,YAAY,WACX,GAAGJ,EAAS,WAAY,CACrB,SAAU,EACd,CAAC,EACL,EACA,EAAAI,QAAA,cAAC,wBACI,IAAGf,EAAAa,EAAO,WAAP,YAAAb,EAAiB,SACzB,CACJ,EAECP,GACG,EAAAsB,QAAA,cAAC,YAAU,GAAGJ,EAAS,UAAU,EAAG,GAAG,KAClCN,EACG,iCACA,aACJ,CACJ,EAGJ,EAAAU,QAAA,cAAC,UAAO,GAAG,IAAI,KAAK,SAAS,MAAM,OAAO,YAAY,SACjDV,EAAU,qBAAsB,SAAS,CAC9C,EAEA,EAAAU,QAAA,cAAC,OAAI,GAAG,KACJ,EAAAA,QAAA,cAAC,UAAO,eAAe,gBAAgB,SAAS,QAC3CvB,GACG,EAAAuB,QAAA,cAAC,EAAAS,KAAA,CACG,GAAIf,EACJ,MAAOQ,EACP,GAAG,oBAEFZ,EACG,qCACA,kBACJ,CACJ,EAEHd,GACG,EAAAwB,QAAA,cAAC,WACG,EAAAA,QAAA,cAAC,YACIV,EACG,gCACA,6BACJ,CACJ,EACA,EAAAU,QAAA,cAAC,EAAAS,KAAA,CACG,MAAOP,EACP,GAAG,IACH,GAAIR,EACJ,WAAW,OACX,GAAG,aAEFJ,EACG,uBACA,SACJ,CACJ,CACJ,CAER,CACJ,CACJ,CACJ,EAGEoB,EAAkB,CAAE,GAAGC,GAAa,GAAG/B,CAAa,EAC1D,OACI,EAAAoB,QAAA,cAAC,iBAAc,GAAGL,GACd,EAAAK,QAAA,cAAC,OAAK,GAAGU,GACJ7B,EACGA,EAAc0B,EAASJ,CAAS,EAEhC,EAAAH,QAAA,gBAAAA,QAAA,cACKG,EACAI,CACL,CAER,CACJ,CAER,EAxN+C,aE1C/C,IAAAK,EAAkB,oBAClBC,GAWO,2BACPD,EAaO,4BACPE,GAAwB,sCAYjB,IAAMC,GAAwCC,EAAA,CAAC,CAClD,UAAAC,EACA,UAAAC,EACA,aAAAC,EACA,aAAAC,EACA,cAAAC,EACA,UAAAC,EACA,MAAAC,CACJ,IAAM,CA/CN,IAAAC,EAAAC,EAgDI,GAAM,CAAE,SAAAC,EAAU,GAAGC,CAAa,EAAIL,GAAa,CAAC,EAE9CM,KAAa,kBAAc,EAC3BC,KAAU,YAAQ,EAClB,CAAE,KAAMC,CAAW,KAAI,qBAAiB,EACxCC,EAAOH,IAAe,SAAWE,EAAaD,EAC9CG,KAAY,iBAAa,EACzBC,KAAe,0BAAsB,EACrC,CAAE,OAAAC,CAAO,KAAI,gBAAY,CAC3B,+BAAgC,GAAQD,GAAA,MAAAA,EAAc,SAC1D,CAAC,EACK,CACF,SAAAE,EACA,aAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,CACxB,KAAI,YAAkD,CAClD,GAAGV,CACP,CAAC,EAEKW,EAAkBtB,EAAA,IAChBC,GAAaA,EAAU,OAAS,EAE5B,EAAAsB,QAAA,gBAAAA,QAAA,cACI,EAAAA,QAAA,cAAC,cACItB,EAAU,IAAKuB,GACZ,EAAAD,QAAA,cAAC,UACG,IAAKC,EAAS,KACd,QAAQ,UACR,SAAS,KACT,MAAM,OACN,SAAU,EAAAD,QAAA,gBAAAA,QAAA,cAAGC,GAAA,YAAAA,EAAU,IAAK,EAC5B,QAAS,IACLN,EAAO,CACH,aAAcM,EAAS,IAC3B,CAAC,GAGJA,EAAS,OACN,EAAAD,QAAA,cAAC,aAAOC,EAAS,KAAM,CAE/B,CACH,CACL,EACA,EAAAD,QAAA,cAAC,WAAQ,GAAG,IAAI,CACpB,EAGD,KA5Ba,mBA+BlBE,KAAqB,qBAAkB,YAAa,WAAW,EAE/DC,EACFnB,IAAU,GAAQ,KACd,EAAAgB,QAAA,cAAC,OACG,MAAO,CACH,QAAS,OACT,eAAgB,SAChB,aAAc,OACd,SAAU,MACd,GAEChB,GAAS,EAAAgB,QAAA,cAACI,GAAA,CAAY,UAAW,GAAO,CAC7C,EAGFC,EAAkB,CAAE,GAAGC,GAAW,GAAGzB,CAAa,EAClD0B,EACF,EAAAP,QAAA,cAAC,OACG,GAAG,iBACH,YAAY,MACZ,eAAa,qBAAkB,WAAY,UAAU,EACrD,mBAAiB,qBAAkB,QAAS,UAAU,EACrD,GAAGK,GAEJ,EAAAL,QAAA,cAAC,WACG,GAAG,IACH,UAAU,SACV,SAAS,MACT,MAAOE,GAENT,EAAU,uBAAwB,0BAA0B,CACjE,EACCM,EAAgB,EACjB,EAAAC,QAAA,cAAC,QACG,SAAUH,EAAcW,GAChBrB,EACOA,EAASqB,CAAI,EAGjBb,EAAOa,CAAI,CACrB,GAED,EAAAR,QAAA,cAAC,eAAY,GAAG,IAAI,UAAW,CAAC,EAACF,GAAA,MAAAA,EAAQ,QACrC,EAAAE,QAAA,cAAC,aAAU,QAAQ,SACdP,EAAU,8BAA+B,OAAO,CACrD,EACA,EAAAO,QAAA,cAAC,SACG,GAAG,QACH,KAAK,OACL,YAAY,QACX,GAAGJ,EAAS,QAAS,CAClB,SAAU,GACV,QAAS,CACL,MAAO,2CACP,QAASH,EACL,mCACA,uBACJ,CACJ,CACJ,CAAC,EACL,EACA,EAAAO,QAAA,cAAC,wBACI,IAAGf,EAAAa,EAAO,QAAP,YAAAb,EAAc,SACtB,CACJ,EAEA,EAAAe,QAAA,cAAC,eAAY,GAAG,IAAI,UAAW,CAAC,EAACF,GAAA,MAAAA,EAAQ,WACrC,EAAAE,QAAA,cAAC,aAAU,QAAQ,YACdP,EACG,iCACA,UACJ,CACJ,EACA,EAAAO,QAAA,cAAC,SACG,GAAG,WACH,KAAK,WACL,YAAY,WACX,GAAGJ,EAAS,WAAY,CACrB,SAAU,EACd,CAAC,EACL,EACA,EAAAI,QAAA,cAAC,wBACI,IAAGd,EAAAY,EAAO,WAAP,YAAAZ,EAAiB,SACzB,CACJ,EAEA,EAAAc,QAAA,cAAC,UAAO,GAAG,IAAI,KAAK,SAAS,MAAM,OAAO,YAAY,SACjDP,EAAU,gCAAiC,SAAS,CACzD,EAECd,GACG,EAAAqB,QAAA,cAAC,OACG,QAAQ,OACR,eAAe,WACf,GAAG,IACH,SAAS,QAET,EAAAA,QAAA,cAAC,YACIP,EACG,kCACA,kBACJ,CACJ,EACA,EAAAO,QAAA,cAAC,EAAAS,KAAA,CACG,MAAOP,EACP,GAAG,IACH,WAAW,OACX,GAAIV,EACJ,GAAG,UAEFC,EAAU,qBAAsB,SAAS,CAC9C,CACJ,CAER,CACJ,EAGEiB,EAAkB,CAAE,GAAGC,GAAa,GAAG/B,CAAa,EAC1D,OACI,EAAAoB,QAAA,cAAC,OAAK,GAAGU,GACJ5B,EACGA,EAAcyB,EAASJ,CAAS,EAEhC,EAAAH,QAAA,gBAAAA,QAAA,cACKG,EACAI,CACL,CAER,CAER,EA/LqD,gBCvCrD,IAAAK,GAAkB,oBAClBC,GAUO,2BACPD,EAWO,4BACPE,GAAwB,sCAYjB,IAAMC,GAAoDC,EAAA,CAAC,CAC9D,UAAAC,EACA,aAAAC,EACA,aAAAC,EACA,cAAAC,EACA,UAAAC,EACA,MAAAC,CACJ,IAAM,CA3CN,IAAAC,EA4CI,GAAM,CAAE,SAAAC,EAAU,GAAGC,CAAa,EAAIJ,GAAa,CAAC,EAC9C,CAAE,OAAAK,CAAO,KAAI,sBAA2C,EACxDC,KAAY,iBAAa,EAEzBC,KAAa,kBAAc,EAC3BC,KAAU,YAAQ,EAClB,CAAE,KAAMC,CAAW,KAAI,qBAAiB,EACxCC,EAAOH,IAAe,SAAWE,EAAaD,EAE9C,CACF,aAAAG,EACA,SAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,CACxB,KAAI,YAAwD,CACxD,GAAGT,CACP,CAAC,EAEKU,KAAqB,qBAAkB,YAAa,WAAW,EAE/DC,EACFd,IAAU,GAAQ,KACd,GAAAe,QAAA,cAAC,OACG,MAAO,CACH,QAAS,OACT,eAAgB,SAChB,aAAc,OACd,SAAU,MACd,GAECf,GAAS,GAAAe,QAAA,cAACC,GAAA,CAAY,UAAW,GAAO,CAC7C,EAGFC,EAAkB,CAAE,GAAGC,GAAW,GAAGrB,CAAa,EAClDsB,EACF,GAAAJ,QAAA,cAAC,OACG,GAAG,iBACH,YAAY,MACZ,eAAa,qBAAkB,WAAY,UAAU,EACrD,mBAAiB,qBAAkB,QAAS,UAAU,EACrD,GAAGE,GAEJ,GAAAF,QAAA,cAAC,WACG,GAAG,IACH,UAAU,SACV,SAAS,MACT,MAAOF,GAENR,EACG,6BACA,uBACJ,CACJ,EAEA,GAAAU,QAAA,cAAC,QACG,SAAUL,EAAcU,GAChBlB,EACOA,EAASkB,CAAI,EAGjBhB,EAAOgB,CAAI,CACrB,GAED,GAAAL,QAAA,cAAC,eAAY,GAAG,IAAI,UAAW,CAAC,EAACH,GAAA,MAAAA,EAAQ,QACrC,GAAAG,QAAA,cAAC,aAAU,QAAQ,SACdV,EACG,oCACA,OACJ,CACJ,EACA,GAAAU,QAAA,cAAC,SACG,GAAG,QACH,KAAK,OACJ,GAAGJ,EAAS,QAAS,CAClB,SAAU,GACV,QAAS,CACL,MAAO,2CACP,QAASN,EACL,gCACA,uBACJ,CACJ,CACJ,CAAC,EACL,EACA,GAAAU,QAAA,cAAC,wBACI,IAAGd,EAAAW,EAAO,QAAP,YAAAX,EAAc,SACtB,CACJ,EAECN,GACG,GAAAoB,QAAA,cAAC,OAAI,GAAG,IAAI,QAAQ,OAAO,eAAe,YACtC,GAAAA,QAAA,cAAC,YACIV,EACG,qCACA,kBACJ,CACJ,EACA,GAAAU,QAAA,cAAC,EAAAM,KAAA,CACG,MAAOR,EACP,GAAG,IACH,GAAIJ,EACJ,GAAG,UAEFJ,EAAU,qBAAsB,SAAS,CAC9C,CACJ,EAGJ,GAAAU,QAAA,cAAC,UAAO,GAAG,IAAI,KAAK,SAAS,MAAM,OAAO,YAAY,SACjDV,EACG,sCACA,yBACJ,CACJ,CACJ,CACJ,EAGEiB,EAAkB,CAAE,GAAGC,GAAa,GAAG3B,CAAa,EAC1D,OACI,GAAAmB,QAAA,cAAC,OAAK,GAAGO,GACJxB,EACGA,EAAcqB,EAASL,CAAS,EAEhC,GAAAC,QAAA,iBAAAA,QAAA,cACKD,EACAK,CACL,CAER,CAER,EA3IiE,sBCpCjE,IAAAK,GAAkB,oBAClBC,GAQO,2BACPD,EAUO,4BACPE,GAAwB,sCAYjB,IAAMC,GAAoDC,EAAA,CAAC,CAC9D,aAAAC,EACA,aAAAC,EACA,cAAAC,EACA,UAAAC,EACA,MAAAC,CACJ,IAAM,CAvCN,IAAAC,EAAAC,EAwCI,GAAM,CAAE,SAAAC,EAAU,GAAGC,CAAa,EAAIL,GAAa,CAAC,EAC9CM,KAAY,iBAAa,EACzBC,KAAe,0BAAsB,EACrC,CAAE,OAAAC,CAAO,KAAI,sBAA2C,CAC1D,+BAAgC,GAAQD,GAAA,MAAAA,EAAc,SAC1D,CAAC,EACK,CACF,SAAAE,EACA,MAAAC,EACA,aAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,CACxB,KAAI,YAAwD,CACxD,GAAGP,CACP,CAAC,EAEKQ,KAAqB,qBAAkB,YAAa,WAAW,EAE/DC,EACFb,IAAU,GAAQ,KACd,GAAAc,QAAA,cAAC,OACG,MAAO,CACH,QAAS,OACT,eAAgB,SAChB,aAAc,OACd,SAAU,MACd,GAECd,GAAS,GAAAc,QAAA,cAACC,GAAA,CAAY,UAAW,GAAO,CAC7C,EAGFC,EAAkB,CAAE,GAAGC,GAAW,GAAGpB,CAAa,EAClDqB,EACF,GAAAJ,QAAA,cAAC,OACG,GAAG,iBACH,YAAY,MACZ,eAAa,qBAAkB,WAAY,UAAU,EACrD,mBAAiB,qBAAkB,QAAS,UAAU,EACrD,GAAGE,GAEJ,GAAAF,QAAA,cAAC,WACG,GAAG,IACH,UAAU,SACV,SAAS,MACT,MAAOF,GAENP,EAAU,6BAA8B,kBAAkB,CAC/D,EACA,GAAAS,QAAA,cAAC,QACG,SAAUJ,EAAcS,GAChBhB,EACOA,EAASgB,CAAI,EAGjBZ,EAAOY,CAAI,CACrB,GAED,GAAAL,QAAA,cAAC,eAAY,GAAG,IAAI,UAAW,CAAC,EAACH,GAAA,MAAAA,EAAQ,WACrC,GAAAG,QAAA,cAAC,aAAU,QAAQ,YACdT,EACG,uCACA,cACJ,CACJ,EACA,GAAAS,QAAA,cAAC,SACG,GAAG,WACH,KAAK,WACL,YAAY,WACX,GAAGN,EAAS,WAAY,CACrB,SAAU,EACd,CAAC,EACL,EACA,GAAAM,QAAA,cAAC,wBACI,IAAGb,EAAAU,EAAO,WAAP,YAAAV,EAAiB,SACzB,CACJ,EAEA,GAAAa,QAAA,cAAC,eAAY,GAAG,IAAI,UAAW,CAAC,EAACH,GAAA,MAAAA,EAAQ,kBACrC,GAAAG,QAAA,cAAC,aAAU,QAAQ,mBACdT,EACG,8CACA,sBACJ,CACJ,EACA,GAAAS,QAAA,cAAC,SACG,GAAG,kBACH,KAAK,WACL,YAAY,mBACX,GAAGN,EAAS,kBAAmB,CAC5B,SAAU,GACV,SAAWY,GAAa,CACpB,GAAIX,EAAM,UAAU,GAAKW,EACrB,OAAOf,EACH,sDACA,wBACJ,CAGR,CACJ,CAAC,EACL,EACA,GAAAS,QAAA,cAAC,wBACI,IAAGZ,EAAAS,EAAO,kBAAP,YAAAT,EAAwB,SAChC,CACJ,EAEA,GAAAY,QAAA,cAAC,UAAO,GAAG,IAAI,KAAK,SAAS,MAAM,OAAO,YAAY,SACjDT,EAAU,sCAAuC,QAAQ,CAC9D,CACJ,CACJ,EAGEgB,EAAkB,CAAE,GAAGC,GAAa,GAAG1B,CAAa,EAC1D,OACI,GAAAkB,QAAA,cAAC,OAAK,GAAGO,GACJvB,EACGA,EAAcoB,EAASL,CAAS,EAEhC,GAAAC,QAAA,iBAAAA,QAAA,cACKD,EACAK,CACL,CAER,CAER,EArIiE,sBLX1D,IAAMK,GAAgCC,EAACC,GAAU,CACpD,GAAM,CAAE,KAAAC,CAAK,EAAID,EAcjB,OAAO,GAAAE,QAAA,iBAAAA,QAAA,cAbYH,EAAA,IAAM,CACrB,OAAQE,EAAM,CACV,IAAK,WACD,OAAO,GAAAC,QAAA,cAACC,GAAA,CAAc,GAAGH,EAAO,EACpC,IAAK,iBACD,OAAO,GAAAE,QAAA,cAACE,GAAA,CAAoB,GAAGJ,EAAO,EAC1C,IAAK,iBACD,OAAO,GAAAE,QAAA,cAACG,GAAA,CAAoB,GAAGL,EAAO,EAC1C,QACI,OAAO,GAAAE,QAAA,cAACI,GAAA,CAAW,GAAGN,EAAO,CACrC,CACJ,EAXmB,cAaE,CAAE,CAC3B,EAhB6C,YMtB7C,IAAAO,GAAkB,oBAClBC,GAQO,2BAEPD,GAKO,4BACPE,GAAyB,yBAIlB,IAAMC,GAAwCC,EAAA,CAAC,CAClD,gBAAAC,EACA,SAAAC,EAAW,GACX,UAAAC,EAAY,GACZ,KAAAC,CACJ,IAAM,CA1BN,IAAAC,EAAAC,EA2BI,IAAMC,KAAa,kBAAc,EAC3B,CAAE,YAAAC,CAAY,KAAI,kBAAc,CAAE,KAAAJ,CAAK,CAAC,EACxCK,KAAO,YAAQ,EACf,CAAE,KAAMC,CAAW,KAAI,qBAAiB,EACxC,CAAE,aAAAC,CAAa,KAAI,qBAAiB,EAEpCC,EAAaL,IAAe,SAAWG,EAAaD,EAE1D,GAAID,EAAY,SAAW,EACvB,OAAO,KAGX,GAAM,CAAE,UAAAK,CAAU,KAAI,gBAAY,EAE5BC,KAAoB,2BAAuB,IAAKD,CAAS,EAE/D,OACI,GAAAE,QAAA,cAAC,GAAAC,WAAA,CAAiB,GAAG,IAAK,GAAGf,GACxBC,IAAaS,IAAgBG,GAAA,YAAAA,EAAmB,SAC7C,GAAAC,QAAA,cAAC,uBACG,GAAAA,QAAA,cAACH,EAAA,CAAW,GAAG,OACVN,GAAAD,EAAAS,GAAA,YAAAA,EAAmB,WAAnB,YAAAT,EAA6B,OAA7B,YAAAC,EAAmC,OAChC,GAAAS,QAAA,cAAC,aAAS,KAAM,GAAI,CAE5B,CACJ,EAEHP,EAAY,IAAI,CAAC,CAAE,MAAAS,EAAO,KAAAC,EAAM,KAAAC,CAAK,IAE9B,GAAAJ,QAAA,cAAC,mBAAe,IAAKE,GAChB,CAACd,GAAae,EACdC,EACG,GAAAJ,QAAA,cAAC,mBACG,GAAI,EACJ,GAAIH,EACJ,GAAIO,EACJ,KAAMA,GAELF,CACL,EAEA,GAAAF,QAAA,cAAC,mBAAe,GAAI,GAAIE,CAAM,CAEtC,CAEP,CACL,CAER,EAtDqD,cCrBrD,IAAAG,GAAkB,oBAElBA,GAOO,4BACPC,GAA4B,yBASrB,IAAMC,GAA4DC,EAAA,CAAC,CACtE,gBAAAC,EAAkB,GAClB,QAAAC,EACA,eAAAC,EACA,gBAAAC,EAAkB,CACtB,IAAM,CACF,IAAMC,KAAQ,aAAS,EAEvB,OACI,GAAAC,QAAA,cAAC,QACG,QAAQ,OACR,WAAW,SACX,eAAe,gBACf,IAAK,EACL,GAAG,iBACH,OAAO,KACP,KAAM,IACN,EAAG,GAEH,GAAAA,QAAA,cAAC,qBAAiB,MAAOF,EAAkB,GAAI,MAAM,SACjD,GAAAE,QAAA,cAAC,8BAAuBF,CAAgB,CAC5C,EACA,GAAAE,QAAA,cAAC,aAAMJ,CAAQ,EACf,GAAAI,QAAA,cAAC,eACG,aAAW,OACX,QAAQ,UACR,QAAS,IAAM,CACXH,GAAA,MAAAA,IACAE,EAAM,MAAMJ,CAAe,CAC/B,GAEA,GAAAK,QAAA,cAAC,gBAAY,KAAM,GAAI,CAC3B,CACJ,CAER,EAnCyE,wBCnBzE,IAAAC,GAAkB,oBAClBC,GAIO,2BACPD,GAAqB,4BACrBE,GAKO,yBAEA,IAAMC,GAAsDC,EAAA,CAAC,CAChE,OAAAC,EACA,SAAU,CACN,QAAAC,EACI,GAAAC,QAAA,cAACC,GAAA,CACG,IAAI,mBACJ,eAAe,QACf,KAAM,GAAAD,QAAA,cAAC,oBAAgB,KAAK,OAAO,EACvC,EAEJ,MAAAE,EACI,GAAAF,QAAA,cAACC,GAAA,CACG,IAAI,iBACJ,eAAe,oBACf,KAAM,GAAAD,QAAA,cAAC,0BAAsB,KAAK,OAAO,EAC7C,EAEJ,QAAAG,EACI,GAAAH,QAAA,cAACC,GAAA,CACG,IAAI,mBACJ,eAAe,YACf,KAAM,GAAAD,QAAA,cAAC,gBAAY,KAAK,OAAO,EACnC,EAEJ,KAAAI,EACI,GAAAJ,QAAA,cAACC,GAAA,CACG,IAAI,gBACJ,eAAe,sBACf,KAAM,GAAAD,QAAA,cAAC,aAAS,KAAK,OAAO,EAChC,CAER,EAAI,CAAC,CACT,IAEQ,GAAAA,QAAA,cAAC,GAAAK,kBAAA,CACG,OAAQP,EACR,SAAU,CACN,QAAAC,EACA,MAAAG,EACA,QAAAC,EACA,KAAAC,CACJ,EACJ,EA1C2D,qBA8C7DH,GAAUJ,EAAA,CAAC,CACb,IAAAS,EACA,eAAAC,EACA,KAAAC,CACJ,IAIM,CACF,IAAMC,KAAY,iBAAa,EAE/B,OACI,GAAAT,QAAA,cAAC,SACG,QAAQ,OACR,WAAW,SACX,SAAS,OACT,MAAM,WACN,YAAY,IACZ,SAAS,MAERS,EAAUH,EAAKC,CAAc,EAC9B,GAAAP,QAAA,cAAC,QAAK,MAAO,CAAE,WAAY,KAAM,GAAIQ,CAAK,CAC9C,CAER,EAxBgB,WC5DhB,IAAAE,GAKO,4BACPC,GAAqB,kCAERC,MAAc,gBAAY,CACnC,OAAQ,CACJ,iBAAkB,QACtB,EACA,MAAO,CACH,QACI,mKACJ,KAAM,kKACV,EACA,OAAQ,CACJ,OAAQ,KAAO,CACX,aAAc,CACV,SAAU,MACd,CACJ,EACJ,EACA,OAAQ,CACJ,MAAO,CACH,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,SACT,EACA,MAAO,CACH,WAAY,UACZ,eAAgB,SACpB,CACJ,CACJ,CAAC,EAEKC,GAAqB,CACvB,OAAQ,CACJ,GAAI,CACA,MAAO,aAAU,OAAO,MACxB,KAAM,aAAU,OAAO,KAAK,GAAG,CACnC,CACJ,EACA,MAAO,CACH,GAAI,CACA,MAAO,aAAU,OAAO,MACxB,KAAM,aAAU,OAAO,KAAK,GAAG,CACnC,EACA,OAAQ,CACJ,MAAO,aAAU,OAAO,MACxB,KAAM,aAAU,OAAO,KAAK,GAAG,CACnC,CACJ,CACJ,EAEMC,GAAqB,CACvB,KAAM,aAAU,OAAO,KACvB,OAAQ,aAAU,OAAO,OACzB,QAAS,aAAU,OAAO,KAC1B,IAAK,aAAU,OAAO,IACtB,OAAQ,aAAU,OAAO,OACzB,OAAQ,aAAU,OAAO,OACzB,MAAO,aAAU,OAAO,KAC5B,EAoBaC,GAAe,OAAO,KAAKD,EAAkB,EAAE,OACxD,CAACE,EAAKC,IAAQ,CACV,IAAMC,EAAYD,EAClB,MAAO,CACH,GAAGD,EACH,CAACC,CAAG,KAAG,gBAAY,CACf,OAAQ,CACJ,iBAAkB,QACtB,EAEA,OAAQ,CACJ,OAASE,GAA8B,CACnC,IAAMC,EAAUD,EAAM,MAAM,OAAO,KAAK,EAAE,EACpCE,EAASF,EAAM,MAAM,OAAO,KAAK,GAAG,EAC1C,MAAO,CACH,aAAc,CACV,cAAY,SAAKC,EAASC,CAAM,EAAEF,CAAK,CAC3C,CACJ,CACJ,CACJ,EAEA,OAAQ,CACJ,MAAOL,GAAmBI,CAAS,EACnC,OAAQ,CACJ,GAAGL,EACP,CACJ,CACJ,CAAC,CACL,CACJ,EACA,CAAC,CACL,EC3HA,IAAAS,GAAkB,oBAElBA,GAAyB,4BAIlB,IAAMC,GAAuBC,EAAA,IAA4B,CAC5D,IAAMC,KAAQ,aAAS,CACnB,SAAU,YACV,WAAY,EAChB,CAAC,EAED,MAAO,CACH,KAAM,CAAC,CACH,IAAAC,EACA,QAAAC,EACA,KAAAC,EACA,YAAAC,EACA,gBAAAC,EACA,eAAAC,CACJ,IAAM,CACEH,IAAS,WACLF,GAAOD,EAAM,SAASC,CAAG,EACzBD,EAAM,OAAOC,EAAK,CACd,OAAQ,IACJ,GAAAM,QAAA,cAACC,GAAA,CACG,gBAAiBP,EACjB,QAASC,EACT,eAAgBI,EAChB,gBAAiBD,EACrB,CAER,CAAC,EAEDL,EAAM,CACF,GAAIC,EACJ,OAAQ,IACJ,GAAAM,QAAA,cAACC,GAAA,CACG,gBAAiBP,EACjB,QAASC,EACT,eAAgBI,EAChB,gBAAiBD,EACrB,CAER,CAAC,EAGDJ,GAAOD,EAAM,SAASC,CAAG,EACzBD,EAAM,OAAOC,EAAK,CACd,MAAOC,EACP,OAAQC,EACR,YAAAC,CACJ,CAAC,EAEDJ,EAAM,CACF,GAAIC,EACJ,MAAOC,EACP,YAAAE,EACA,OAAQD,CACZ,CAAC,CAGb,EACA,MAAQF,GAAQD,EAAM,MAAMC,CAAG,CACnC,CACJ,EA3DoC","names":["src_exports","__export","AuthPage","AutoSaveIndicator","BooleanField","Breadcrumb","CloneButton","Create","CreateButton","DateField","DeleteButton","Edit","EditButton","EmailField","ErrorComponent","ExportButton","FileField","HamburgerMenu","Header","ImportButton","Layout","List","ListButton","MarkdownField","NumberField","ReadyPage","RefineThemes","RefreshButton","SaveButton","Show","ShowButton","Sider","TagField","TextField","ThemedHeader","ThemedHeaderV2","ThemedLayout","ThemedLayoutContext","ThemedLayoutContextProvider","ThemedLayoutV2","ThemedSider","ThemedSiderV2","ThemedTitle","ThemedTitleV2","Title","UndoableNotification","UrlField","WelcomePage","notificationProvider","refineTheme","usePagination","useSiderVisible","useThemedLayoutContext","__toCommonJS","import_react","import_react","import_core","import_icons","Sider","__name","TitleFromProps","render","meta","collapsed","setCollapsed","opened","setOpened","routerType","NewLink","LegacyLink","Link","menuItems","selectedKey","defaultOpenKeys","TitleFromContext","isExistAuthentication","t","hasDashboard","authProvider","warnWhen","setWarnWhen","mutateLogout","RenderToTitle","Title","siderWidth","commonTooltipProps","renderTreeView","tree","item","label","route","name","icon","children","isSelected","isParent","linkProps","React","items","dashboard","handleLogout","logout","renderSider","prev","import_react","import_core","Header","__name","authProvider","user","React","Layout","__name","Sider","Header","Title","Footer","OffLayoutArea","children","SiderToRender","HeaderToRender","bg","React","import_react","import_core","Title","__name","collapsed","routerType","Link","LegacyLink","React","ChakraLink","import_react","import_react","import_core","import_icons","ThemedSider","__name","TitleFromProps","render","meta","isSiderOpen","opened","setOpened","routerType","NewLink","LegacyLink","Link","menuItems","selectedKey","defaultOpenKeys","TitleFromContext","isExistAuthentication","t","hasDashboard","authProvider","warnWhen","setWarnWhen","mutateLogout","RenderToTitle","ThemedTitle","siderWidth","commonTooltipProps","renderTreeView","tree","item","label","route","name","icon","children","isSelected","isParent","linkProps","React","items","dashboard","handleLogout","logout","renderSider","prev","import_react","import_core","import_icons","ThemedHeader","__name","isSiderOpen","onToggleSiderClick","toggleSiderIconFromProps","authProvider","user","bgColor","hasSidebarToggle","React","ThemedLayout","__name","Sider","Header","Title","Footer","OffLayoutArea","children","isSiderOpen","setIsSiderOpen","React","ThemedSider","ThemedHeader","prevValue","import_react","import_core","defaultText","defaultIcon","React","ThemedTitle","__name","collapsed","icon","text","wrapperStyles","routerType","Link","LegacyLink","ChakraLink","import_react","import_react","import_core","import_icons","import_react","import_core","defaultText","defaultIcon","React","ThemedTitleV2","__name","collapsed","icon","text","wrapperStyles","routerType","Link","LegacyLink","ChakraLink","usePagination","__name","props","current","pageCount","prev","next","items","r","r1","r2","i","import_react","import_react","ThemedLayoutContext","React","ThemedLayoutContextProvider","__name","children","initialSiderCollapsed","siderCollapsed","setSiderCollapsed","mobileSiderOpen","setMobileSiderOpen","useSiderVisible","__name","mobileSiderOpen","siderCollapsed","setMobileSiderOpen","setSiderCollapsed","ThemedLayoutContext","visible","import_react","useThemedLayoutContext","__name","mobileSiderOpen","siderCollapsed","setMobileSiderOpen","setSiderCollapsed","ThemedLayoutContext","ThemedSiderV2","__name","TitleFromProps","render","meta","activeItemDisabled","siderCollapsed","mobileSiderOpen","setMobileSiderOpen","useThemedLayoutContext","routerType","NewLink","LegacyLink","Link","menuItems","selectedKey","defaultOpenKeys","TitleFromContext","isExistAuthentication","t","hasDashboard","authProvider","warnWhen","setWarnWhen","mutateLogout","RenderToTitle","ThemedTitleV2","siderWidth","commonTooltipProps","renderTreeView","tree","item","label","route","name","icon","children","isSelected","isParent","linkProps","linkStyle","React","items","dashboard","handleLogout","logout","renderSider","import_react","import_core","import_react","import_icons","HamburgerIcon","__name","props","React","HamburgerMenu","siderCollapsed","setSiderCollapsed","mobileSiderOpen","setMobileSiderOpen","useThemedLayoutContext","ThemedHeaderV2","__name","isSticky","sticky","authProvider","user","bgColor","stickyProps","React","HamburgerMenu","ThemedLayoutV2","__name","Sider","Header","Title","Footer","OffLayoutArea","children","initialSiderCollapsed","React","ThemedLayoutContextProvider","ThemedSiderV2","ThemedHeaderV2","import_react","import_core","import_ui_types","List","__name","props","canCreate","children","createButtonPropsFromProps","resourceFromProps","wrapperProps","contentProps","headerProps","headerButtonProps","headerButtonsFromProps","breadcrumbFromProps","title","translate","globalBreadcrumb","routerType","getUserFriendlyName","resource","identifier","isCreateButtonVisible","breadcrumb","createButtonProps","defaultHeaderButtons","React","CreateButton","headerButtons","renderTitle","_a","_b","Breadcrumb","import_react","import_core","import_icons","import_ui_types","Show","__name","props","_a","children","resourceFromProps","recordItemId","canDelete","canEdit","dataProviderName","isLoading","footerButtonsFromProps","footerButtonProps","headerButtonsFromProps","headerButtonProps","wrapperProps","contentProps","headerProps","goBackFromProps","breadcrumbFromProps","title","translate","globalBreadcrumb","routerType","back","go","goBack","legacyGoList","getUserFriendlyName","resource","action","idFromParams","identifier","goListPath","id","breadcrumb","hasList","isDeleteButtonVisible","isEditButtonVisible","listButtonProps","editButtonProps","deleteButtonProps","refreshButtonProps","defaultHeaderButtons","React","ListButton","EditButton","DeleteButton","RefreshButton","buttonBack","headerButtons","footerButtons","renderTitle","_b","Breadcrumb","import_react","import_core","import_icons","import_ui_types","Edit","__name","props","_a","children","resourceFromProps","recordItemId","deleteButtonPropsFromProps","mutationModeFromProps","saveButtonPropsFromProps","canDelete","dataProviderName","isLoading","footerButtonsFromProps","footerButtonProps","headerButtonsFromProps","headerButtonProps","wrapperProps","contentProps","headerProps","goBackFromProps","breadcrumbFromProps","title","autoSaveProps","translate","globalBreadcrumb","mutationModeContext","mutationMode","routerType","back","go","goBack","legacyGoList","getUserFriendlyName","resource","action","idFromParams","identifier","goListPath","id","breadcrumb","hasList","isDeleteButtonVisible","listButtonProps","refreshButtonProps","deleteButtonProps","saveButtonProps","defaultHeaderButtons","React","AutoSaveIndicator","ListButton","RefreshButton","defaultFooterButtons","DeleteButton","SaveButton","buttonBack","headerButtons","footerButtons","renderTitle","_b","Breadcrumb","import_react","import_core","import_icons","import_ui_types","Create","__name","props","children","saveButtonPropsFromProps","isLoading","resourceFromProps","footerButtonsFromProps","footerButtonProps","headerButtonsFromProps","headerButtonProps","wrapperProps","contentProps","headerProps","goBackFromProps","breadcrumbFromProps","title","translate","globalBreadcrumb","routerType","back","goBack","getUserFriendlyName","resource","action","identifier","breadcrumb","saveButtonProps","defaultFooterButtons","React","SaveButton","buttonBack","headerButtons","footerButtons","renderTitle","_a","_b","Breadcrumb","import_react","import_core","import_ui_types","import_icons","CreateButton","__name","resourceNameFromProps","resourceNameOrRouteName","hideText","accessControl","svgIconProps","meta","children","onClick","rest","accessControlContext","accessControlEnabled","hideIfUnauthorized","translate","routerType","Link","LegacyLink","ActiveLink","generateCreateUrl","resource","data","disabledTitle","createUrl","React","e","import_react","import_core","import_ui_types","import_icons","EditButton","__name","resourceNameFromProps","resourceNameOrRouteName","recordItemId","hideText","accessControl","svgIconProps","meta","children","onClick","rest","accessControlContext","accessControlEnabled","hideIfUnauthorized","translate","routerType","Link","LegacyLink","ActiveLink","generateEditUrl","id","resource","data","disabledTitle","editUrl","React","e","import_react","import_core","import_ui_types","import_icons","DeleteButton","__name","resourceNameFromProps","resourceNameOrRouteName","recordItemId","onSuccess","mutationModeProp","children","successNotification","errorNotification","hideText","accessControl","meta","metaData","dataProviderName","confirmTitle","confirmOkText","confirmCancelText","svgIconProps","rest","accessControlContext","accessControlEnabled","hideIfUnauthorized","translate","id","resource","identifier","mutationModeContext","mutationMode","mutate","isLoading","variables","data","disabledTitle","opened","setOpened","onConfirm","setWarnWhen","value","React","o","import_react","import_core","import_ui_types","import_icons","import_react_query","RefreshButton","__name","resourceNameFromProps","resourceNameOrRouteName","recordItemId","hideText","dataProviderName","svgIconProps","children","onClick","_meta","_metaData","rest","translate","queryClient","invalidates","resources","identifier","id","isInvalidating","handleInvalidate","React","e","import_react","import_core","import_ui_types","import_icons","ShowButton","__name","resourceNameFromProps","resourceNameOrRouteName","recordItemId","hideText","accessControl","svgIconProps","meta","children","onClick","rest","accessControlContext","accessControlEnabled","hideIfUnauthorized","generateShowUrl","routerType","Link","LegacyLink","ActiveLink","translate","id","resource","data","disabledTitle","showUrl","React","e","import_react","import_core","import_ui_types","import_icons","ListButton","__name","resourceNameFromProps","resourceNameOrRouteName","hideText","accessControl","svgIconProps","meta","children","onClick","rest","_a","_b","accessControlContext","accessControlEnabled","hideIfUnauthorized","generateListUrl","routerType","Link","LegacyLink","getUserFriendlyName","ActiveLink","translate","resource","identifier","data","disabledTitle","listUrl","React","e","import_react","import_core","import_ui_types","import_icons","ExportButton","__name","hideText","children","loading","svgIconProps","rest","translate","React","import_react","import_core","import_ui_types","import_icons","SaveButton","__name","hideText","svgIconProps","children","rest","translate","React","import_react","import_core","import_ui_types","import_icons","CloneButton","__name","resourceNameFromProps","resourceNameOrRouteName","recordItemId","hideText","accessControl","svgIconProps","meta","children","onClick","rest","accessControlContext","accessControlEnabled","hideIfUnauthorized","generateCloneUrl","routerType","Link","LegacyLink","ActiveLink","id","resource","translate","data","disabledTitle","cloneUrl","React","e","import_react","import_core","import_ui_types","import_icons","ImportButton","__name","inputProps","hideText","loading","svgIconProps","children","rest","translate","React","import_react","TextField","__name","value","rest","React","import_react","TagField","__name","value","rest","React","import_react","EmailField","__name","value","rest","React","import_react","import_icons","BooleanField","__name","value","valueLabelTrue","valueLabelFalse","trueIcon","falseIcon","svgIconProps","rest","React","import_react","import_dayjs","import_localizedFormat","dayjs","LocalizedFormat","defaultLocale","DateField","__name","value","locales","dateFormat","rest","React","import_react","FileField","__name","title","src","rest","React","UrlField","import_react","UrlField","__name","children","value","title","rest","React","import_react","toLocaleStringSupportsOptions","__name","NumberField","value","locale","options","rest","number","React","import_react","import_react_markdown","import_remark_gfm","MarkdownField","__name","value","React","ReactMarkdown","gfm","React","import_react","ReadyPage","__name","import_react","import_core","WelcomePage","__name","React","WelcomePageFromCore","import_react","import_core","import_icons","ErrorComponent","__name","errorMessage","setErrorMessage","translate","push","go","routerType","resource","action","color","React","import_react","import_react","import_core","import_react_hook_form","layoutProps","cardProps","LoginPage","__name","providers","registerLink","forgotPasswordLink","rememberMe","contentProps","wrapperProps","renderContent","formProps","title","_a","_b","onSubmit","useFormProps","authProvider","login","translate","routerType","NewLink","LegacyLink","Link","methods","register","handleSubmit","errors","renderProviders","React","provider","importantTextColor","PageTitle","ThemedTitle","allContentProps","cardProps","content","data","ChakraLink","allWrapperProps","layoutProps","import_react","import_core","import_react_hook_form","RegisterPage","__name","providers","loginLink","wrapperProps","contentProps","renderContent","formProps","title","_a","_b","onSubmit","useFormProps","routerType","NewLink","LegacyLink","Link","translate","authProvider","mutate","register","handleSubmit","errors","renderProviders","React","provider","importantTextColor","PageTitle","ThemedTitle","allContentProps","cardProps","content","data","ChakraLink","allWrapperProps","layoutProps","import_react","import_core","import_react_hook_form","ForgotPasswordPage","__name","loginLink","wrapperProps","contentProps","renderContent","formProps","title","_a","onSubmit","useFormProps","mutate","translate","routerType","NewLink","LegacyLink","Link","handleSubmit","register","errors","importantTextColor","PageTitle","React","ThemedTitle","allContentProps","cardProps","content","data","ChakraLink","allWrapperProps","layoutProps","import_react","import_core","import_react_hook_form","UpdatePasswordPage","__name","wrapperProps","contentProps","renderContent","formProps","title","_a","_b","onSubmit","useFormProps","translate","authProvider","mutate","register","watch","handleSubmit","errors","importantTextColor","PageTitle","React","ThemedTitle","allContentProps","cardProps","content","data","val","allWrapperProps","layoutProps","AuthPage","__name","props","type","React","RegisterPage","ForgotPasswordPage","UpdatePasswordPage","LoginPage","import_react","import_core","import_icons","Breadcrumb","__name","breadcrumbProps","showHome","hideIcons","meta","_a","_b","routerType","breadcrumbs","Link","LegacyLink","hasDashboard","ActiveLink","resources","rootRouteResource","React","ChakraBreadcrumb","label","icon","href","import_react","import_icons","UndoableNotification","__name","notificationKey","message","cancelMutation","undoableTimeout","toast","React","import_react","import_core","import_icons","AutoSaveIndicator","__name","status","success","React","Message","error","loading","idle","AutoSaveIndicatorCore","key","defaultMessage","icon","translate","import_react","import_theme_tools","refineTheme","refineCustomColors","refineCustomThemes","RefineThemes","acc","key","themeName","props","bgLight","bgDark","import_react","notificationProvider","__name","toast","key","message","type","description","undoableTimeout","cancelMutation","React","UndoableNotification"]}